@{
    ViewData["Title"] = "Map";
}

@inject UserManager<ApplicationUser> UserManager
@model RegisterViewModel
<style>
    #map {
        width: 100%;
        height: 100%;
        overflow: auto;
        padding: 0px;
    }

    #global {
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    #buttons {
        position: absolute;
        top: 0.5em;
        left: 4em;
        z-index: 999;
        color: #474040;
        background-color: white;
        text-align: center;
        padding: 5px;
    }

    .ol-scale-line {
        bottom: 0.5em;
        left: 5em;
    }


    .ol-zoomslider {
        top: 6.5em;
        left: 5em;
    }

    .ol-zoom {
        top: 2.5em;
        left: 5em;
    }

    .ol-popup {
        position: absolute;
        background-color: white;
        -webkit-filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
        filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
        padding: 15px;
        border-radius: 10px;
        border: 1px solid #cccccc;
        bottom: 12px;
        left: -48px;
        min-width: 210px;
        display: none;
    }

        .ol-popup:after, .ol-popup:before {
            top: 100%;
            border: solid transparent;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
        }

        .ol-popup:after {
            border-top-color: white;
            border-width: 10px;
            left: 48px;
            margin-left: -10px;
        }

        .ol-popup:before {
            border-top-color: #cccccc;
            border-width: 11px;
            left: 48px;
            margin-left: -11px;
        }

    .ol-popup-closer {
        text-decoration: none;
        position: absolute;
        top: 2px;
        right: 8px;
    }

        .ol-popup-closer:after {
            content: "✖";
        }

    #viewer li {
        list-style-type: none;
        display: inline-block;
    }

    #video li {
        list-style-type: none;
        display: inline-block;
    }

    #text {
        list-style-type: none;
        margin-top: 10px;
        margin-right: 30px;
    }

    #text_jj, #text_wx, #text_gx, #text_gd {
        list-style-type: none;
        margin-top: 10px;
    }

    #viewer_wx li {
        list-style-type: none;
        display: inline-block;
    }

    #video_wx li {
        list-style-type: none;
        display: inline-block;
    }


    #myModal2, #myModal_jj, #myModal_wx, #myModal_gx, #myModal_gd, #myModalUpdate {
        top: 120px;
    }

    #myModal_qj .modal-lg {
        top: 60px;
        margin-left: 50px;
    }

    #chart-pin {
        color: #fff;
        display: none;
    }

    #kx_building {
        display: none;
    }

    #kxTips {
        display: none;
    }

    #sceneCheck {
        position: absolute;
        top: 0.5em;
        left: 4em;
        z-index: 8;
    }

    #contextmenu_container li {
        list-style-type: none;
        background-color: white;
    }

    #contextmenu_container {
        display: none;
    }

    #layerTree ul {
        list-style-type: none;
        padding-left: 0px;
    }

    #gxLayerTree ul {
        list-style-type: none;
        padding-left: 0px;
    }

    #sub li {
        list-style-type: none;
        padding-left: 25px;
    }

    #sub2 li {
        list-style-type: none;
        padding-left: 25px;
    }

    #sub-ps li {
        list-style-type: none;
        padding-left: 25px;
    }

    #sub-gs li {
        list-style-type: none;
        padding-left: 25px;
    }

    #sub-rl li {
        list-style-type: none;
        padding-left: 25px;
    }

    #sub-wz li {
        list-style-type: none;
        padding-left: 25px;
    }

    #sub-rq li {
        list-style-type: none;
        padding-left: 25px;
    }

    #sub-dl li {
        list-style-type: none;
        padding-left: 25px;
    }

    #sub-dx li {
        list-style-type: none;
        padding-left: 25px;
    }

    #searchBar {
        position: absolute;
        top: 105px;
        right: 140px;
        width: 250px;
        height: 35px;
        z-index: 3;
        display: none;
    }

    .tooltip {
        position: relative;
        background: rgba(0, 0, 0, 0.5);
        border-radius: 4px;
        color: white;
        padding: 4px 8px;
        opacity: 0.7;
        white-space: nowrap;
        z-index: 6 !important;
    }

    .tooltip-measure {
        opacity: 1;
        font-weight: bold;
    }

    .tooltip-static {
        background-color: #ffffff;
        color: black;
        border: 1px solid white;
    }

        .tooltip-measure:before,
        .tooltip-static:before {
            border-top: 6px solid rgba(0, 0, 0, 0.5);
            border-right: 6px solid transparent;
            border-left: 6px solid transparent;
            content: "";
            position: absolute;
            bottom: -6px;
            margin-left: -7px;
            left: 50%;
        }

        .tooltip-static:before {
            border-top-color: #ffffff;
        }

    .hide {
        height: 20px;
    }

    .form-group span.required {
        color: #DC143C;
        font-size: 150%;
    }

    #scaleNumber {
        position: absolute;
        right: 30px;
        bottom: 10px;
        color: white;
        z-index: 999;
        font-size: 14px;
        text-align: center;
        background-color: rgba(90, 147, 253, 0.59);
        border-radius: 3px;
        padding: 3px;
    }
    #building-classes1 a, #building-classes2 a {
        text-decoration: none;
    }

    #loadingMarker {
        position: absolute;
        width: 470px;
        height: 650px;
        background-color: #666;
        opacity: 0.4;
        color: #fff;
        font-size: 50px;
        text-align:center;
        line-height:650px;
        z-index:500;
    }

  

</style>
<div id="global" style="padding-bottom:0px !important;margin-bottom:0px !important">
    <div id="map">
        <!--比例尺-->
        <div id="scaleNumber">1:4514</div>
        <!--建筑小弹窗-->
        <div id="popup" class="ol-popup">
            <a href="#" id="popup-closer" class="ol-popup-closer"> </a>
            <div id="popup-content">
                <h5> </h5> <hr> <a onclick="show()"> 详细信息 > > </a>
            </div>
        </div>

        <!--建筑属性查询弹窗-->
        <div class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel2"></h4>
                    </div>
                    <ul id="text">
                        <li class="top5" style="font-size:15px"><strong>建筑类别:&nbsp;&nbsp;</strong><font id="fontlb"></font></li>
                        <li class="top5" style="font-size:15px"><strong>文字描述:&nbsp;&nbsp;</strong><font id="fontwzms">暂无信息</font></li>
                    </ul>
                    <HR>
                    <ul id="viewer">
                        <li style="font-size:15px"><strong>图片查看:&nbsp;&nbsp;</strong></li>
                        <li><img data-original="/Source/none/pic/1.png" src="~/Source/none/pic/1.png" alt="图片1" style="width:100px"></li>
                    </ul>
                    
                    <ul id="video" style="padding-top:20px;margin-top:20px;border-top:1px solid #ddd;"></ul>
                </div>
            </div>
        </div>

        <!--基建项目查询弹窗-->
        <div class="modal fade" id="myModal_jj" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel_jj"></h4>
                    </div>
                    <div id="text_jj" class="form-inline" style="padding-left:30px">
                        <div class="form-group">
                            <label style="font-size:15px"><strong>项目地点:&nbsp;&nbsp;</strong></label><input id="font_jj_xmdd" class="form-control" disabled="disabled" />
                        </div>
                        <div class="form-group">
                            <label style="font-size:15px"><strong>施工单位:&nbsp;&nbsp;</strong></label><input id="font_jj_sgdw" class="form-control" disabled="disabled" />
                        </div>
                        <div class="form-group top10">
                            <label style="font-size:15px;width:71.44px;text-align:center"><strong>负责人:&nbsp;&nbsp;</strong></label><input id="font_jj_fzr" class="form-control" disabled="disabled" />
                        </div>
                        <div class="form-group top10">
                            <label style="font-size:15px"><strong>联系电话:&nbsp;&nbsp;</strong></label><input id="font_jj_lxdh" class="form-control" disabled="disabled" />
                        </div>
                        <div class="form-group  top10" style="width:257px">
                            <label style="font-size:15px"><strong>建设状态:&nbsp;&nbsp;</strong></label>
                            <select id="font_jj_jszt" class="form-control" disabled="disabled">
                                <option value="筹划">筹划</option>
                                <option value="在建">在建</option>
                                <option value="竣工">竣工</option>
                            </select>
                        </div>
                        <div class="form-group  top10" style="width:257px">
                            <label style="font-size:15px"><strong>建设性质:&nbsp;&nbsp;</strong></label>
                            <select id="font_jj_jsxz" class="form-control" disabled="disabled">
                                <option value="新建">新建</option>
                                <option value="扩建">扩建</option>
                                <option value="改建">改建</option>
                                <option value="重建">重建</option>
                                <option value="技术改造">技术改造</option>
                            </select>
                        </div>
                        <div class="form-group  top10">
                            <label style="font-size:15px"><strong>开工日期:&nbsp;&nbsp;</strong></label><input id="font_jj_kgrq" class="form-control" disabled="disabled" data-date-format="Y/m/d" />
                        </div>
                        <div class="form-group top10">
                            <label style="font-size:15px"><strong>完工日期:&nbsp;&nbsp;</strong></label><input id="font_jj_wgrq" class="form-control" disabled="disabled" data-date-format="Y/m/d" />
                        </div>
                        <div class="form-group top10">
                            <label style="font-size:15px"><strong>预算资金:&nbsp;&nbsp;</strong></label><input id="font_jj_yszj" class="form-control" disabled="disabled" />
                        </div>
                        <div class="form-group top10">
                            <label style="font-size:15px"><strong>实用资金:&nbsp;&nbsp;</strong></label><input id="font_jj_syzj" class="form-control" disabled="disabled" />
                        </div>
                        <div class="form-group top10">
                            <label style="font-size:15px"><strong>项目描述:&nbsp;&nbsp;</strong></label><input id="font_jj_xmms" class="form-control" disabled="disabled" />
                        </div>
                        <div class="form-group top10">
                            <label style="font-size:15px;width:71.44px;text-align:center"><strong>备注:&nbsp;&nbsp;</strong></label><input id="font_jj_bz" class="form-control" disabled="disabled" />
                        </div>
                        <div class="form-group top15" style="margin-bottom:20px;margin-left:230px">
                            <button type="button" id="jj_edit" class="btn btn-primary" onclick="jjDataEdit()">修改</button><input id="font_jj_id" class="form-control" style="display:none;"/>
                        </div>
                       
                    </div>
                </div>
            </div>
        </div>

        <!--维修项目查询弹窗-->
        <div class="modal fade" id="myModal_wx" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel_wx"></h4>
                    </div>
                    <div id="text_wx" class="form-inline" style="padding-left:30px">
                        <div class="form-group" style="width:257px">
                            <label style="font-size:15px"><strong>维修状态:&nbsp;&nbsp;</strong></label>
                            <!--<input id="font_wx_wxzt" class="form-control" disabled="disabled" />-->
                            <select id="font_wx_wxzt" class="form-control" disabled="disabled">
                                <option value="待处理">待处理</option>
                                <option value="已维修">已维修</option>
                            </select>
                        </div>&nbsp;
                        <div class="form-group">
                            <label style="font-size:15px;"><strong>上报日期:&nbsp;&nbsp;</strong></label>
                            <input id="font_wx_sbrq" class="form-control" disabled="disabled" data-date-format="Y/m/d" />
                        </div>
                        <div class="form-group  top10">
                            <label style="font-size:15px"><strong>维修日期:&nbsp;&nbsp;</strong></label>
                            <input id="font_wx_wxrq" class="form-control" disabled="disabled" data-date-format="Y/m/d" />
                        </div>
                        <div class="form-group  top10">
                            <label style="font-size:15px;width:71.44px;text-align:center"><strong>备注:&nbsp;&nbsp;</strong></label>
                            <input id="font_wx_bz" class="form-control" disabled="disabled" />
                        </div>
                        <div class="form-group top10">
                            <label style="font-size:15px;width:71.44px;text-align:center"><strong>位置:&nbsp;&nbsp;</strong></label>
                            <input id="font_wx_wz" class="form-control" disabled="disabled" />
                        </div>
                        <div class="form-group top10">
                            <label style="font-size:15px"><strong>设施类型:&nbsp;&nbsp;</strong></label>
                            <input id="font_wx_sslx" class="form-control" disabled="disabled" />
                        </div>
                        <div class="form-group top10">
                            <label style="font-size:15px"><strong>上报人员:&nbsp;&nbsp;</strong></label>
                            <input id="font_wx_sbry" class="form-control" disabled="disabled" />
                        </div>
                        <div class="form-group top10">
                            <button type="button" id="wx_edit" class="btn btn-primary" onclick="wxDataEdit()">修改</button>
                        </div>

                    </div>
                    <HR>
                    <ul id="viewer_wx">
                        <li style="font-size:15px"><strong>项目图片:&nbsp;&nbsp;</strong></li>
                        <li><img data-original="/Source/none/pic/1.png" src="~/Source/none/pic/1.png" alt="图片1" style="width:100px"></li>
                    </ul>
                    <ul id="video_wx">
                        <li style="font-size:15px"><strong>项目视频:&nbsp;&nbsp;</strong></li>
                    </ul>
                </div>
            </div>
        </div>

        <!--二维管线查询弹窗-->
        <div class="modal fade" id="myModal_gx" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel_gx">管线详细信息</h4>
                    </div>
                    <ul id="text_gx">
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>起点点号:&nbsp;&nbsp;</strong><font id="font_gx_qddh"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>终点点号:&nbsp;&nbsp;</strong><font id="font_gx_zddh"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>起点埋深:&nbsp;&nbsp;</strong><font id="font_gx_qdms"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>终点埋深:&nbsp;&nbsp;</strong><font id="font_gx_zdms"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>起点高程:&nbsp;&nbsp;</strong><font id="font_gx_qdgc"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>终点高程:&nbsp;&nbsp;</strong><font id="font_gx_zdgc"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>材质:&nbsp;&nbsp;</strong><font id="font_gx_cz"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>埋设方式:&nbsp;&nbsp;</strong><font id="font_gx_mxfs"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>管径:&nbsp;&nbsp;</strong><font id="font_gx_gj"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>权属单位:&nbsp;&nbsp;</strong><font id="font_gx_qsdw"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>工程编号:&nbsp;&nbsp;</strong><font id="font_gx_gcbh"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>工程类别:&nbsp;&nbsp;</strong><font id="font_gx_gclb"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>套管材质:&nbsp;&nbsp;</strong><font id="font_gx_tgcz"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>要素代码:&nbsp;&nbsp;</strong><font id="font_gx_ysdm"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>条数:&nbsp;&nbsp;</strong><font id="font_gx_ts"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>压力值:&nbsp;&nbsp;</strong><font id="font_gx_ylz"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>总孔数:&nbsp;&nbsp;</strong><font id="font_gx_zks"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>已用孔数:&nbsp;&nbsp;</strong><font id="font_gx_yyks"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>测量时间:&nbsp;&nbsp;</strong><font id="font_gx_clsj"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>使用状况:&nbsp;&nbsp;</strong><font id="font_gx_syzk"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>流向:&nbsp;&nbsp;</strong><font id="font_gx_lx"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>所在位置:&nbsp;&nbsp;</strong><font id="font_gx_szwz"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>管线范畴:&nbsp;&nbsp;</strong><font id="font_gx_gxfc"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>入库时间:&nbsp;&nbsp;</strong><font id="font_gx_rksj"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>更新时间:&nbsp;&nbsp;</strong><font id="font_gx_gxsj"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>是否利用:&nbsp;&nbsp;</strong><font id="font_gx_sfly"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>更新状态:&nbsp;&nbsp;</strong><font id="font_gx_gxzt"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>唯一标识:&nbsp;&nbsp;</strong><font id="font_gx_wybs"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>备注:&nbsp;&nbsp;</strong><font id="font_gx_bz"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>管段编号:&nbsp;&nbsp;</strong><font id="font_gx_gdbh"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>线型:&nbsp;&nbsp;</strong><font id="font_gx_xx"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>建设日期:&nbsp;&nbsp;</strong><font id="font_gx_jsrq"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>是否长输:&nbsp;&nbsp;</strong><font id="font_gx_sfcs"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>管线长度:&nbsp;&nbsp;</strong><font id="font_gx_gxcd"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>探测单位:&nbsp;&nbsp;</strong><font id="font_gx_tcdw"></font></li>
                    </ul>
                </div>
            </div>
        </div>

        <!--二维管点查询弹窗-->
        <div class="modal fade" id="myModal_gd" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel_gd">管点详细信息</h4>
                    </div>
                    <ul id="text_gd">
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>管点编号:&nbsp;&nbsp;</strong><font id="font_gd_gdbh"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>图上点号:&nbsp;&nbsp;</strong><font id="font_gd_tsbh"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>测量点号:&nbsp;&nbsp;</strong><font id="font_gd_cldh"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>X坐标:&nbsp;&nbsp;</strong><font id="font_gd_x"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>Y坐标:&nbsp;&nbsp;</strong><font id="font_gd_y"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>地面高程:&nbsp;&nbsp;</strong><font id="font_gd_dmgc"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>特征:&nbsp;&nbsp;</strong><font id="font_gd_tz"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>附属物:&nbsp;&nbsp;</strong><font id="font_gd_fsw"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>井盖类型:&nbsp;&nbsp;</strong><font id="font_gd_jglx"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>井盖规格:&nbsp;&nbsp;</strong><font id="font_gd_jggg"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>井盖材质:&nbsp;&nbsp;</strong><font id="font_gd_jgcz"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>工程编号:&nbsp;&nbsp;</strong><font id="font_gd_gcbh"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>工程类别:&nbsp;&nbsp;</strong><font id="font_gd_gclb"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>要素代码:&nbsp;&nbsp;</strong><font id="font_gd_ysdm"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>图幅号:&nbsp;&nbsp;</strong><font id="font_gd_tfh"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>测量时间:&nbsp;&nbsp;</strong><font id="font_gd_clsj"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>权属单位:&nbsp;&nbsp;</strong><font id="font_gd_qsdw"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>数据来源:&nbsp;&nbsp;</strong><font id="font_gd_sjly"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>获取时机:&nbsp;&nbsp;</strong><font id="font_gd_hqsj"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>偏心井点号:&nbsp;&nbsp;</strong><font id="font_gd_pxjdh"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>偏距:&nbsp;&nbsp;</strong><font id="font_gd_pj"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>旋转角度:&nbsp;&nbsp;</strong><font id="font_gd_xzjd"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>所在位置:&nbsp;&nbsp;</strong><font id="font_gd_szwz"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>管点范畴:&nbsp;&nbsp;</strong><font id="font_gd_gdfc"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>入库时间:&nbsp;&nbsp;</strong><font id="font_gd_rksj"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>更新时间:&nbsp;&nbsp;</strong><font id="font_gd_gxsj"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>是否利用:&nbsp;&nbsp;</strong><font id="font_gd_sfly"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>更新状态:&nbsp;&nbsp;</strong><font id="font_gd_gxzt"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>唯一标识:&nbsp;&nbsp;</strong><font id="font_gd_wybs"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>备注:&nbsp;&nbsp;</strong><font id="font_gd_bz"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>物探点号:&nbsp;&nbsp;</strong><font id="font_gd_wtdh"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>井底深:&nbsp;&nbsp;</strong><font id="font_gd_jds"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>建设日期:&nbsp;&nbsp;</strong><font id="font_gd_jsrq"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>是否长输:&nbsp;&nbsp;</strong><font id="font_gd_sfcs"></font></li>
                        <li class="top5" style="font-size:15px;display:inline-block;width:250px"><strong>探测单位:&nbsp;&nbsp;</strong><font id="font_gd_tcdw"></font></li>
                    </ul>
                </div>
            </div>
        </div>

        <!--全景弹窗-->
        <div class="modal fade" id="myModal_qj" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog modal-lg" role="document">
                <div id="myModal_qj_content" class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel_qj"></h4>
                    </div>
                    <div id="pano" style="width:100%;height:600px">
                        <noscript><table style="width:100%;height:100%;"><tr style="vertical-align:middle;text-align:center;"><td>ERROR:<br><br>Javascript not activated<br><br></td></tr></table></noscript>
                    </div>
                </div>
            </div>
        </div>

        <!--道路搜索条-->
        <div class="input-group" id="searchBar">
            <select id="text-search" class="select2" style="width:250px">
                <option value="" selected="selected">道路检索</option>
                <option value="金海路">金海路</option>
                <option value="樱海路">樱海路</option>
                <option value="银海路">银海路</option>
                <option value="桃海路">桃海路</option>
            </select>
            <script>$("#text-search").select2({ language: 'zh-CN' });</script>
            <span class="input-group-btn">
                <button class="btn btn-info" id="btn-search" type="button" style="background-color:#0691ce;height:28px;"><span class="glyphicon glyphicon-search"></span></button>
            </span>
        </div>

        <!--密码修改-->
        <div class="modal fade" id="myModalUpdate" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title" id="myModalLabel">密码修改</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-6 col-md-offset-3">

                                <div class="form-group">
                                    <label for="nameInput">用户名</label>
                                    <input id="nameInput" class="form-control" readonly="readonly" value="@UserManager.GetUserName(User)" />
                                </div>
                                <div class="form-group">
                                    <label for="emailInput">邮箱</label>
                                    <input id="emailInput" class="form-control" readonly="readonly" value="@UserManager.GetUserAsync(User).Result.Email" />
                                </div>
                                <div class="form-group">
                                    <label for="oldPassword">原始密码</label>
                                    <input id="oldPassword" class="form-control" />
                                </div>
                                <div class="form-group">
                                    <label for="newPassword">新密码</label>
                                    <input id="newPassword" class="form-control" />
                                </div>
                                <button id="submitNewPassword" class="btn btn-default">修改</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <a id="capture" href="#"></a><!--虚拟下载按钮-->
    </div>

    <!------POI查询面板------>
    <div id="dropdown-menu-poi" class="dropdown-menu-poi">
        <button type="button" id="close-panel-bt" class="close" onclick="toggleWindow('poi')" aria-hidden="true" style="color:#212529;">&times;</button>
        <button type="button" id="close-panel-bt" class="close" onclick="smallWindow('poi')" aria-hidden="true" style="color:#212529;margin-right:10px">—</button>
        <h3>信息数据查询</h3>
        <div class="row top30 " id="building-classes1">
            <div class="col-md-12">
                <div class="col-md-3"><a title="教学楼" id="btn-jxl" href="javascript:void(0);" onclick="search_method('jxl')"><img src="~/images/icon/default_nearby_icon_hotel@3x.png" width="35" />&nbsp;教学楼</a></div>
                <div class="col-md-3 "><a title="古建筑" id="btn-gjz" href="javascript:void(0);" onclick="search_method('gjz')"><img src="~/images/icon/default_spothome_feature_temple@3x.png" width="35" />&nbsp;古建筑</a></div>
                <div class="col-md-3"><a title="校内单位" id="btn-xndw" href="javascript:void(0);" onclick="search_method('xndw')"><img src="~/images/icon/college@3x.png" width="35" />&nbsp;校内单位</a></div>
                <div class="col-md-3"><a title="学生公寓" id="btn-ss" href="javascript:void(0);" onclick="search_method('ss')"><img src="~/images/icon/default_path_search_toilet_normal@3x.png" width="35" />&nbsp;学生公寓</a></div>
            </div>
        </div>
        <div class="row top10">
            <div class="col-md-12" id="building-classes1">
                <div class="col-md-3"><a title="餐厅" id="btn-ct" href="javascript:void(0);" onclick="search_method('ct')"><img src="~/images/icon/default_nearby_icon_food@3x.png" width="35" />&nbsp;餐厅</a></div>
                <div class="col-md-3"><a title="商店" id="btn-sd" href="javascript:void(0);" onclick="search_method('sd')"><img src="~/images/icon/default_nearby_icon_bank@3x.png" width="35" />&nbsp;商店</div>
                <div class="col-md-3"><a title="景点" id="btn-jd" href="javascript:void(0);" onclick="search_method('jd')"><img src="~/images/icon/default_nearby_icon_scene@3x.png" width="35" />&nbsp;景点</a></div>
                <div class="col-md-3"><a title="体育场" id="btn-tyc" href="javascript:void(0);" onclick="search_method('tyc')"><img src="~/images/icon/default_voiceguide_bus@3x.png" width="35" />&nbsp;体育场</a></div>
            </div>
        </div>
        <div class="top10">
            <select id="building-search" class="select2" style="width:250px;display:none"></select>
        </div>
        <script>$("#building-search").select2({ language: 'zh-CN' });</script>
        <div id="table_building" class="top10"></div>
        <div class="form-inline top10">
            <div class="form-group">
                查询条件：
                <select id="filter-field" type="text" class="form-control" style="width:105px">
                    <option value="1">--------------</option>
                    <option value="MC">建筑名称</option>
                    <option value="LB">类别</option>
                    <option value="XLB">细类别</option>
                </select>
            </div>
            <!--<div class="form-group">
                        方法：
                        <select type="text" id="filter-type" class="form-control" style="margin-bottom:5px;width:105px;">
                            <option value="1">--------------</option>
                            <option value="like">模糊搜索</option>
                            <option value="=">准确搜索</option>
                            <option value="<"><</option>
            <option value=">">></option>
                    </select>
                </div>-->
            <div class="form-group">
                查询值：
                <input type="text" id="filter-value" class="form-control" style="width:120px;">
                <button type="button" id="filter-clear" class="btn btn-danger">清除</button>
            </div>
        </div>

    </div>

    <!------POI统计面板------>
    <div id="dropdown-menu-kx" class="dropdown-menu-kx">
        <button type="button" id="close-panel-bt" class="close" onclick="toggleWindow('poiTJ')" aria-hidden="true" style="color:#212529;">&times;</button>
        <button type="button" id="close-panel-bt" class="close" onclick="smallWindow('poiTJ')" aria-hidden="true" style="color:#212529;margin-right:10px">—</button>
        <div class="x_panel">
            <h3>信息数据统计</h3>
            <p class="top15">点击按钮在地图进行框选</p>
            <div class="form-inline">
                <div class="form-group">
                    <select style="width:130px; color:black" id="kxtc" class="form-control">
                        <option value="no">全部图层</option>
                        <!--<option value="jjxm">基建项目</option>-->
                        <option value="ss">学生公寓</option>
                        <option value="gjz">古建筑</option>
                        <option value="jxl">教学楼</option>
                        <option value="xndw">校内单位</option>
                        <option value="ct">餐厅</option>
                        <option value="tyc">体育场</option>
                        <option value="yl">医疗</option>
                        <option value="jd">景点</option>
                    </select>
                </div>&nbsp;&nbsp;&nbsp;
                <div class="form-group">
                    <button type="button" id="kx" class="btn btn-warning" data-toggle="button" value="LineString">框选</button>
                    <button type="button" id="qx" class="btn btn-warning" data-toggle="button" value="LineString">圈选</button>
                </div>&nbsp;
                <div class="form-group">
                    <button type="button" id="kx_qc" class="btn btn-danger" data-toggle="button" value="LineString">清除</button>
                </div>&nbsp;&nbsp;&nbsp;
                <div class="form-group">
                    <select style="width:130px; color:black;display:none" id="chart-c" class="form-control">
                        <option value="option">饼状图</option>
                        <option value="option2">柱状图</option>
                        <option value="option3">折线图</option>
                    </select>
                </div>
            </div>

            <div id="chart-pin" class="top15" style="width: 480px;height:400px;"></div>
            <div id="kx_building" class="top15"></div>
            <div id="kxTips" class="form-group top10">
                您一共框选了 <span id="kxNum" style="font-weight:bold;text-decoration:underline">&nbsp;&nbsp;&nbsp;</span> 栋建筑！
            </div>
        </div>
    </div>

    <!------基建录入面板------>
    <div id="dropdown-menu-jjlr" class="dropdown-menu-jjlr">
        <button type="button" id="close-panel-bt" class="close" onclick="toggleWindow('jjlr')" aria-hidden="true" style="color:#212529;">&times;</button>
        <button type="button" id="close-panel-bt" class="close" onclick="smallWindow('jjlr')" aria-hidden="true" style="color:#212529;margin-right:10px">—</button>
        <div class="x_panel">
            <form class="form-horizontal" role="form">
                <fieldset>
                    <legend>基建项目信息录入<span style="color:rgba(0,0,0,0.6);font-size:0.7em;"> (*为必填选项)</span></legend>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="jjlr_geom"><span class="required">*</span>坐标:</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="jjlr_geom" placeholder="请在地图上绘制点..." disabled="disabled" />
                        </div>
                        <div class="col-sm-4 form-inline">
                            <button type="button" id="jj_point" class="form-control" style="padding:0px;width:40px;" onclick=drawFunction("Point") title="绘制点"><i class="fa fa-dot-circle-o"></i></button>
                            <button type="button" id="jj_line" class="form-control" style="padding:0px;width:40px;" onclick=drawFunction("LineString") title="绘制线"><i class="fa fa-minus"></i></button>
                            <button type="button" id="jj_polygon" class="form-control" style="padding:0px;width:40px;" autofocus="autofocus" onclick=drawFunction("Polygon") title="绘制多边形"><i class="fa fa-object-ungroup"></i></button>
                        </div>
                        <!--<div class="col-sm-4">
                            <button type="button" id="delete_jj" class="btn btn-danger" data-dismiss="modal" >重新绘制</button>
                        </div>-->
                    </div>
                    <div class="form-group">
                        <div class="col-sm-2">
                        </div>
                        <span class="col-sm-10" style="color:rgba(0,0,0,0.6);"><i class='fa fa-question-circle-o'></i> 在地图上点击鼠标左键进行点绘制</span>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="jjlr_xmmc"><span class="required">*</span>项目名称:</label>
                        <div class="col-sm-10">
                            <input type="text" name="txt_name" class="form-control" id="jjlr_xmmc" placeholder="输入项目名称" required="required" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="jjlr_xmms">项目描述:</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="jjlr_xmms" placeholder="输入项目描述信息" required="required" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="jjlr_sgdw">施工单位:</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="jjlr_sgdw" placeholder="输入施工单位" required="required" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="jjlr_fzr">负责人:</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="jjlr_fzr" placeholder="输入负责人姓名" required="required" />
                        </div>
                        <label class="col-sm-2 control-label" for="jjlr_lxdh">联系电话:</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="jjlr_lxdh" placeholder="输入联系电话" required="required" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="jjlr_jszt">建设状态:</label>
                        <div class="col-sm-4">
                            <select id="jjlr_jszt" class="form-control">
                                <option value="筹划">筹划</option>
                                <option value="在建">在建</option>
                                <option value="竣工">竣工</option>
                            </select>
                        </div>
                        <label class="col-sm-2 control-label" for="jjlr_jsxz">建设性质:</label>
                        <div class="col-sm-4">
                            <select id="jjlr_jsxz" class="form-control">
                                <option value="新建">新建</option>
                                <option value="扩建">扩建</option>
                                <option value="改建">改建</option>
                                <option value="重建">重建</option>
                                <option value="技术改造">技术改造</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="jjlr_kgsj">开工日期:</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="jjlr_kgsj" required="required" data-date-format="Y/m/d" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="jjlr_wgsj">完工日期:</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="jjlr_wgsj" required="required" data-date-format="Y/m/d" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="jjlr_yszj">预算资金:</label>
                        <div class="col-sm-4">
                            <input type="text" id="jjlr_yszj" class="form-control" placeholder="单位：人民币" />
                        </div>
                        <label class="col-sm-2 control-label" for="jjlr_syzj">实用资金:</label>
                        <div class="col-sm-4">
                            <input type="text" id="jjlr_syzj" class="form-control" placeholder="单位：人民币"  />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="jjlr_xmdd">项目地点:</label>
                        <div class="col-sm-10">
                            <input type="text" id="jjlr_xmdd" class="form-control" placeholder="地点描述" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="jjlr_bz">项目备注:</label>
                        <div class="col-sm-10">
                            <input type="text" id="jjlr_bz" class="form-control" placeholder="备注信息" />
                        </div>
                    </div>
                </fieldset>
                <fieldset>
                    <legend></legend>
                    <button type="button" class="btn btn-default" data-dismiss="modal" onclick="cleanInfo_jjlr()"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span>清除</button>
                    <button type="button" id="btn_submit_jjlr" class="btn btn-primary" data-dismiss="modal" onclick="saveInfo_jjlr()"><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>保存</button>
                </fieldset>
            </form>
        </div>
    </div>

    <!------基建查询面板------>
    <div id="dropdown-menu-jjcx" class="dropdown-menu-jjcx">
        <button type="button" id="close-panel-bt" class="close" onclick="toggleWindow('jjcx')" aria-hidden="true" style="color:#212529;">&times;</button>
        <button type="button" id="close-panel-bt" class="close" onclick="smallWindow('jjcx')" aria-hidden="true" style="color:#212529;margin-right:10px">—</button>
        <div class="x_panel">
            <h3>基建项目信息查询</h3>
            <div class="form-inline" style="margin-top:30px">
                <h4><i class="fa fa-file-text-o"></i>&nbsp;条件查询</h4>
                <div class="form-group">
                    查询条件：
                    <select id="filter-field2" type="text" class="form-control" style="width:105px">
                        <option value="1">----------------</option>
                        <option value="MC">项目名称</option>
                        <option value="XMDD">项目地点</option>
                        <option value="SGDW">施工单位</option>
                        <option value="FZR">负责人</option>
                        <option value="LXDH">联系电话</option>
                        <option value="JSZT">建设状态</option>
                        <option value="JSXZ">建设性质</option>
                        <option value="KGRQ">开工日期</option>
                        <option value="WGRQ">完工日期</option>
                        <option value="YSZJ">预算资金</option>
                        <option value="SYZJ">实用资金</option>
                        <option value="XMMS">项目描述</option>
                        <option value="BZ">备注</option>
                    </select>
                </div>
                <!--<div class="form-group">
                    方法：
                    <select type="text" id="filter-type2" class="form-control" style="margin-bottom:5px;width:105px;">
                        <option value="1">-----------------</option>
                        <option value="like">模糊搜索</option>
                        <option value="<"><</option>
                        <option value=">">></option>
                    </select>
                </div>-->
                <div class="form-group">
                    查询值：
                    <input type="text" id="filter-value2" class="form-control" style="width:120px;">
                </div>
                <button type="button" id="filter-clear2" class="btn btn-danger">清除</button>
              
                <!--<div class="top10 form-inline">
                    <h4><i class="fa fa-file-text-o"></i>&nbsp;智能搜索</h4>
                    <select id="jj_search" class="select2" style="width:250px;display:block"></select>
                </div>
                <script>$("#jj_search").select2({ language: 'zh-CN' });</script>-->
            </div>


            <div id="table_jj" class="top10"></div>
            <div id="table_jj_tj" class="top10 form-inline">
                <h4><i class="fa fa-file-text-o"></i>&nbsp;查询统计结果</h4>
                项目个数(总)：<input type="text" disabled="disabled" id="jjcx_tj_xmgs" class="form-control" style="width:100px;font-weight:bolder">
                实用资金(总)：<input type="text" disabled="disabled" id="jjcx_tj_syzj" class="form-control" style="width:100px;font-weight:bolder">
            </div>
        </div>
    </div>

    <!------维修上报面板------>
    <div id="dropdown-menu-wxlr" class="dropdown-menu-wxlr">
        <button type="button" id="close-panel-bt" class="close" onclick="toggleWindow('wxlr')" aria-hidden="true" style="color:#212529;">&times;</button>
        <button type="button" id="close-panel-bt" class="close" onclick="smallWindow('wxlr')" aria-hidden="true" style="color:#212529;margin-right:10px">—</button>
        <div class="x_panel">
            <form class="form-horizontal" role="form" style="margin-bottom:50px" accept-charset="UTF-8">
                <fieldset>
                    <legend>维修信息上报<span style="color:rgba(0,0,0,0.6);font-size:0.7em;"> (*为必填选项)</span></legend>
                    <div class="form-group">
                        <label class="col-sm-1 control-label" for="wxsb_geom"> <span class="required">*</span>坐标:</label>
                        <div class="col-sm-5">
                            <input type="text" name="txt_geom" class="form-control" id="wxsb_geom" placeholder="请在地图上绘制点..." disabled="disabled" />
                        </div>
                        <div class="col-sm-6">
                            <button type="button" id="delete_wx" class="btn btn-danger" data-dismiss="modal">重新绘制</button>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-5 col-sm-offset-1">
                            <span style="color:rgba(0,0,0,0.6);"><i class='fa fa-question-circle-o'></i>在地图上点击鼠标左键进行点绘制</span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-1 control-label" for="wxsb_sslx"><span class="required">*</span>类型:</label>
                        <div class="col-sm-3">
                            <!--<input type="text" name="txt_name" class="form-control" id="wxsb_sslx" placeholder="输入设施类型" required="required" />-->
                            <input type="text" name="txt_name" class="form-control" id="wxsb_sslx" placeholder="输入设施类型" required="required" list="companys" />
                            <datalist id="companys">
                                <option value="门窗损坏"></option>
                                <option value="墙皮脱落"></option>
                                <option value="地面坍塌"></option>
                            </datalist>
                        </div>
                        <label class="col-sm-1 control-label" for="wxsb_wxzt"><span class="required">*</span>状态:</label>
                        <div class="col-sm-3">
                            <select id="wxsb_wxzt" class="form-control">
                                <option value="待处理">待处理</option>
                                <option value="已维修">已维修</option>
                            </select>
                        </div>
                        <label class="col-sm-1 control-label" for="wxsb_sbry"><span class="required">*</span>上报人:</label>
                        <div class="col-sm-3">
                            <input class="form-control" id="wxsb_sbry" disabled="disabled" value="@UserManager.GetUserName(User)" />

                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-1 control-label" for="wxsb_sbrq" style="padding:7px 0px 0px 0px"><span class="required">*</span>上报日期:</label>
                        <div class="col-sm-3">
                            <input type="text" name="txt_startTime_wxsb" class="form-control" id="wxsb_sbrq" required="required" data-date-format="Y/m/d" />
                        </div>
                        <label class="col-sm-1 control-label" for="wxsb_wxrq" style="padding:7px 0px 0px 0px">维修日期:</label>
                        <div class="col-sm-3">
                            <input type="text" name="txt_startTime_wxsb" class="form-control" id="wxsb_wxrq" required="required" data-date-format="Y/m/d" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-1 control-label" for="wxsb_wz">位置:</label>
                        <div class="col-sm-3">
                            <input type="text" name="txt_geom" class="form-control" id="wxsb_wz" placeholder="位置描述..." />
                        </div>
                        <label class="col-sm-1 control-label" for="wxsb_bz">备注:</label>
                        <div class="col-sm-3">
                            <input type="text" name="txt_name" class="form-control" id="wxsb_bz" placeholder="请输入问题详细信息..." required="required" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-1 control-label" for="imageUpload">图片:</label>
                        <div id="imageUpload1" class="col-sm-5">
                            <input id="imageUpload" type="file" name="uploadfiles" multiple class="file-loading" data-preview-file-type="image" />
                        </div>
                        <label class="col-sm-1 control-label" for="videoUpload">视频:</label>
                        <div id="videoUpload1" class="col-sm-5">
                            <input id="videoUpload" type="file" name="uploadfiles" />
                        </div>
                    </div>
                </fieldset>
                <fieldset>
                    <legend></legend>
                    <button type="button" class="btn btn-default" data-dismiss="modal" onclick="cleanInfo_wxsb()"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span>清除</button>
                    <button type="button" id="btn_submit_wxsb" class="btn btn-primary" data-dismiss="modal" onclick="saveInfo_wxsb()"><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>保存</button>
                </fieldset>
            </form>
        </div>
    </div>

    <!------维修查询面板------>
    <div id="dropdown-menu-wxcx" class="dropdown-menu-wxcx">
        <button type="button" id="close-panel-bt" class="close" onclick="toggleWindow('wxcx')" aria-hidden="true" style="color:#212529;">&times;</button>
        <button type="button" id="close-panel-bt" class="close" onclick="smallWindow('wxcx')" aria-hidden="true" style="color:#212529;margin-right:10px">—</button>
        <div class="x_panel">
            <h3>维修上报信息查询</h3>
            <div class="form-inline" style="margin-top:30px">
                <div class="form-group">
                    查询条件：
                    <select id="filter-field3" type="text" class="form-control" style="width:105px">
                        <option value="1">-----------------</option>
                        <option value="SSLX">设施类型</option>
                        <option value="SBRY">上报人员</option>
                        <option value="WZ">位置</option>
                        <option value="WXZT">维修状态</option>
                        <option value="SBRQ">上报日期</option>
                        <option value="BZ">备注</option>
                    </select>
                </div>
                <!--<div class="form-group">
                    方法：
                    <select type="text" id="filter-type3" class="form-control" style="margin-bottom:5px;width:105px;">
                        <option value="1">-----------------</option>
                        <option value="like">模糊搜索</option>
                        <option value="<"><</option>
                        <option value=">">></option>
                    </select>
                </div>-->
                <div class="form-group">
                    查询值：
                    <input type="text" id="filter-value3" class="form-control" style="width:120px;">
                    <button type="button" id="filter-clear3" class="btn btn-danger">清除</button>
                    <button type="button" id="wx_update" class="btn " style="background-color:rgba(0,0,0,0.1);color:rgba(0, 0, 0, 0.5)"><i class="fa fa-repeat"></i></button>
                </div>
            </div>

            <div id="table_wx" class="top10"></div>
            <div id="table_wx_tj" class="top10 form-inline">
                <h4><i class="fa fa-file-text-o"></i>&nbsp;查询统计结果</h4>
                维修个数(总)：<input type="text" disabled="disabled" id="wxsb_tj_xmgs" class="form-control" style="width:100px;font-weight:bolder">
            </div>
        </div>
    </div>

    <!------二维管线面板------>
    <div id="dropdown-menu-ewgx" class="dropdown-menu-ewgx">
        <button type="button" id="small-panel-bt" class="close" onclick="toggleWindow('ewgx')" aria-hidden="true" style="color:#212529;">&times;</button>
        <button type="button" id="close-panel-bt" class="close" onclick="smallWindow('ewgx')" aria-hidden="true" style="color:#212529;margin-right:10px">—</button>
        <div class="x_panel">
            <h3>管线管点查询</h3>
            <button type="button" id="changeLayer" title="图层 展开/收起" class="btn btn-success" style="display:inline-block;position:absolute;left:13px;top:68px;z-index:999"><i class="fa fa-angle-double-right"></i></button>
            <div id="gxLayerTree" class="col-lg-1" style="background-color:antiquewhite;overflow:auto;height:738px;">
                <h4>&nbsp;</h4>
                <ul>
                    <li>
                        <input type="checkbox" id="psgx" /><label class="folderOne" id="folder-ps">&nbsp;<i class="fa fa-folder-o"></i>&nbsp;排水<img src="~/images/on.png" style="margin-left:25px" /></label>
                        <ul id="sub-ps" class="sub-ps">
                            <li class="file-folderOne"><input type="checkbox" id="ps_ws_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;污水管线</li><!--checked="checked" -->
                            <li class="file-folderOne"><input type="checkbox" id="ps_ws_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;污水管点</li>
                            <li class="file-folderOne"><input type="checkbox" id="ps_ys_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;雨水管线</li>
                            <li class="file-folderOne"><input type="checkbox" id="ps_ys_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;雨水管点</li>
                            <li class="file-folderOne"><input type="checkbox" id="ps_aq_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;暗渠管线</li>
                            <li class="file-folderOne"><input type="checkbox" id="ps_aq_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;暗渠管点</li>
                        </ul>
                    </li>
                    <li>
                        <input type="checkbox" id="rqgx" /><label class="folderOne" id="folder-rq">&nbsp;<i class="fa fa-folder-o"></i>&nbsp;燃气<img src="~/images/on.png" style="margin-left:25px" /></label>
                        <ul id="sub-rq" class="sub-rq">
                            <li class="file-folderOne"><input type="checkbox" id="rq_tr_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;天燃气管线</li>
                            <li class="file-folderOne"><input type="checkbox" id="rq_tr_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;天燃气管点</li>
                        </ul>
                    </li>
                    <li>
                        <input type="checkbox" id="gsgx" /><label class="folderOne" id="folder-gs">&nbsp;<i class="fa fa-folder-o"></i>&nbsp;给水<img src="~/images/on.png" style="margin-left:25px" /></label>
                        <ul id="sub-gs" class="sub-gs">
                            <li class="file-folderOne"><input type="checkbox" id="js_ss_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;饮用水(上水)管线</li>
                            <li class="file-folderOne"><input type="checkbox" id="js_ss_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;饮用水(上水)管点</li>
                        </ul>
                    </li>
                    <li>
                        <input type="checkbox" id="dlgx" /><label class="folderOne" id="folder-dl">&nbsp;<i class="fa fa-folder-o"></i>&nbsp;电力<img src="~/images/on.png" style="margin-left:25px" /></label>
                        <ul id="sub-dl" class="sub-dl">
                            <li class="file-folderOne"><input type="checkbox" id="dl_gd_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;供电管线</li>
                            <li class="file-folderOne"><input type="checkbox" id="dl_gd_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;供电管点</li>
                            <li class="file-folderOne"><input type="checkbox" id="dl_ld_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;路灯管线</li>
                            <li class="file-folderOne"><input type="checkbox" id="dl_ld_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;路灯管点</li>
                        </ul>
                    </li>
                    <li>
                        <input type="checkbox" id="dxgx" /><label class="folderOne" id="folder-dx">&nbsp;<i class="fa fa-folder-o"></i>&nbsp;电信<img src="~/images/on.png" style="margin-left:25px" /></label>
                        <ul id="sub-dx" class="sub-dx">
                            <li class="file-folderOne"><input type="checkbox" id="dx_tx_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;通讯管线</li>
                            <li class="file-folderOne"><input type="checkbox" id="dx_tx_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;通讯管点</li>
                            <li class="file-folderOne"><input type="checkbox" id="dx_ex_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;电力载波管线</li>
                            <li class="file-folderOne"><input type="checkbox" id="dx_ex_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;电力载波管点</li>
                            <li class="file-folderOne"><input type="checkbox" id="dx_dt_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;中国电信管线</li>
                            <li class="file-folderOne"><input type="checkbox" id="dx_dt_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;中国电信管点</li>
                            <li class="file-folderOne"><input type="checkbox" id="dx_yx_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;中国移动管线</li>
                            <li class="file-folderOne"><input type="checkbox" id="dx_yx_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;中国移动管点</li>
                            <li class="file-folderOne"><input type="checkbox" id="dx_lx_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;中国联通管线</li>
                            <li class="file-folderOne"><input type="checkbox" id="dx_lx_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;中国联通管点</li>
                            <li class="file-folderOne"><input type="checkbox" id="dx_jk_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;监控信号管线</li>
                            <li class="file-folderOne"><input type="checkbox" id="dx_jk_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;监控信号管点</li>
                            <li class="file-folderOne"><input type="checkbox" id="dx_jy_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;军用管线</li>
                            <li class="file-folderOne"><input type="checkbox" id="dx_jy_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;军用管点</li>
                        </ul>
                    </li>
                    <li>
                        <input type="checkbox" id="rlgx" /><label class="folderOne" id="folder-rl">&nbsp;<i class="fa fa-folder-o"></i>&nbsp;热力<img src="~/images/on.png" style="margin-left:25px" /></label>
                        <ul id="sub-rl" class="sub-rl">
                            <li class="file-folderOne"><input type="checkbox" id="rl_rs_line" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;热水管线</li>
                            <li class="file-folderOne"><input type="checkbox" id="rl_rs_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;热水管点</li>
                        </ul>
                    </li>
                    <li>
                        <input type="checkbox" id="wzgx" /><label class="folderOne" id="folder-rl">&nbsp;<i class="fa fa-folder-o"></i>&nbsp;不明<img src="~/images/on.png" style="margin-left:25px" /></label>
                        <ul id="sub-wz" class="sub-wz">
                            <li class="file-folderOne"><input type="checkbox" id="wz_wz_point" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;不明管点</li>
                        </ul>
                    </li>
                </ul>
            </div>
            <div id="gxLayerTable" class="col-lg-11">
                <div id="title_gx" class="gx" onselectstart="return false">

                    <button type="button" id="dx-gx" class="btn btn-warning" data-toggle="button" value="LineString" style="margin-left:10px;" title="点选"><i class="fa fa-dot-circle-o"></i></button>
                    <button type="button" id="kx-gx" class="btn btn-warning" data-toggle="button" value="LineString" style="margin-left:5px" title="框选"><i class="fa fa-square-o"></i></button>
                    <button type="button" id="qx-gx" class="btn btn-warning" data-toggle="button" value="LineString" style="margin-left:5px" title="缓冲区选"><i class="fa fa-circle-o"></i></button>
                    <button type="button" id="dbxx-gx" class="btn btn-warning" data-toggle="button" value="LineString" style="margin-left:5px" title="多边形选"><i class="fa fa-object-ungroup"></i></button>
                    <button type="button" id="changeTable" class="btn btn-info" style="display:none;margin-left:10px">图表模式</button>

                    <div class="top10" style="font-size:15px">
                        <label class="radio-inline">
                            <input type="radio" name="optionsRadiosinline" id="gx" value="option1" checked> <span id="gxText" style="color:cornflowerblue">管线</span>
                        </label>
                        <label class="radio-inline">
                            <input type="radio" name="optionsRadiosinline" id="gd" value="option2"> <span id="gdText">管点</span>
                        </label>
                        <label class="radio-inline" id="tjtj">
                            <input type="radio" name="optionsRadiosinline" id="tj" value="option3"> <span id="tjText">统计</span>
                        </label>
                        <select id="filter-field-gxLayer" type="text" class="form-control" style="margin-left:10px; width:105px;display:inline-block">
                            <option value="">管线类型</option>
                        </select>
                        <select style="width:100px; color:black;margin-left:10px;" id="gxdchart-c" class="form-control ">
                            <option value="option11">饼状图</option>
                            <option value="option22">柱状图</option>
                            <option value="option33">折线图</option>
                        </select>
                        <button type="button" id="showTable" title="表格 展开/收起" class="btn btn-info" style="display:inline-block;position:absolute;left:310px;top:44px;z-index:999"><i class="fa fa-angle-double-up"></i></button>
                        <button type="button" id="exportTable" title="导出表格" class="btn btn-info" style="display:inline-block;position:absolute;left:350px;top:44px;z-index:999"><i class="fa fa-file-o"></i></button>
                    </div>
                  
                </div>
                <div id="allTable">
                    <div id="loadingMarker" >加载中...</div>
                    <div id="table_gx" class="top10"></div>
                    <div id="table_gd" class="top10" style="display:none"></div>
                    <div id="table_gdx" class="top10"></div>
                    <div id="gxchart" class="top15" style="width: 480px;height:670px;"></div>
                    <div id="gdchart" class="top15" style="width: 480px;height:670px;"></div>
                    <div id="filterMenu" class="form-inline top10" style="display:block;">
                        <div class="form-group">
                            类型：
                            <select id="filter-field-gx" type="text" class="form-control" style="width:90px">
                                <option value="1">--------------</option>
                                <option value="权属单位">权属单位</option>
                                <option value="起点埋深">起点埋深</option>
                                <option value="终点埋深">起点埋深</option>
                                <option value="材质">材质</option>
                                <option value="埋设方式">埋设方式</option>
                                <option value="附属物">附属物</option>
                            </select>
                        </div>
                        <div class="form-group">
                            &nbsp;范围：
                            <select type="text" id="filter-type-gx" class="form-control" style="width:90px;">
                                <option value="1">--------------</option>
                                <option value="like">模糊搜索</option>
                                <option value="<"><</option>
                                <option value=">">></option>
                            </select>
                        </div>
                        <div class="form-group">
                            &nbsp;条件：
                            <input type="text" id="filter-value-gx" class="form-control" style="width:90px;">
                        </div>
                        <button type="button" id="filter-clear-gx" class="btn btn-danger" style="display:inline-block">清除</button>
                    </div>
                </div>

            </div>

        </div>
    </div>

    <!------测量面板------>
    <div id="measureButton" class="measureButton" title="测量工具">
        <a href="#"><img src="~/images/buttons/measure1.png" width="40" /></a>
    </div>

    <div id="dropdown-menu-cl" class="dropdown-menu-cl">
        <div class="x_panel">
            <h3>测量工具</h3>
            <p class="top30">点击按钮在地图进行距离及面积测量</p>
            <button type="button" id="mb" class="btn btn-warning" data-toggle="button" value="LineString">距离测量</button>
            <button type="button" id="mb2" class="btn btn-warning" data-toggle="button" value="Polygon">面积测量</button>&nbsp;&nbsp;&nbsp;&nbsp;
            <button type="button" id="cb" class="btn btn-danger" data-toggle="button">清除</button>
        </div>
    </div>

    <!------图层控制面板------>
    <div id="layerTreeButton" class="layerTreeButton" title="图层控件">
        <a href="#"><img src="~/images/buttons/layer.png" width="40" /></a>
    </div>

    <div id="layerTree" class="layerTree">
        <ul>
            <li>
                <input type="checkbox" id="xxfw" checked="checked" /><label class="folderOne" id="folder">&nbsp;<i class="fa fa-folder-o"></i>&nbsp;信息服务<img src="~/images/on.png" style="margin-left:25px" /></label>
                <ul id="sub" class="sub">
                    <li class="file-folderOne"><input type="checkbox" id="gjzLayer" checked="checked" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;古建筑</li>
                    <li class="file-folderOne"><input type="checkbox" id="jxlLayer" checked="checked" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;教学楼</li>
                    <li class="file-folderOne"><input type="checkbox" id="xndwLayer" checked="checked" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;校内单位</li>
                    <li class="file folderOne"><input type="checkbox" id="ssLayer" checked="checked" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;学生公寓</li>
                    <li class="file folderOne"><input type="checkbox" id="ctLayer" checked="checked" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;餐厅</li>
                    <li class="file folderOne"><input type="checkbox" id="sdLayer" checked="checked" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;商店</li>
                    <li class="file folderOne"><input type="checkbox" id="jdLayer" checked="checked" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;景点</li>
                    <li class="file folderOne"><input type="checkbox" id="tycLayer" checked="checked" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;体育场</li>
                    <li class="file folderOne"><input type="checkbox" id="hdzxLayer" checked="checked" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;活动中心</li>
                    <li class="file folderOne"><input type="checkbox" id="ylLayer" checked="checked" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;医疗</li>
                     <li class="file folderOne"><input type="checkbox" id="otherLayer" checked="checked" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;其他</li>
                </ul>
            </li>
            <li>
                <label class="top10 " id="folder2">&nbsp;<i class="fa fa-folder-o"></i>&nbsp;基础图层<img src="~/images/on.png" style="margin-left:25px" /></label>
                <ul id="sub2" class="sub2">
                    <li class="file folderTwo"><input type="checkbox" id="basesatelitedLayer" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;遥感影像</li>
                    <li class="file folderTwo"><input type="checkbox" id="baseshapeLayer" checked="checked" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;二维矢量</li>
                    <li class="file folderTwo"><input type="checkbox" id="baselandscapeLayer" />&nbsp;<i class="fa fa-file-o"></i>&nbsp;2.5维影像</li>
                </ul>
            </li>
        </ul>
    </div>

    <!------菜单缩小按钮------>
    <div id="smallButton" class="smallButton">
        <a href="#" title="点击展开面板"><img src="~/images/570652380487015688.png" width="60" /></a>
        <div id="smallButtonText" style="position: absolute; top: 15px; left: 17px;color:ghostwhite;"></div>

    </div>

    <!------全景菜单按钮------>
    <div id="sceneButton" class="sceneButton" title="全景查看">
        <a href="#"><img src="~/images/buttons/222.png" width="40" /></a>
    </div>

    <!------道路检索按钮------>
    <div id="roadSearchButton" class="roadSearchButton" title="道路检索">
        <a href="#"><img src="~/images/buttons/roadsearch.png" width="40" /></a>
    </div>

    <!------街景菜单按钮------>
    <div id="streetSceneButton" class="streetSceneButton" title="街景查看">
        <a href="#"><img src="~/images/buttons/1112.png" width="40" /></a>
    </div>

    <!------鼠标右键菜单------>
    <div id="contextmenu_container">
        <a onclick="zoomIn()" class="list-group-item">放大</a>
        <a onclick="zoomOut()" class="list-group-item">缩小</a>
        <a onclick="viewBack()" class="list-group-item">前一视图</a>
        <a onclick="viewForward()" class="list-group-item">后一视图</a>
        <a onclick="zoomToLayer()" class="list-group-item">缩放至图层</a>
    </div>
</div>



<script>
    if (document.getElementById("xxfwButton"))
        document.getElementById("xxfwButton").style.display = "block";
    if (document.getElementById("jjxm"))
        document.getElementById("jjxm").style.display = "block";
    if (document.getElementById("wxxm"))
        document.getElementById("wxxm").style.display = "block";
    if (document.getElementById("gxfw"))
        document.getElementById("gxfw").style.display = "block";


    /*$(".select2-selection__rendered").click(function () {
        alert("aa");
        $("#building-search").select2("val", " ");
        $("#building-search").select2({
            placeholder: "请选择查询信息",
            language: 'zh-CN'
        });
    });*/




    //-------------------------------------用户修改密码功能模块---------------------------------------------//
    var popUpdate = function () {
        $("#myModalUpdate").modal();
    };

    $("#submitNewPassword").click(function () {
        if (document.getElementById("oldPassword").value == null || document.getElementById("oldPassword").value == '') {
            swal(
                '原始密码不可为空',
                '请重新输入',
                'warning'
            );
        } else if (document.getElementById("newPassword").value == null || document.getElementById("newPassword").value == '') {
            swal(
                '新密码不可为空',
                '请重新输入',
                'warning'
            );

        } else if (document.getElementById("newPassword").value == document.getElementById("oldPassword").value) {
            swal(
                '新密码与原始密码不可相同',
                '请重新输入',
                'warning'
            );

        } else if (document.getElementById("newPassword").value.length < 8) {
            swal(
                '新密码最短长度为8位',
                '请重新输入',
                'warning'
            );

        } else {
            $.ajax({
                type: "POST",
                url: "/Users/ModifyPassword",
                data: { name: document.getElementById("wxsb_sbry").value, oldPassword: document.getElementById("oldPassword").value, newPassword: document.getElementById("newPassword").value },
                success: function (data) {
                    if (data == "修改密码成功") {
                        swal({
                            title: data,
                            text: '请重新登录',
                            type: "success",
                        }).then(function () {
                            window.location = "/Account/Login"
                            //$("#signOut")[0].click();
                        }//虚拟点击事件;
                        );
                        $('#myModalUpdate').modal('hide');

                    } else {
                        swal(
                            data,
                            '请重新输入',
                            'warning'
                        );
                    }
                },
                error: function () {
                }
            });
        }

        /*swal({
            title: '确定修改用户：' + document.getElementById("wxsb_sbry").value + '&nbsp;的密码吗?',
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: '修改!'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    type: "POST",
                    url: "/Users/ModifyPassword",
                    data: { name: document.getElementById("wxsb_sbry").value, oldPassword: document.getElementById("oldPassword").value, newPassword: document.getElementById("newPassword").value},
                    success: function (data) {
                        if (data == "修改密码成功") {
                            swal({
                                title: data,
                                text: '请重新登录',
                                type: "success",
                            }).then(function () {
                                window.location = "/Account/Login"
                                //$("#signOut")[0].click();
                            }//虚拟点击事件;
                            );
                            $('#myModalUpdate').modal('hide');

                        }else {
                            swal(
                                data,
                                '请重新输入',
                                'warning'
                            );
                        }
                    },
                    error: function () {
                    }
                });
            }
        })*/
    });
     //-------------------------------------用户修改密码功能模块结束---------------------------------------------//

    //动态修改地图视窗的高度
    document.getElementById("map").style.setProperty('height', $(window).height() - 55 + 'px');
    function resize() {
        document.getElementById("map").style.setProperty('height', $(window).height() - 55 + 'px');
    }
    window.onresize = function () {
        resize();
    };

    //初始化建筑图片查看器
    var viewer = new Viewer(document.getElementById('viewer'), {
        url: 'data-original',
        show: function () {
            viewer.update();
        },
    });

    //初始化维修模块图片查看插件
    var viewer_wx = new Viewer(document.getElementById('viewer_wx'), {//初始化维修图片查看器
        url: 'data-original',
        show: function () {
            viewer_wx.update();
        },
    });

    //定义全局变量
    var lastCenter = [];
    var lastZoom = [];
    var pointCenter;

    /*------------------------------初始化街景及街景开关------------------------------*/
    var featuremarker;//初始化街景
    //新按钮
    $("#roadScene").click(function () {
        $(this).button('toggle');
        var str = document.getElementById("roadScene").getAttribute("class");
        var pd = str.search("active") != -1;
        if (pd) {
            ssLayer.setVisible(false);
            jxlLayer.setVisible(false);
            ctLayer.setVisible(false);
            gjzLayer.setVisible(false);
            xndwLayer.setVisible(false);
            tycLayer.setVisible(false);
            sdLayer.setVisible(false);
            ylLayer.setVisible(false);
            jdLayer.setVisible(false);
            wxLayer.setVisible(false);
            hdzxLayer.setVisible(false);
            jjLayer.setVisible(false);
            jiejLayer.setVisible(true);
            jiejMLayer.setVisible(true);
            map.on('click', function (e) {
                var closeFeature = jiejvectorSource.getClosestFeatureToCoordinate(e.coordinate);

                $("#myModalLabel_qj").text("街景查看");
                $('#myModal_qj').modal();
                featuremarker = closeFeature.get('name');
                openkrpano("j");
            });

        } else {
            ssLayer.setVisible(true);
            jxlLayer.setVisible(true);
            ctLayer.setVisible(true);
            gjzLayer.setVisible(true);
            xndwLayer.setVisible(true);
            tycLayer.setVisible(true);
            sdLayer.setVisible(true);
            ylLayer.setVisible(true);
            jdLayer.setVisible(true);
            //wxLayer.setVisible(true);
            hdzxLayer.setVisible(true);
            //jjLayer.setVisible(true);
            jiejLayer.setVisible(false);
            jiejMLayer.setVisible(false);
            map.removeEventListener('click');
            addclick();
        }
    });
    /*------------------------------初始化街景及街景开关结束------------------------------*/

    /*------------------------------街景小地图------------------------------*/


    /*document.getElementById("krpanoSWFObject").onclick = function () {
        alert("aaa!");
    }*/


    /*------------------------------街景小地图------------------------------*/

    /*--------------------------图层面板收缩-----------------------------*/

    document.getElementById("folder").onclick = function () {
        if ($("#sub").attr('class') == 'sub hiding hide') {
            document.getElementById("sub").setAttribute('display', 'block');
            $("#sub").attr('class', 'sub showing');
            document.getElementById("folder").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;信息服务<img src="../images/on.png" style="margin-left:25px" />';

        } else {
            document.getElementById("sub").setAttribute('display', 'none');
            $("#sub").attr('class', 'sub hiding hide');
            document.getElementById("folder").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;信息服务<img src="../images/off.png" style="margin-left:25px" />';
        }
    };
    document.getElementById("folder2").onclick = function () {
        if ($("#sub2").attr('class') == 'sub2 hiding hide') {
            document.getElementById("sub2").setAttribute('display', 'block');
            $("#sub2").attr('class', 'sub2 showing');
            document.getElementById("folder2").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;基础图层<img src="../images/on.png" style="margin-left:25px" />';

        } else {
            document.getElementById("sub2").setAttribute('display', 'none');
            $("#sub2").attr('class', 'sub2 hiding hide');
            document.getElementById("folder2").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;基础图层<img src="../images/off.png" style="margin-left:25px" />';
        }
    };

    document.getElementById("folder-ps").onclick = function () {
        if ($("#sub-ps").attr('class') == 'sub-ps hiding hide') {
            document.getElementById("sub-ps").setAttribute('display', 'block');
            $("#sub-ps").attr('class', 'sub-ps showing');
            document.getElementById("folder-ps").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;排水<img src="../images/on.png" style="margin-left:25px" />';

        } else {
            document.getElementById("sub-ps").setAttribute('display', 'none');
            $("#sub-ps").attr('class', 'sub-ps hiding hide');
            document.getElementById("folder-ps").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;排水<img src="../images/off.png" style="margin-left:25px" />';
        }
    };
    document.getElementById("folder-gs").onclick = function () {
        if ($("#sub-gs").attr('class') == 'sub-gs hiding hide') {
            document.getElementById("sub-gs").setAttribute('display', 'block');
            $("#sub-gs").attr('class', 'sub-gs showing');
            document.getElementById("folder-gs").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;给水<img src="../images/on.png" style="margin-left:25px" />';

        } else {
            document.getElementById("sub-gs").setAttribute('display', 'none');
            $("#sub-gs").attr('class', 'sub-gs hiding hide');
            document.getElementById("folder-gs").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;给水<img src="../images/off.png" style="margin-left:25px" />';
        }
    };
    document.getElementById("folder-rq").onclick = function () {
        if ($("#sub-rq").attr('class') == 'sub-rq hiding hide') {
            document.getElementById("sub-rq").setAttribute('display', 'block');
            $("#sub-rq").attr('class', 'sub-rq showing');
            document.getElementById("folder-rq").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;燃气<img src="../images/on.png" style="margin-left:25px" />';

        } else {
            document.getElementById("sub-rq").setAttribute('display', 'none');
            $("#sub-rq").attr('class', 'sub-rq hiding hide');
            document.getElementById("folder-rq").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;燃气<img src="../images/off.png" style="margin-left:25px" />';
        }
    };
    document.getElementById("folder-rl").onclick = function () {
        if ($("#sub-rl").attr('class') == 'sub-rl hiding hide') {
            document.getElementById("sub-rl").setAttribute('display', 'block');
            $("#sub-rl").attr('class', 'sub-rl showing');
            document.getElementById("folder-rl").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;热力<img src="../images/on.png" style="margin-left:25px" />';

        } else {
            document.getElementById("sub-rl").setAttribute('display', 'none');
            $("#sub-rl").attr('class', 'sub-rl hiding hide');
            document.getElementById("folder-rl").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;热力<img src="../images/off.png" style="margin-left:25px" />';
        }
    };
    document.getElementById("folder-dl").onclick = function () {
        if ($("#sub-dl").attr('class') == 'sub-dl hiding hide') {
            document.getElementById("sub-dl").setAttribute('display', 'block');
            $("#sub-dl").attr('class', 'sub-dl showing');
            document.getElementById("folder-dl").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;电力<img src="../images/on.png" style="margin-left:25px" />';

        } else {
            document.getElementById("sub-dl").setAttribute('display', 'none');
            $("#sub-dl").attr('class', 'sub-dl hiding hide');
            document.getElementById("folder-dl").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;电力<img src="../images/off.png" style="margin-left:25px" />';
        }
    };
    document.getElementById("folder-dx").onclick = function () {
        if ($("#sub-dx").attr('class') == 'sub-dx hiding hide') {
            document.getElementById("sub-dx").setAttribute('display', 'block');
            $("#sub-dx").attr('class', 'sub-dx showing');
            document.getElementById("folder-dx").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;电信<img src="../images/on.png" style="margin-left:25px" />';

        } else {
            document.getElementById("sub-dx").setAttribute('display', 'none');
            $("#sub-dx").attr('class', 'sub-dx hiding hide');
            document.getElementById("folder-dx").innerHTML = '&nbsp;<i class="fa fa-folder-o"></i>&nbsp;电信<img src="../images/off.png" style="margin-left:25px" />';
        }
    };


    /*--------------------------图层面板收缩结束-----------------------------*/


    /*------------------------------定义地图基础图层------------------------------*/
    var boudsbase = [216991.7660189064, 96841.233087111919, 251420.74112685662, 125482.43620285149];
    var Proj2385 = ol.proj.get('EPSG:2385');
    Proj2385.setExtent(boudsbase);

    //二维影像
    var resolutions = [
        305.74861358056052,
        152.87417449834899,
        76.436954957243259,
        38.218345186690378,
        19.109040301413938,
        9.5543878587757174,
        4.7770616374566082,
        2.3886631106595546,
        1.1943315553297773,
        0.59716577766488865,
        0.2984505969011938,
        0.1492252984505969
    ];
    //景观影像
    var resolutions2 = [
        305.74861358056052,
        152.87417449834899,
        76.436954957243259,
        38.218345186690378,
        19.109040301413938,
        9.5543878587757174,
        4.7770616374566082,
        2.3886631106595546,
        1.1943315553297773
    ];
    //遥感影像
    var resolutions3 = [
        305.74861358056052,
        152.87417449834899,
        76.436954957243259,
        38.218345186690378,
        19.109040301413938,
        9.5543878587757174,
        4.7770616374566082,
        2.3886631106595546,
        1.1943315553297773,
        0.59716577766488865,
        0.2984505969011938,
        0.1492252984505969,
        0.0746126492252985,
        0.0373063246126492,
    ];
    //2.5维影像
    var resolutions4 = [
        305.74861358056052,
        152.87417449834899,
        76.436954957243259,
        38.218345186690378,
        19.109040301413938,
        9.5543878587757174,
        4.7770616374566082,
        2.3886631106595546,
        1.1943315553297773,
        0.59716577766488865,
        0.2984505969011938,
        0.1492252984505969,
        0.07461264922529845,
        0.037306324612649225,
    ];

    var baseshapeLayer = new ol.layer.Tile({
        visible: true,
        title: '二维矢量',
        type: 'base',
        source: new ol.source.XYZ({
            tileUrlFunction: function (tileCoord, radio, projection) {
                var x = tileCoord[1];
                var y = -tileCoord[2] - 1;
                var z = tileCoord[0];
                return '/Map/getTile?level=' + z + '&row=' + y + '&col=' + x + '&type=shape'
            },
            projection: Proj2385,
            tileGrid: new ol.tilegrid.TileGrid({
                resolutions: resolutions,
                extent: boudsbase,
                origin: [0, 5000000]
            })

        })
    });

    var basesatelitedLayer = new ol.layer.Tile({
        visible: false,
        title: '遥感影像',
        type: 'base',
        source: new ol.source.XYZ({
            tileUrlFunction: function (tileCoord) {
                var x = tileCoord[1];
                var y = -tileCoord[2] - 1;
                var z = tileCoord[0];
                return '/Map/getTile?level=' + z + '&row=' + y + '&col=' + x + '&type=satellite'
            },
            projection: Proj2385,
            tileGrid: new ol.tilegrid.TileGrid({
                resolutions: resolutions3,
                extent: boudsbase,
                origin: [0, 5000000]
            })

        })
    });

    /*var baselandscapeLayer = new ol.layer.Tile({
        visible: false,
        title: '景观地图',
        type: 'base',
        source: new ol.source.XYZ({
            tileUrlFunction: function (tileCoord) {
                var x = tileCoord[1];
                var y = -tileCoord[2] - 1;
                var z = tileCoord[0];
                return '/Map/getTile?level=' + z + '&row=' + y + '&col=' + x + '&type=landscape'
            },
            projection: Proj2385,
            tileGrid: new ol.tilegrid.TileGrid({
                resolutions: resolutions2,
                extent: boudsbase,
                origin: [0, 5000000]
            })

        })
    });*/

    var baselandscapeLayer = new ol.layer.Tile({
        visible: false,
        title: '2.5维地图',
        type: 'base',
        source: new ol.source.XYZ({
            tileUrlFunction: function (tileCoord) {
                var x = tileCoord[1];
                var y = -tileCoord[2] - 1;
                var z = tileCoord[0];
                return '/Map/getTile?level=' + z + '&row=' + y + '&col=' + x + '&type=landscape'
            },
            projection: Proj2385,
            tileGrid: new ol.tilegrid.TileGrid({
                resolutions: resolutions4,
                extent: boudsbase,
                origin: [0, 5000000]
            })

        })
    });



    var olvectorSource = new ol.source.Vector();
    var olLayer = new ol.layer.Vector({ visible: true, 'title': '标题', source: olvectorSource, zIndex: 3 });
    var othervectorSource = new ol.source.Vector();
    var otherLayer = new ol.layer.Vector({ visible: true, 'title': '其他', source: othervectorSource, zIndex: 3 });
    var hdzxvectorSource = new ol.source.Vector();
    var hdzxLayer = new ol.layer.Vector({ visible: true, 'title': '活动中心', source: hdzxvectorSource, zIndex: 3 });
    var ssvectorSource = new ol.source.Vector();
    var ssLayer = new ol.layer.Vector({ visible: true, 'title': '学生公寓', source: ssvectorSource, zIndex: 3 });
    var ctvectorSource = new ol.source.Vector();
    var ctLayer = new ol.layer.Vector({ visible: true, 'title': '餐厅', source: ctvectorSource, zIndex: 3 });
    var sdvectorSource = new ol.source.Vector();
    var sdLayer = new ol.layer.Vector({ visible: true, 'title': '商店', source: sdvectorSource, zIndex: 3 });
    var ylvectorSource = new ol.source.Vector();
    var ylLayer = new ol.layer.Vector({ visible: true, 'title': '医疗', source: ylvectorSource, zIndex: 3 });
    var jdvectorSource = new ol.source.Vector();
    var jdLayer = new ol.layer.Vector({ visible: true, 'title': '景点', source: jdvectorSource, zIndex: 3 });
    var tycvectorSource = new ol.source.Vector();
    var tycLayer = new ol.layer.Vector({ visible: true, 'title': '体育场', source: tycvectorSource, zIndex: 3 });
    var jxlvectorSource = new ol.source.Vector();
    var jxlLayer = new ol.layer.Vector({ visible: true, 'title': '教学楼', source: jxlvectorSource, zIndex: 3 });
    var xndwvectorSource = new ol.source.Vector();
    var xndwLayer = new ol.layer.Vector({ visible: true, 'title': '校内单位', source: xndwvectorSource, zIndex: 3 });
    var gjzvectorSource = new ol.source.Vector();
    var gjzLayer = new ol.layer.Vector({ visible: true, 'title': '古建筑', source: gjzvectorSource, zIndex: 3 });
    var jjvectorSource = new ol.source.Vector();
    var jjLayer = new ol.layer.Vector({ visible: false, 'title': '基建项目', source: jjvectorSource, zIndex: 3 });
    var wxvectorSource = new ol.source.Vector();
    var wxLayer = new ol.layer.Vector({ visible: false, 'title': '维修信息', source: wxvectorSource, zIndex: 3 });
    var qjvectorSource = new ol.source.Vector();
    var qjLayer = new ol.layer.Vector({ visible: false, 'title': '全景查看', source: qjvectorSource, zIndex: 4 });
    var jiejvectorSource = new ol.source.Vector();
    var jiejLayer = new ol.layer.Vector({ visible: false, 'title': '街景查看', source: jiejvectorSource, zIndex: 4 });
    var searchvectorSource = new ol.source.Vector();
    var searchLayer = new ol.layer.Vector({ visible: true, 'title': '道路查询', source: searchvectorSource, zIndex: 4 });

    //定义测量工具绘制图层
    var measureSource = new ol.source.Vector();
    var measureLayer = new ol.layer.Vector({
        name: 'my_vectorlayer',
        zIndex: 4,
        'title': '测量工具',
        source: measureSource,
        style: new ol.style.Style({
            fill: new ol.style.Fill({
                color: 'rgba(255, 255, 255, 0.5)'
            }),
            stroke: new ol.style.Stroke({
                color: '#4A4A4A',
                width: 2
            }),
            image: new ol.style.Circle({
                radius: 7,
                fill: new ol.style.Fill({
                    color: '#ffcc33'
                })
            })
        })
    });
    /*------------------------------定义地图基础图层结束------------------------------*/


    /*------------------------------地图定义------------------------------*/
    var view = new ol.View({
        projection: Proj2385,
        resolutions: resolutions3,
        center: [229900.75146050294, 102750.57857082381],
        zoom: 8

    });
    var map = new ol.Map({

        layers: [
            new ol.layer.Group({
                'title': "功能图层",
                layers: [
                    qjLayer,
                    jiejLayer,
                    jjLayer,
                    wxLayer,
                    measureLayer
                ]
            }),
            new ol.layer.Group({
                'title': "基础图层",
                layers: [
                    baseshapeLayer,
                    basesatelitedLayer,
                    baselandscapeLayer,
                ]
            }),
            new ol.layer.Group({
                'title': "信息服务",
                layers: [
                    hdzxLayer,
                    jdLayer,
                    ylLayer,
                    sdLayer,
                    tycLayer,
                    ctLayer,
                    ssLayer,
                    xndwLayer,
                    jxlLayer,
                    gjzLayer,
                    otherLayer
                ]
            }),

        ],
        target: 'map',
        view: view,
        controls: ol.control.defaults({//设置地图控件
            attribution: false,
            zoom: false
        }).extend([
            new ol.control.Zoom(),
            new ol.control.ZoomSlider(),
            new ol.control.OverviewMap(),//全局控件
            new ol.control.ScaleLine(),

        ]),

    });
    /*------------------------------地图定义结束------------------------------*/


     /*------------------------------建筑数据------------------------------*/
    var buildings =@Html.Raw(@ViewBag.buildings);
    var tableData_building = [];

    for (var i = 0; i < buildings.length; i++) {
    tableData_building.push(buildings[i])
    };
    for (i = 0; i < tableData_building.length; i++) {


    var iconFeature = new ol.Feature({
        geometry: new ol.geom.Point([tableData_building[i].X,tableData_building[i].Y]),
        id:i+1,
        name: tableData_building[i].MC,
        type: tableData_building[i].LB,
        label: tableData_building[i].XLB,
        bsm: tableData_building[i].BSM,
        wzms: tableData_building[i].WZMS,
        x: tableData_building[i].X,
        y: tableData_building[i].Y,
    });
        var iconStyle = new ol.style.Style({
            image: new ol.style.Icon(({
                anchor: [0.5, 1],
                scale: 0.2,
                anchorXUnits: 'fraction',
                anchorYUnits: 'pixels',
                src: '/images/icon/' + tableData_building[i].LB + tableData_building[i].XLB + '.png'

            }))
        });

        var iconStyle2 = new ol.style.Style({
            image: new ol.style.Icon(({
                anchor: [0.5, 1],
                scale: 0.2,
                anchorXUnits: 'fraction',
                anchorYUnits: 'pixels',
                src: '/images/icon/others.png'

            }))
        });
        var name = tableData_building[i].XLB;
        if (name == "博物馆" || name == "科技馆" || name == "传达室" || name == "图书馆" || name == "浴室" || name == "住宅" || name == "交流中心" || name == "乘车点" || name == "自助银行" || name == "会展中心" || name == "消防站" || name == "花房" || name == "车库" || name == "换热站" || name == "开水房" || name == "快递服务点" || name == "邮局" || name == "学生会" || name == "新闻中心" || name == "外国专家公寓" || name == "留学生公寓"||name == "停车场") {
            iconFeature.setStyle(iconStyle2);

        } else {
            iconFeature.setStyle(iconStyle);

        }
       


        switch (tableData_building[i].LB) {
            case "教学楼":
                jxlvectorSource.addFeature(iconFeature);
                break;
            case "古建筑":
                gjzvectorSource.addFeature(iconFeature);
                break;
            case "校内单位":
                xndwvectorSource.addFeature(iconFeature);
                break;
            case "生活服务":
                switch (tableData_building[i].XLB) {
                    case "学生公寓":
                        ssvectorSource.addFeature(iconFeature);
                        break;
                    case "餐厅":
                        ctvectorSource.addFeature(iconFeature);
                        break;
                    case "商店":
                        sdvectorSource.addFeature(iconFeature);
                        break;
                    case "医疗":
                        ylvectorSource.addFeature(iconFeature);
                        break;
                    case "体育场":
                        tycvectorSource.addFeature(iconFeature);
                        break;
                    case "景点":
                        jdvectorSource.addFeature(iconFeature);
                        break;
                    case "活动中心":
                        hdzxvectorSource.addFeature(iconFeature);
                        break;
                    case "博物馆":
                    case "科技馆":
                    case "传达室":
                    case "图书馆":
                    case "浴室":
                    case "住宅":
                    case "交流中心":
                    case "乘车点":
                    case "自助银行":
                    case "会展中心":
                    case "消防站":
                    case "花房":
                    case "车库":
                    case "换热站":
                    case "开水房":
                    case "快递服务点":
                    case "邮局":
                    case "学生会":
                    case "新闻中心":
                    case "外国专家公寓":
                    case "留学生公寓":
                    case "停车场":
                        othervectorSource.addFeature(iconFeature);
                        break;
                };
                break;
        }
    //给建筑模糊搜索添加数据
    document.getElementById("building-search").options.add(new Option(tableData_building[i].MC, tableData_building[i].MC));

    };
    //给建筑模糊搜索添加数据 添加交互

    $("#building-search").on("change", function () {
        var data = $(this).val();
        if (data != null) {
            table_building.setFilter('MC', '=', data);
        }
        otherLayer.setVisible(true);
        ssLayer.setVisible(true);
        jxlLayer.setVisible(true);
        ctLayer.setVisible(true);
        gjzLayer.setVisible(true);
        xndwLayer.setVisible(true);
        tycLayer.setVisible(true);
        sdLayer.setVisible(true);
        ylLayer.setVisible(true);
        jdLayer.setVisible(true);
        hdzxLayer.setVisible(true);
        olLayer.setVisible(true);
        $("#jxlLayer").prop('checked', true);
        $("#ctLayer").prop('checked', true);
        $("#gjzLayer").prop('checked', true);
        $("#xndwLayer").prop('checked', true);
        $("#tycLayer").prop('checked', true);
        $("#sdLayer").prop('checked', true);
        $("#ylLayer").prop('checked', true);
        $("#jdLayer").prop('checked', true);
        $("#hdzxLayer").prop('checked', true);
        $("#olLayer").prop('checked', true);
        $("#ssLayer").prop('checked', true);
        $("#otherLayer").prop('checked', true);
    });


    /*---------------------------地图工具条定义--------------------------------*/
    //放大
    var zoomIn = function () {
        view.animate({
            zoom: view.getZoom() + 1,
            duration: 500,
        });
    };
    //缩小
    var zoomOut = function () {
        view.animate({
            zoom: view.getZoom() - 1,
            duration: 500,
        });
    };
    //前一视图
    var viewBack = function () {
        var coordinates;
        var zoomLevel;
        if (lastCenter.length > 1) {
            coordinates = lastCenter[lastCenter.length - 2];
            zoomLevel = lastZoom[lastZoom.length - 2];
            view.animate({
                center: coordinates,
                duration: 500,
            });
            view.animate({
                zoom: zoomLevel,
                duration: 500,
            });
        };
    };
    //后一视图
    var viewForward = function () {
        var coordinates;
        var zoomLevel;
        if (lastCenter.length > 1) {
            coordinates = lastCenter[lastCenter.length - 2];
            zoomLevel = lastZoom[lastZoom.length - 2];
            view.animate({
                center: coordinates,
                duration: 500,
            });
            view.animate({
                zoom: zoomLevel,
                duration: 500,
            });
        };
    };
    //缩放至图层
    var zoomToLayer = function () {
        view.animate({
            center: [229900.75146050294, 102750.57857082381],
            duration: 500,
        });
        view.animate({
            zoom: 8,
            duration: 500,
        });
    };
    //截图
    var capture = function () {
        html2canvas(document.querySelector("#map")).then(function (canvas) {
            var imgUrl = canvas.toDataURL("image/png"); // 将canvas转换成img的src流
            document.getElementById("capture").href = imgUrl;//修改按钮的图片url
            document.getElementById("capture").setAttribute("download", "截屏图片");//修改按钮的属性为点击后下载图片
            $("#capture")[0].click();//虚拟点击事件
        });

    }

    //图层
    $("#layersButton").click(function () {
        $(this).button('toggle');
        var str = document.getElementById("layersButton").getAttribute("class");
        var pd = str.search("active") != -1;
        if (pd) {
            otherLayer.setVisible(false);
            ssLayer.setVisible(false);
            jxlLayer.setVisible(false);
            ctLayer.setVisible(false);
            gjzLayer.setVisible(false);
            xndwLayer.setVisible(false);
            tycLayer.setVisible(false);
            sdLayer.setVisible(false);
            ylLayer.setVisible(false);
            jdLayer.setVisible(false);
            //wxLayer.setVisible(false);
            hdzxLayer.setVisible(false);
            //jjLayer.setVisible(false);
            //jiejLayer.setVisible(false);
            //控制图层控件同步显示
            $("#xxfw").prop('checked', false);
            popup.setPosition(undefined);//清除所有建筑弹窗
            closer.blur();
            setCheck();

        } else {
            otherLayer.setVisible(true);
            ssLayer.setVisible(true);
            jxlLayer.setVisible(true);
            ctLayer.setVisible(true);
            gjzLayer.setVisible(true);
            xndwLayer.setVisible(true);
            tycLayer.setVisible(true);
            sdLayer.setVisible(true);
            ylLayer.setVisible(true);
            jdLayer.setVisible(true);
            //wxLayer.setVisible(true);
            hdzxLayer.setVisible(true);
            // jjLayer.setVisible(true);
             //控制图层控件同步显示
            $("#xxfw").prop('checked', true);
            $("#jxlLayer").prop('checked',  true);
            $("#ctLayer").prop('checked',   true);
            $("#gjzLayer").prop('checked',  true);
            $("#xndwLayer").prop('checked', true);
            $("#tycLayer").prop('checked',  true);
            $("#sdLayer").prop('checked',   true);
            $("#ylLayer").prop('checked',   true);
            $("#jdLayer").prop('checked',   true);
            $("#hdzxLayer").prop('checked', true);
            $("#olLayer").prop('checked',   true);
            $("#ssLayer").prop('checked', true);
            $("#otherLayer").prop('checked', true);
        }
    });
    /*---------------------------地图工具条定义结束--------------------------------*/
    //管线管点全局定义
    var layerGroup = ['pipeline:js_ss_line', 'pipeline:ps_ws_line', 'pipeline:ps_ys_line', 'pipeline:ps_aq_line', 'pipeline:rq_tr_line', 'pipeline:dl_gd_line', 'pipeline:dl_ld_line', 'pipeline:dx_tx_line', 'pipeline:dx_ex_line', 'pipeline:dx_dt_line', 'pipeline:dx_yx_line', 'pipeline:dx_lx_line', 'pipeline:dx_jk_line', 'pipeline:dx_jy_line', 'pipeline:rl_rs_line',
        'pipeline:js_ss_point', 'pipeline:ps_ws_point', 'pipeline:ps_ys_point', 'pipeline:ps_aq_point', 'pipeline:rq_tr_point', 'pipeline:dl_gd_point', 'pipeline:dl_ld_point', 'pipeline:dx_tx_point', 'pipeline:dx_ex_point', 'pipeline:dx_dt_point', 'pipeline:dx_yx_point', 'pipeline:dx_lx_point', 'pipeline:dx_jk_point', 'pipeline:dx_jy_point', 'pipeline:rl_rs_point' , 'pipeline:wz_wz_point'];

    var gxLayerGroup = ['pipeline:js_ss_line', 'pipeline:ps_ws_line', 'pipeline:ps_ys_line', 'pipeline:ps_aq_line', 'pipeline:rq_tr_line', 'pipeline:dl_gd_line', 'pipeline:dl_ld_line', 'pipeline:dx_tx_line', 'pipeline:dx_ex_line', 'pipeline:dx_dt_line', 'pipeline:dx_yx_line', 'pipeline:dx_lx_line', 'pipeline:dx_jk_line', 'pipeline:dx_jy_line', 'pipeline:rl_rs_line'];

    var gdLayerGroup = ['pipeline:js_ss_point', 'pipeline:ps_ws_point', 'pipeline:ps_ys_point', 'pipeline:ps_aq_point', 'pipeline:rq_tr_point', 'pipeline:dl_gd_point', 'pipeline:dl_ld_point', 'pipeline:dx_tx_point', 'pipeline:dx_ex_point', 'pipeline:dx_dt_point', 'pipeline:dx_yx_point', 'pipeline:dx_lx_point', 'pipeline:dx_jk_point', 'pipeline:dx_jy_point', 'pipeline:rl_rs_point', 'pipeline:wz_wz_point'];
    /*----------------------------地图面板滑入控制--------------------------------*/

    //地图工具清理函数
    var clearTools = function () {
        //图层按钮
        $("#layerTree").attr('class', 'layerTree hiding-right');
        //测量按钮
        $("#dropdown-menu-cl").attr('class', 'dropdown-menu-cl hiding-right');
        map.removeInteraction(draw);
        measureLayer.getSource().clear(); //重新进行绘制
        map.getOverlays().clear();
        map.addOverlay(popup);
        element.style.display = 'block';
        map.removeEventListener('singleclick');
        map.removeEventListener('dblclick');
        //道路检索按钮
        $("#searchBar").attr('class', 'input-group hiding-right');
        searchLayer.getSource().clear();
        //全景按钮
        qjLayer.setVisible(false);
        $("#sceneButton").attr('class', 'sceneButton');
        //街景按钮
        jiejLayer.setVisible(false);
        jiejMLayer.setVisible(false);
        $("#streetSceneButton").attr('class', 'streetSceneButton');
        jiejLayer.setVisible(false);
        map.removeEventListener('click');
        addclick();
    }

    var smallFlag;
    //面板缩小
    var smallWindow = function (name) {
        switch (name) {
            case "poi":
                if ($("#dropdown-menu-poi").attr('class') == 'dropdown-menu-poi showing') {
                    $("#dropdown-menu-poi").attr('class', 'dropdown-menu-poi hiding');
                    document.getElementById("smallButton").style.setProperty('display', 'block');
                    document.getElementById("smallButtonText").innerHTML = '<i class="fa fa-search fa-2x"></i>';
                    smallFlag = name;
                }
                else {
                    document.getElementById("dropdown-menu-poi").style.setProperty('display', 'block');
                    $("#dropdown-menu-poi").attr('class', 'dropdown-menu-poi showing');
                    document.getElementById("smallButton").style.setProperty('display', 'none');
                }
                break;
            case "poiTJ":
                if ($("#dropdown-menu-kx").attr('class') == 'dropdown-menu-kx showing') {
                    $("#dropdown-menu-kx").attr('class', 'dropdown-menu-kx hiding');
                    document.getElementById("smallButton").style.setProperty('display', 'block');
                    document.getElementById("smallButtonText").innerHTML = '<i class="fa fa-search fa-2x"></i>';
                    smallFlag = name;
                }
                else {
                    document.getElementById("dropdown-menu-kx").style.setProperty('display', 'block');
                    $("#dropdown-menu-kx").attr('class', 'dropdown-menu-kx showing');
                    document.getElementById("smallButton").style.setProperty('display', 'none');
                }
                break;
            case "jjlr":
                if ($("#dropdown-menu-jjlr").attr('class') == 'dropdown-menu-jjlr showing') {
                    $("#dropdown-menu-jjlr").attr('class', 'dropdown-menu-jjlr hiding');
                    document.getElementById("smallButton").style.setProperty('display', 'block');
                    smallFlag = name;
                    document.getElementById("smallButtonText").innerHTML = '<i class="fa fa-edit fa-2x"></i>';
                }
                else {
                    document.getElementById("dropdown-menu-jjlr").style.setProperty('display', 'block');
                    $("#dropdown-menu-jjlr").attr('class', 'dropdown-menu-jjlr showing');
                    document.getElementById("smallButton").style.setProperty('display', 'none');
                }
                break;
            case "jjcx":
                if ($("#dropdown-menu-jjcx").attr('class') == 'dropdown-menu-jjcx showing') {
                    $("#dropdown-menu-jjcx").attr('class', 'dropdown-menu-jjcx hiding');
                    document.getElementById("smallButton").style.setProperty('display', 'block');
                    document.getElementById("smallButtonText").innerHTML = '<i class="fa fa-edit fa-2x"></i>';
                    smallFlag = name;
                }
                else {
                    document.getElementById("dropdown-menu-jjcx").style.setProperty('display', 'block');
                    $("#dropdown-menu-jjcx").attr('class', 'dropdown-menu-jjcx showing');
                    document.getElementById("smallButton").style.setProperty('display', 'none');
                }
                break;
            case "wxcx":
                if ($("#dropdown-menu-wxcx").attr('class') == 'dropdown-menu-wxcx showing') {
                    $("#dropdown-menu-wxcx").attr('class', 'dropdown-menu-wxcx hiding');
                    document.getElementById("smallButton").style.setProperty('display', 'block');
                    document.getElementById("smallButtonText").innerHTML = '<i class="fa fa-wrench fa-2x"></i>';
                    smallFlag = name;
                }
                else {
                    document.getElementById("dropdown-menu-wxcx").style.setProperty('display', 'block');
                    $("#dropdown-menu-wxcx").attr('class', 'dropdown-menu-wxcx showing');
                    document.getElementById("smallButton").style.setProperty('display', 'none');
                }
                break;
            case "wxlr":
                if ($("#dropdown-menu-wxlr").attr('class') == 'dropdown-menu-wxlr showing') {
                    $("#dropdown-menu-wxlr").attr('class', 'dropdown-menu-wxlr hiding');
                    document.getElementById("smallButton").style.setProperty('display', 'block');
                    document.getElementById("smallButtonText").innerHTML = '<i class="fa fa-wrench fa-2x"></i>';
                    smallFlag = name;
                }
                else {
                    document.getElementById("dropdown-menu-wxlr").style.setProperty('display', 'block');
                    $("#dropdown-menu-wxlr").attr('class', 'dropdown-menu-wxlr showing');
                    document.getElementById("smallButton").style.setProperty('display', 'none');
                }
                break;
            case "ewgx":
                if ($("#dropdown-menu-ewgx").attr('class') == 'dropdown-menu-ewgx showing') {
                    $("#dropdown-menu-ewgx").attr('class', 'dropdown-menu-ewgx hiding');
                    document.getElementById("smallButton").style.setProperty('display', 'block');
                    document.getElementById("smallButtonText").innerHTML = '<i class="fa fa-database fa-2x"></i>';
                    smallFlag = name;
                }
                else {
                    document.getElementById("dropdown-menu-ewgx").style.setProperty('display', 'block');
                    $("#dropdown-menu-ewgx").attr('class', 'dropdown-menu-ewgx showing');
                    document.getElementById("smallButton").style.setProperty('display', 'none');
                }
                break;
        }
    };
    //面板缩小按钮切换
    $("#smallButton").click(function () {
        switch (smallFlag) {
            case "poi":
                document.getElementById("dropdown-menu-poi").style.setProperty('display', 'block');
                $("#dropdown-menu-poi").attr('class', 'dropdown-menu-poi showing');
                document.getElementById("smallButton").style.setProperty('display', 'none');
                break;
            case "poiTJ":
                document.getElementById("dropdown-menu-kx").style.setProperty('display', 'block');
                $("#dropdown-menu-kx").attr('class', 'dropdown-menu-kx showing');
                document.getElementById("smallButton").style.setProperty('display', 'none');
                break;
            case "jjlr":
                document.getElementById("dropdown-menu-jjlr").style.setProperty('display', 'block');
                $("#dropdown-menu-jjlr").attr('class', 'dropdown-menu-jjlr showing');
                document.getElementById("smallButton").style.setProperty('display', 'none');
                break;
            case "jjcx":
                document.getElementById("dropdown-menu-jjcx").style.setProperty('display', 'block');
                $("#dropdown-menu-jjcx").attr('class', 'dropdown-menu-jjcx showing');
                document.getElementById("smallButton").style.setProperty('display', 'none');
                break;
            case "wxcx":
                document.getElementById("dropdown-menu-wxcx").style.setProperty('display', 'block');
                $("#dropdown-menu-wxcx").attr('class', 'dropdown-menu-wxcx showing');
                document.getElementById("smallButton").style.setProperty('display', 'none');
                break;
            case "wxlr":
                document.getElementById("dropdown-menu-wxlr").style.setProperty('display', 'block');
                $("#dropdown-menu-wxlr").attr('class', 'dropdown-menu-wxlr showing');
                document.getElementById("smallButton").style.setProperty('display', 'none');
                break;
            case "ewgx":
                document.getElementById("dropdown-menu-ewgx").style.setProperty('display', 'block');
                $("#dropdown-menu-ewgx").attr('class', 'dropdown-menu-ewgx showing');
                document.getElementById("smallButton").style.setProperty('display', 'none');
                break;
        }
    });



    //面板滑入切换
    var toggleWindow = function (name) {
        switch (name) {
            case "poi":
                if ($("#dropdown-menu-poi").attr('class') == 'dropdown-menu-poi showing') {
                    $("#dropdown-menu-poi").attr('class', 'dropdown-menu-poi hiding');
                    /*ssLayer.setVisible(true);
                    jxlLayer.setVisible(true);
                    ctLayer.setVisible(true);
                    gjzLayer.setVisible(true);
                    xndwLayer.setVisible(true);
                    tycLayer.setVisible(true);
                    sdLayer.setVisible(true);
                    ylLayer.setVisible(true);
                    jdLayer.setVisible(true);
                    hdzxLayer.setVisible(true);
                    olLayer.setVisible(true);*/
                    popup.setPosition(undefined);//清除所有建筑弹窗
                    closer.blur();
                }
                else {
                    document.getElementById("dropdown-menu-poi").style.setProperty('display', 'block');
                    $("#dropdown-menu-kx").attr('class', 'dropdown-menu-poi hiding');
                    $("#dropdown-menu-jjlr").attr('class', 'dropdown-menu-jjlr hiding');
                    $("#dropdown-menu-jjcx").attr('class', 'dropdown-menu-jjcx hiding');
                    $("#dropdown-menu-wxcx").attr('class', 'dropdown-menu-wxcx hiding');
                    $("#dropdown-menu-wxlr").attr('class', 'dropdown-menu-wxlr hiding');
                    $("#dropdown-menu-ewgx").attr('class', 'dropdown-menu-ewgx hiding');
                    $("#dropdown-menu-poi").attr('class', 'dropdown-menu-poi showing');

                    //清除该页面筛选框
                    $("#filter-field").val("1");
                    //$("#filter-type").val("1");
                    $("#filter-value").val("");
                    //清除缩小按钮
                    document.getElementById("smallButton").style.setProperty('display', 'none');
                    //工具清除函数
                    clearTools();
                    //清除筛选
                    table_building.clearFilter();
                    $("#building-search").select2("val", " ");
                    $("#building-search").select2({
                        placeholder: "请选择查询信息",
                        language: 'zh-CN'
                    });
                    //清除绘图工具
                    paintingLayer.getSource().clear();
                    map.removeInteraction(draw_interaction);
                    draw_interaction = NaN;
                    //初始化录入面板信息
                    cleanInfo_jjlr();
                    //关闭基建图层
                    jjLayer.setVisible(false);
                    //初始化录入面板信息
                    cleanInfo_wxsb();
                    //关闭维修图层
                    wxLayer.setVisible(false);
                    //关闭管线图层
                    if ("undefined" != typeof js_ss_lineLayer) {
                        for (var i = 0; i < layerGroup.length; i++) {
                            var layerName = layerGroup[i].substring(9) + "Layer";
                            eval(layerName).setVisible(false);
                        }
                        //清除框选工具
                        map.removeInteraction(draw_interaction);
                        map.removeInteraction(drawBox_gx);
                        map.removeInteraction(drawCircle);

                    }
                    popup.setPosition(undefined);//清除所有建筑弹窗
                    //清除框选工具
                    map.removeInteraction(dragBox);
                    kxLayer.getSource().clear();
                    map.removeInteraction(drawCircle_xx);
                    map.getOverlays().clear();
                    map.addOverlay(popup);
                    //重置框选图表
                    document.getElementById('chart-pin').style.display = 'none';
                    document.getElementById('chart-c').style.display = 'none';
                    document.getElementById('kx_building').style.display = 'none';
                    //框选数量总数提示
                    document.getElementById("kxTips").style.display = 'none';
                    closer.blur();
                }
                break;
            case "poiTJ":
                if ($("#dropdown-menu-kx").attr('class') == 'dropdown-menu-kx showing') {
                    $("#dropdown-menu-kx").attr('class', 'dropdown-menu-kx hiding');
                    //清除框选工具
                    map.removeInteraction(dragBox);
                    kxLayer.getSource().clear();
                    paintingLayer.getSource().clear();
                    map.removeInteraction(drawCircle_xx);
                    map.getOverlays().clear();
                    map.addOverlay(popup);
                    closer.blur();
                }
                else {
                    document.getElementById("dropdown-menu-kx").style.setProperty('display', 'block');
                    $("#dropdown-menu-poi").attr('class', 'dropdown-menu-poi hiding');
                    $("#dropdown-menu-jjlr").attr('class', 'dropdown-menu-jjlr hiding');
                    $("#dropdown-menu-jjcx").attr('class', 'dropdown-menu-jjcx hiding');
                    $("#dropdown-menu-wxcx").attr('class', 'dropdown-menu-wxcx hiding');
                    $("#dropdown-menu-wxlr").attr('class', 'dropdown-menu-wxlr hiding');
                    $("#dropdown-menu-ewgx").attr('class', 'dropdown-menu-ewgx hiding');
                    $("#dropdown-menu-kx").attr('class', 'dropdown-menu-kx showing');
                    document.getElementById('dropdown-menu-kx').style.setProperty("width", '400px');
                    //清除缩小按钮
                    document.getElementById("smallButton").style.setProperty('display', 'none');
                    //工具清除函数
                    clearTools();
                    //清除筛选
                    table_building.clearFilter();
                    //清除绘图工具
                    paintingLayer.getSource().clear();
                    map.removeInteraction(draw_interaction);
                    draw_interaction = NaN;
                    //初始化录入面板信息
                    cleanInfo_jjlr();
                    //关闭基建图层
                    jjLayer.setVisible(false);
                    //初始化录入面板信息
                    cleanInfo_wxsb();
                    //关闭维修图层
                    wxLayer.setVisible(false);
                    //关闭管线图层
                    if ("undefined" != typeof js_ss_lineLayer) {
                        for (var i = 0; i < layerGroup.length; i++) {
                            var layerName = layerGroup[i].substring(9) + "Layer";
                            eval(layerName).setVisible(false);
                        }
                        //清除框选工具
                        map.removeInteraction(draw_interaction);
                        map.removeInteraction(drawBox_gx);
                        map.removeInteraction(drawCircle);
                    }
                    popup.setPosition(undefined);//清除所有建筑弹窗
                    closer.blur();
                    //清除框选工具
                    map.removeInteraction(dragBox);
                    kxLayer.getSource().clear();
                    map.removeInteraction(drawCircle_xx);
                    map.getOverlays().clear();
                    map.addOverlay(popup);
                    //重置框选图表
                    document.getElementById('chart-pin').style.display = 'none';
                    document.getElementById('chart-c').style.display = 'none';
                    document.getElementById('kx_building').style.display = 'none';
                    //框选数量总数提示
                    document.getElementById("kxTips").style.display = 'none';
                    $("#qx").prop('class', 'btn btn-warning');
                    $("#kx").prop('class', 'btn btn-warning');
                    $("#kxtc").val('no');
                    $("#chart-c").val('option');
                }
                break;
            case "jjlr":
                if ($("#dropdown-menu-jjlr").attr('class') == 'dropdown-menu-jjlr showing') {
                    $("#dropdown-menu-jjlr").attr('class', 'dropdown-menu-jjlr hiding');
                    //清除基建绘图工具
                    paintingLayer.getSource().clear();
                    map.removeInteraction(draw_interaction);
                    draw_interaction = NaN;
                    //初始化录入面板信息
                    cleanInfo_jjlr();
                    //关闭基建图层
                    jjLayer.setVisible(false);
                    //初始化录入面板信息
                    cleanInfo_wxsb();
                    //关闭维修图层
                    wxLayer.setVisible(false);
                    popup.setPosition(undefined);//清除所有建筑弹窗
                    closer.blur();
                }
                else {
                    document.getElementById("dropdown-menu-jjlr").style.setProperty('display', 'block');
                    $("#dropdown-menu-poi").attr('class', 'dropdown-menu-poi hiding');
                    $("#dropdown-menu-kx").attr('class', 'dropdown-menu-poi hiding');
                    $("#dropdown-menu-jjcx").attr('class', 'dropdown-menu-jjcx hiding');
                    $("#dropdown-menu-wxcx").attr('class', 'dropdown-menu-wxcx hiding');
                    $("#dropdown-menu-wxlr").attr('class', 'dropdown-menu-wxlr hiding');
                    $("#dropdown-menu-ewgx").attr('class', 'dropdown-menu-ewgx hiding');
                    $("#dropdown-menu-jjlr").attr('class', 'dropdown-menu-jjlr showing');
                    itemType = "jj";
                    //清除缩小按钮
                    document.getElementById("smallButton").style.setProperty('display', 'none');
                    //工具清除函数
                    clearTools();
                    //关闭管线图层
                    if ("undefined" != typeof js_ss_lineLayer) {
                        for (var i = 0; i < layerGroup.length; i++) {
                            var layerName = layerGroup[i].substring(9) + "Layer";
                            eval(layerName).setVisible(false);
                        }
                        //清除框选工具
                        map.removeInteraction(draw_interaction);
                        map.removeInteraction(drawBox_gx);
                        map.removeInteraction(drawCircle);
                    }
                    //初始化录入面板信息
                    cleanInfo_wxsb();
                    //清除基建绘图工具
                    paintingLayer.getSource().clear();
                    map.removeInteraction(draw_interaction);
                    draw_interaction = NaN;
                    interaction_type_draw_polygon();//同页面刷新一起初始化绘图工具
                    //打开基建图层
                    jjLayer.setVisible(true);
                    //关闭维修图层
                    wxLayer.setVisible(false);
                    popup.setPosition(undefined);//清除所有建筑弹窗
                    //清除框选工具
                    map.removeInteraction(dragBox);
                    kxLayer.getSource().clear();
                    map.removeInteraction(drawCircle_xx);
                    map.getOverlays().clear();
                    map.addOverlay(popup);
                    //重置框选图表
                    document.getElementById('chart-pin').style.display = 'none';
                    document.getElementById('chart-c').style.display = 'none';
                    document.getElementById('kx_building').style.display = 'none';
                    //框选数量总数提示
                    document.getElementById("kxTips").style.display = 'none';
                    closer.blur();
                }
                break;
            case "jjcx":
                if ($("#dropdown-menu-jjcx").attr('class') == 'dropdown-menu-jjcx showing') {
                    $("#dropdown-menu-jjcx").attr('class', 'dropdown-menu-jjcx hiding');
                    //关闭基建图层
                    jjLayer.setVisible(false);
                    popup.setPosition(undefined);//清除所有建筑弹窗
                    closer.blur();
                }
                else {
                    document.getElementById("dropdown-menu-jjcx").style.setProperty('display', 'block');
                    $("#dropdown-menu-kx").attr('class', 'dropdown-menu-poi hiding');
                    $("#dropdown-menu-poi").attr('class', 'dropdown-menu-poi hiding');
                    $("#dropdown-menu-jjlr").attr('class', 'dropdown-menu-jjlr hiding');
                    $("#dropdown-menu-wxcx").attr('class', 'dropdown-menu-wxcx hiding');
                    $("#dropdown-menu-wxlr").attr('class', 'dropdown-menu-wxlr hiding');
                    $("#dropdown-menu-ewgx").attr('class', 'dropdown-menu-ewgx hiding');
                    //初始化统计结果
                    var jj_tj_results = table_jj.getCalcResults();
                    var syzjResult = jj_tj_results.bottom.SYZJ;
                    var smgsResult = jj_tj_results.bottom.MC;
                    document.getElementById("jjcx_tj_xmgs").value = smgsResult;
                    document.getElementById("jjcx_tj_syzj").value = syzjResult;
                    //清除jjcx信息筛选信息
                    $("#filter-field2").val("1");
                    //$("#filter-type2").val("1");
                    $("#filter-value2").val("");
                    //清除缩小按钮
                    document.getElementById("smallButton").style.setProperty('display', 'none');
                    //工具清除函数
                    clearTools();


                    //同步表格数据
                    $.ajax({
                        type: "POST",
                        url: "tableDataUpdate",
                        data: { type: "jj" },
                        success: function (data) {
                            jjLayer.getSource().clear();
                            data = JSON.parse(data);
                            tableData_jj = [];

                            for (var i = 0; i < data.length; i++) {
                                tableData_jj.push(data[i]);
                            };

                            for (var i = 0; i < tableData_jj.length; i++) {
                                var geom = tableData_jj[i].XMZBC;
                                var geom_Type = tableData_jj[i].XMZB;
                                var name = tableData_jj[i].MC;
                                var geom_Point = tableData_jj[i].XMZBZX;

                                switch (JSON.parse(JSON.parse(geom_Type)).type) {
                                    case "Point":
                                        var feature1 = new ol.Feature({
                                            geometry: new ol.geom.Point(JSON.parse(geom)),
                                            id: i + 1,
                                            name: name,
                                            type: '基建',
                                            label: 'Point',
                                        });
                                        feature1.setStyle(new ol.style.Style({
                                            image: new ol.style.Icon(({
                                                anchor: [0.5, 1],
                                                scale: 0.3,
                                                anchorXUnits: 'fraction',
                                                anchorYUnits: 'pixels',
                                                src: '/images/icon/default_layers_roadclosures_icon_normal@2x.png'
                                            }))
                                        }));
                                        jjvectorSource.addFeature(feature1);
                                        break;
                                    case "LineString":
                                        var feature1 = new ol.Feature({
                                            geometry: new ol.geom.LineString(JSON.parse(geom)),
                                            id: i + 1,
                                            name: name,
                                            type: '基建',
                                            label: 'LineString',
                                        });
                                        feature1.setStyle(new ol.style.Style({
                                            fill: new ol.style.Fill({
                                                color: 'rgba(255, 255, 255, 0.4)'
                                            }),
                                            stroke: new ol.style.Stroke({
                                                color: '#FF4500',
                                                width: 2
                                            }),
                                            image: new ol.style.Circle({
                                                radius: 7,
                                                fill: new ol.style.Fill({
                                                    color: '#ffcc33'
                                                })
                                            })
                                        }));
                                        jjvectorSource.addFeature(feature1);

                                        var feature_icon = new ol.Feature({
                                            geometry: new ol.geom.Point(JSON.parse('[' + geom_Point + ']')),
                                            name: name,
                                            type: '基建',
                                            label: 'LineString',
                                            icon: 'true',
                                        });
                                        feature_icon.setStyle(new ol.style.Style({
                                            image: new ol.style.Icon(({
                                                anchor: [0.5, 1],
                                                offset: [2, 25],
                                                scale: 0.3,
                                                anchorXUnits: 'fraction',
                                                anchorYUnits: 'pixels',
                                                src: '/images/icon/default_layers_roadclosures_icon_normal@2x.png',
                                            }))
                                        }));
                                        jjvectorSource.addFeature(feature_icon);
                                        break;
                                    case "Polygon":
                                        var feature1 = new ol.Feature({
                                            geometry: new ol.geom.Polygon(JSON.parse(geom)),
                                            id: i + 1,
                                            name: name,
                                            type: '基建',
                                            label: 'Polygon',
                                        });
                                        feature1.setStyle(new ol.style.Style({
                                            fill: new ol.style.Fill({
                                                color: 'rgba(255, 255, 255, 0.4)'
                                            }),
                                            stroke: new ol.style.Stroke({
                                                color: '#FF4500',
                                                width: 2
                                            }),
                                            image: new ol.style.Circle({
                                                radius: 7,
                                                fill: new ol.style.Fill({
                                                    color: '#ffcc33'
                                                })
                                            })
                                        }));
                                        jjvectorSource.addFeature(feature1);

                                        var feature_icon = new ol.Feature({
                                            geometry: new ol.geom.Point(JSON.parse('[' + geom_Point + ']')),
                                            name: name,
                                            type: '基建',
                                            label: 'Polygon',
                                            icon: 'true',
                                        });
                                        feature_icon.setStyle(new ol.style.Style({
                                            image: new ol.style.Icon(({
                                                anchor: [0.5, 1],
                                                offset: [2, 19],
                                                scale: 0.3,
                                                anchorXUnits: 'fraction',
                                                anchorYUnits: 'pixels',
                                                src: '/images/icon/default_layers_roadclosures_icon_normal@2x.png',
                                            }))
                                        }));
                                        jjvectorSource.addFeature(feature_icon);
                                        break;
                                };
                            };

                            table_jj.setData(tableData_jj);
                            //统计结果刷新
                            var jj_tj_results = table_jj.getCalcResults();
                            var syzjResult = jj_tj_results.bottom.SYZJ;
                            var smgsResult = jj_tj_results.bottom.MC;
                            document.getElementById("jjcx_tj_xmgs").value = smgsResult;
                            document.getElementById("jjcx_tj_syzj").value = syzjResult;
                        }
                    });
                    
                    $("#dropdown-menu-jjcx").attr('class', 'dropdown-menu-jjcx showing');
                    //打开基建图层
                    jjLayer.setVisible(true);
                    //清除绘图工具
                    paintingLayer.getSource().clear();
                    map.removeInteraction(draw_interaction);
                    draw_interaction = NaN;
                    //初始化录入面板信息
                    cleanInfo_jjlr();
                    //初始化录入面板信息
                    cleanInfo_wxsb();
                    //关闭维修图层
                    wxLayer.setVisible(false);
                    //关闭管线图层
                    if ("undefined" != typeof js_ss_lineLayer) {
                        for (var i = 0; i < layerGroup.length; i++) {
                            var layerName = layerGroup[i].substring(9) + "Layer";
                            eval(layerName).setVisible(false);
                        }
                        //清除框选工具
                        map.removeInteraction(draw_interaction);
                        map.removeInteraction(drawBox_gx);
                        map.removeInteraction(drawCircle);
                    }
                    popup.setPosition(undefined);//清除所有建筑弹窗
                    //清除框选工具
                    map.removeInteraction(dragBox);
                    kxLayer.getSource().clear();
                    map.removeInteraction(drawCircle_xx);
                    map.getOverlays().clear();
                    map.addOverlay(popup);
                    //重置框选图表
                    document.getElementById('chart-pin').style.display = 'none';
                    document.getElementById('chart-c').style.display = 'none';
                    document.getElementById('kx_building').style.display = 'none';
                    //框选数量总数提示
                    document.getElementById("kxTips").style.display = 'none';
                    closer.blur();
                }
                break;
            case "wxcx":
                if ($("#dropdown-menu-wxcx").attr('class') == 'dropdown-menu-wxcx showing') {
                    $("#dropdown-menu-wxcx").attr('class', 'dropdown-menu-wxcx hiding');
                    //关闭维修图层
                    wxLayer.setVisible(false);
                    popup.setPosition(undefined);//清除所有建筑弹窗
                    closer.blur();
                }
                else {
                    document.getElementById("dropdown-menu-wxcx").style.setProperty('display', 'block');
                    $("#dropdown-menu-kx").attr('class', 'dropdown-menu-poi hiding');
                    $("#dropdown-menu-poi").attr('class', 'dropdown-menu-poi hiding');
                    $("#dropdown-menu-jjlr").attr('class', 'dropdown-menu-jjlr hiding');
                    $("#dropdown-menu-jjcx").attr('class', 'dropdown-menu-jjcx hiding');
                    $("#dropdown-menu-wxlr").attr('class', 'dropdown-menu-wxlr hiding');
                    $("#dropdown-menu-ewgx").attr('class', 'dropdown-menu-ewgx hiding');
                   
                    //清除wxcx信息筛选信息
                    $("#filter-field3").val("1");
                    //$("#filter-type3").val("1");
                    $("#filter-value3").val("");
                    //清除缩小按钮
                    document.getElementById("smallButton").style.setProperty('display', 'none');
                    //工具清除函数
                    clearTools();

                    //刷新表格数据
                    $.ajax({
                        type: "POST",
                        url: "tableDataUpdate",
                        data: { type: "wx" },
                        success: function (data) {
                            wxLayer.getSource().clear();
                            data = JSON.parse(data);
                            tableData_wx = [];

                            for (var i = 0; i < data.length; i++) {
                                tableData_wx.push(data[i]);
                            };

                            var allFeatures1 = [];
                            for (i = 0; i < tableData_wx.length; i++) {
                                var iconFeature4 = new ol.Feature({
                                    geometry: new ol.geom.Point([tableData_wx[i].X, tableData_wx[i].Y]),
                                    id: i + 1,
                                    name: tableData_wx[i].ID,
                                    type: '维修',
                                    label: '维修信息'
                                });
                                var iconStyle4 = new ol.style.Style({
                                    image: new ol.style.Icon(({
                                        anchor: [0.5, 1],
                                        scale: 0.3,
                                        anchorXUnits: 'fraction',
                                        anchorYUnits: 'pixels',
                                        src: '/images/icon/default_layers_construction_icon_normal@2x.png'

                                    }))
                                });
                                iconFeature4.setStyle(iconStyle4);
                                allFeatures1.push(iconFeature4);
                            };
                            wxvectorSource.addFeatures(allFeatures1);

                            table_wx.setData(tableData_wx);

                            //初始化统计结果
                            var wx_tj_results = table_wx.getCalcResults();
                            var smgsResult = wx_tj_results.bottom.SBRY;
                            document.getElementById("wxsb_tj_xmgs").value = smgsResult;
                        }
                    });
                    
                    $("#dropdown-menu-wxcx").attr('class', 'dropdown-menu-wxcx showing');
                    //打开维修图层
                    wxLayer.setVisible(true);
                    //清除绘图工具
                    paintingLayer.getSource().clear();
                    map.removeInteraction(draw_interaction);
                    draw_interaction = NaN;
                    //初始化录入面板信息
                    cleanInfo_jjlr();
                    //关闭基建图层
                    jjLayer.setVisible(false);
                    //初始化录入面板信息
                    cleanInfo_wxsb();
                    //关闭管线图层
                    if ("undefined" != typeof js_ss_lineLayer) {

                        for (var i = 0; i < layerGroup.length; i++) {
                            var layerName = layerGroup[i].substring(9) + "Layer";
                            eval(layerName).setVisible(false);
                        }
                        //清除框选工具
                        map.removeInteraction(draw_interaction);
                        map.removeInteraction(drawBox_gx);
                        map.removeInteraction(drawCircle);
                    }
                    popup.setPosition(undefined);//清除所有建筑弹窗
                    //清除框选工具
                    map.removeInteraction(dragBox);
                    kxLayer.getSource().clear();
                    map.removeInteraction(drawCircle_xx);
                    map.getOverlays().clear();
                    map.addOverlay(popup);
                    //重置框选图表
                    document.getElementById('chart-pin').style.display = 'none';
                    document.getElementById('chart-c').style.display = 'none';
                    document.getElementById('kx_building').style.display = 'none';
                    //框选数量总数提示
                    document.getElementById("kxTips").style.display = 'none';
                    closer.blur();
                }
                break;
            case "wxlr":
                if ($("#dropdown-menu-wxlr").attr('class') == 'dropdown-menu-wxlr showing') {
                    $("#dropdown-menu-wxlr").attr('class', 'dropdown-menu-wxlr hiding');
                    //清除基建绘图工具
                    paintingLayer.getSource().clear();
                    map.removeInteraction(draw_interaction);
                    draw_interaction = NaN;
                    //初始化录入面板信息
                    cleanInfo_wxsb();
                    //关闭维修图层
                    wxLayer.setVisible(false);
                    popup.setPosition(undefined);//清除所有建筑弹窗
                    closer.blur();
                }
                else {
                    document.getElementById("dropdown-menu-wxlr").style.setProperty('display', 'block');
                    $("#dropdown-menu-kx").attr('class', 'dropdown-menu-poi hiding');
                    $("#dropdown-menu-poi").attr('class', 'dropdown-menu-poi hiding');
                    $("#dropdown-menu-jjlr").attr('class', 'dropdown-menu-jjlr hiding');
                    $("#dropdown-menu-jjcx").attr('class', 'dropdown-menu-jjcx hiding');
                    $("#dropdown-menu-wxcx").attr('class', 'dropdown-menu-wxcx hiding');
                    $("#dropdown-menu-ewgx").attr('class', 'dropdown-menu-ewgx hiding');
                    $("#dropdown-menu-wxlr").attr('class', 'dropdown-menu-wxlr showing');
                    itemType = "wx";
                    //清除缩小按钮
                    document.getElementById("smallButton").style.setProperty('display', 'none');
                    //工具清除函数
                    clearTools();
                    //关闭基建图层
                    jjLayer.setVisible(false);
                    //关闭管线图层
                    if ("undefined" != typeof js_ss_lineLayer) {
                        for (var i = 0; i < layerGroup.length; i++) {
                            var layerName = layerGroup[i].substring(9) + "Layer";
                            eval(layerName).setVisible(false);
                        }
                        //清除框选工具
                        map.removeInteraction(draw_interaction);
                        map.removeInteraction(drawBox_gx);
                        map.removeInteraction(drawCircle);
                    }
                    //初始化录入面板信息
                    cleanInfo_jjlr();
                    //清除基建绘图工具
                    paintingLayer.getSource().clear();
                    map.removeInteraction(draw_interaction);
                    draw_interaction = NaN;
                    interaction_type_draw_point();//同页面刷新一起初始化绘图工具
                    //打开维修图层
                    wxLayer.setVisible(true);
                    popup.setPosition(undefined);//清除所有建筑弹窗
                    //清除框选工具
                    map.removeInteraction(dragBox);
                    kxLayer.getSource().clear();
                    map.removeInteraction(drawCircle_xx);
                    map.getOverlays().clear();
                    map.addOverlay(popup);
                    //重置框选图表
                    document.getElementById('chart-pin').style.display = 'none';
                    document.getElementById('chart-c').style.display = 'none';
                    document.getElementById('kx_building').style.display = 'none';
                    //框选数量总数提示
                    document.getElementById("kxTips").style.display = 'none';
                    closer.blur();
                }
                break;
            case "ewgx":
                if ($("#dropdown-menu-ewgx").attr('class') == 'dropdown-menu-ewgx showing') {
                    $("#dropdown-menu-ewgx").attr('class', 'dropdown-menu-ewgx hiding');

                    for (var i = 0; i < layerGroup.length; i++) {
                        var layerName = layerGroup[i].substring(9) + "Layer";
                        eval(layerName).setVisible(false);
                    }
                    //清除框选工具
                    map.removeInteraction(draw_interaction);
                    map.removeInteraction(drawBox_gx);
                    map.removeInteraction(drawCircle);
                    paintingLayer.getSource().clear();
                    popup.setPosition(undefined);//清除所有建筑弹窗
                    map.getOverlays().clear();
                    map.addOverlay(popup);
                    //清除管线点击事件
                    searchLayer.getSource().clear();
                    ol.Observable.unByKey(building);
                    if (typeof gxgd!="undefined")
                        ol.Observable.unByKey(gxgd);
                    addclick();
                    closer.blur();
                    //初始化管线图层
                    //gxdClick();
                    //setLayers();
                    $("#psgx").prop('checked', false);
                    $("#ps_ws_line").prop('checked', false);
                    $("#ps_ws_point").prop('checked', false);
                    $("#ps_ys_line").prop('checked', false);
                    $("#ps_ys_point").prop('checked', false);
                    $("#ps_aq_line").prop('checked', false);
                    $("#ps_aq_point").prop('checked', false);
                    $("#rqgx").prop('checked', false);
                    $("#rq_tr_line").prop('checked', false);
                    $("#rq_tr_point").prop('checked', false);
                    $("#gsgx").prop('checked', false);
                    $("#js_ss_line").prop('checked', false);
                    $("#js_ss_point").prop('checked', false);
                    $("#dlgx").prop('checked', false);
                    $("#dl_gd_line").prop('checked', false);
                    $("#dl_gd_point").prop('checked', false);
                    $("#dl_ld_line").prop('checked', false);
                    $("#dl_ld_point").prop('checked', false);
                    $("#dxgx").prop('checked', false);
                    $("#dx_tx_line").prop('checked', false);
                    $("#dx_tx_point").prop('checked', false);
                    $("#dx_ex_line").prop('checked', false);
                    $("#dx_ex_point").prop('checked', false);
                    $("#dx_dt_line").prop('checked', false);
                    $("#dx_dt_point").prop('checked', false);
                    $("#dx_yx_line").prop('checked', false);
                    $("#dx_yx_point").prop('checked', false);
                    $("#dx_lx_line").prop('checked', false);
                    $("#dx_lx_point").prop('checked', false);
                    $("#dx_jk_line").prop('checked', false);
                    $("#dx_jk_point").prop('checked', false);
                    $("#dx_jy_line").prop('checked', false);
                    $("#dx_jy_point").prop('checked', false);
                    $("#rlgx").prop('checked', false);
                    $("#rl_rs_line").prop('checked', false);
                    $("#rl_rs_point").prop('checked', false);
                    $("#wzgx").prop('checked', false);
                    $("#wz_wz_point").prop('checked', false);
                    popup.setPosition(undefined);//清除所有建筑弹窗
                    closer.blur();
                    //重置管线面板数据
                    changeButton.innerHTML = "图表模式";
                    $("#changeTable").attr('class', 'btn btn-info');
                    $("#kx-gx").attr('class', 'btn btn-warning');
                    $("#qx-gx").attr('class', 'btn btn-warning');
                    $("#dbxx-gx").attr('class', 'btn btn-warning');
                    $("#dx-gx").attr('class', 'btn btn-warning');
                    $("#gx").prop('checked', true);
                    document.getElementById("gxText").setAttribute('style', 'color:cornflowerblue');
                    document.getElementById("gdText").setAttribute('style', '');
                    document.getElementById("tjText").setAttribute('style', '');
                    document.getElementById("table_gx").style.display = "block";
                    document.getElementById("table_gd").style.display = "none";
                    document.getElementById("table_gdx").style.display = "none";
                    document.getElementById("exportTable").style.display = "none";
                    //document.getElementById("dx-gx").style.setProperty('display', 'none');
                    document.getElementById("filterMenu").style.display = "block";
                    gxChart.clear();
                    gdChart.clear();
                    document.getElementById("gdchart").style.display = "none";
                    document.getElementById("gxchart").style.display = "none";
                    document.getElementById("gxdchart-c").style.display = "none";
                    document.getElementById("filter-field-gxLayer").style.display = "inline-block";
                    //重置图层面板
                    document.getElementById("changeLayer").innerHTML = '<i class="fa fa-angle-double-right"></i>';
                    document.getElementById("showTable").innerHTML = '<i class="fa fa-angle-double-down"></i>';
                    $("#changeLayer").prop('class', 'btn btn-success');
                    $("#showTable").prop('class', 'btn btn-success');
                    document.getElementById("allTable").style.setProperty('display', 'none');
                    $("#gxLayerTree").prop('class', 'col-lg-1 hiding');
                    $("#gxLayerTable").prop('class', 'col-lg-11');
                    document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '450px');
                    document.getElementById("dropdown-menu-ewgx").style.setProperty('height', '200px');
                    table_gx.clearData();
                    table_gd.clearData();
                    table_gdxSearch.clearData();
                    $("#filter-field-gxLayer").empty();
                    document.getElementById('filter-field-gxLayer').options.add(new Option("管线类型", ""));
                }
                else {
                    document.getElementById("dropdown-menu-ewgx").style.setProperty('display', 'block');
                    $("#dropdown-menu-kx").attr('class', 'dropdown-menu-poi hiding');
                    $("#dropdown-menu-poi").attr('class', 'dropdown-menu-poi hiding');
                    $("#dropdown-menu-jjlr").attr('class', 'dropdown-menu-jjlr hiding');
                    $("#dropdown-menu-jjcx").attr('class', 'dropdown-menu-jjcx hiding');
                    $("#dropdown-menu-wxcx").attr('class', 'dropdown-menu-wxcx hiding');
                    $("#dropdown-menu-wxlr").attr('class', 'dropdown-menu-wxlr hiding');
                    $("#dropdown-menu-ewgx").attr('class', 'dropdown-menu-ewgx showing');
                    //清除缩小按钮
                    document.getElementById("smallButton").style.setProperty('display', 'none');
                    //工具清除函数
                    clearTools();
                    //清除绘图工具
                    paintingLayer.getSource().clear();
                    map.removeInteraction(draw_interaction);
                    draw_interaction = NaN;
                    //初始化录入面板信息
                    cleanInfo_jjlr();
                    //关闭基建图层
                    jjLayer.setVisible(false);
                    //初始化录入面板信息
                    cleanInfo_wxsb();
                    //关闭维修图层
                    wxLayer.setVisible(false);
                    //初始化管线图层
                    //gxdClick();
                    if (typeof js_ss_lineLayer== "undefined") {
                        addLayers();
                    } else {
                        for (var i = 0; i < layerGroup.length; i++) {
                            var layerName = layerGroup[i].substring(9) + "Layer";
                            eval(layerName).setVisible(false);
                        };
                    };
                    $("#psgx").prop('checked', false);
                    $("#ps_ws_line").prop('checked', false);
                    $("#ps_ws_point").prop('checked', false);
                    $("#ps_ys_line").prop('checked', false);
                    $("#ps_ys_point").prop('checked', false);
                    $("#ps_aq_line").prop('checked', false);
                    $("#ps_aq_point").prop('checked', false);
                    $("#rqgx").prop('checked', false);
                    $("#rq_tr_line").prop('checked', false);
                    $("#rq_tr_point").prop('checked', false);
                    $("#gsgx").prop('checked', false);
                    $("#js_ss_line").prop('checked', false);
                    $("#js_ss_point").prop('checked', false);
                    $("#dlgx").prop('checked', false);
                    $("#dl_gd_line").prop('checked', false);
                    $("#dl_gd_point").prop('checked', false);
                    $("#dl_ld_line").prop('checked', false);
                    $("#dl_ld_point").prop('checked', false);
                    $("#dxgx").prop('checked', false);
                    $("#dx_tx_line").prop('checked', false);
                    $("#dx_tx_point").prop('checked', false);
                    $("#dx_ex_line").prop('checked', false);
                    $("#dx_ex_point").prop('checked', false);
                    $("#dx_dt_line").prop('checked', false);
                    $("#dx_dt_point").prop('checked', false);
                    $("#dx_yx_line").prop('checked', false);
                    $("#dx_yx_point").prop('checked', false); 
                    $("#dx_lx_line").prop('checked', false);
                    $("#dx_lx_point").prop('checked', false);
                    $("#dx_jk_line").prop('checked', false);
                    $("#dx_jk_point").prop('checked', false);
                    $("#dx_jy_line").prop('checked', false);
                    $("#dx_jy_point").prop('checked', false);
                    $("#rlgx").prop('checked', false);
                    $("#rl_rs_line").prop('checked', false);
                    $("#rl_rs_point").prop('checked', false);
                    $("#wzgx").prop('checked', false);
                    $("#wz_wz_point").prop('checked', false);
                    popup.setPosition(undefined);//清除所有建筑弹窗
                    closer.blur();
                    //重置管线面板数据
                    changeButton.innerHTML = "图表模式";
                    $("#changeTable").attr('class', 'btn btn-info');
                    $("#kx-gx").attr('class', 'btn btn-warning');
                    $("#qx-gx").attr('class', 'btn btn-warning');
                    $("#dbxx-gx").attr('class', 'btn btn-warning');
                    $("#dx-gx").attr('class', 'btn btn-warning');
                    $("#gx").prop('checked', true);
                    document.getElementById("gxText").setAttribute('style', 'color:cornflowerblue');
                    document.getElementById("gdText").setAttribute('style', '');
                    document.getElementById("tjText").setAttribute('style', '');
                    document.getElementById("table_gx").style.display = "block";
                    document.getElementById("table_gd").style.display = "none";
                    document.getElementById("table_gdx").style.display = "none";
                    document.getElementById("exportTable").style.display = "none";
                    //document.getElementById("dx-gx").style.setProperty('display', 'none');
                    document.getElementById("filterMenu").style.display = "block";
                    gxChart.clear();
                    gdChart.clear();
                    document.getElementById("gdchart").style.display = "none";
                    document.getElementById("gxchart").style.display = "none";
                    document.getElementById("gxdchart-c").style.display = "none";
                    document.getElementById("tjtj").style.display = "inline-block";
                    document.getElementById("filter-field-gxLayer").style.display = "inline-block";
                    //重置图层面板
                    document.getElementById("changeLayer").innerHTML = '<i class="fa fa-angle-double-right"></i>';
                    document.getElementById("showTable").innerHTML = '<i class="fa fa-angle-double-down"></i>';
                    $("#changeLayer").prop('class', 'btn btn-success');
                    $("#showTable").prop('class', 'btn btn-success');
                    document.getElementById("allTable").style.setProperty('display', 'none');
                    document.getElementById("changeTable").style.setProperty('display', 'none');
                    $("#gxLayerTree").prop('class', 'col-lg-1 hiding');
                    $("#gxLayerTable").prop('class', 'col-lg-11');
                    document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '450px');
                    document.getElementById("dropdown-menu-ewgx").style.setProperty('height', '200px');
                    table_gx.clearData();
                    table_gd.clearData();
                    table_gdxSearch.clearData();
                    $("#filter-field-gxLayer").empty();
                    document.getElementById('filter-field-gxLayer').options.add(new Option("管线类型", ""));
                    //清除框选工具
                    map.removeInteraction(dragBox);
                    kxLayer.getSource().clear();
                    map.removeInteraction(drawCircle_xx);
                    map.getOverlays().clear();
                    map.addOverlay(popup);
                    //重置框选图表
                    document.getElementById('chart-pin').style.display = 'none';
                    document.getElementById('chart-c').style.display = 'none';
                    document.getElementById('kx_building').style.display = 'none';
                    //框选数量总数提示
                    document.getElementById("kxTips").style.display = 'none';
                }
                break;
        }
    };

    //随菜单栏大小改变变换面板位置
    document.getElementById('change').onclick = function () {

        if ($("body").hasClass("cm-menu-toggled")) {
            document.getElementById('dropdown-menu-poi').style.left = "270px";
            document.getElementById('dropdown-menu-jjlr').style.left = "270px";
            document.getElementById('dropdown-menu-jjcx').style.left = "270px";
            document.getElementById('dropdown-menu-wxlr').style.left = "270px";
            document.getElementById('dropdown-menu-wxcx').style.left = "270px";
            document.getElementById('dropdown-menu-ewgx').style.left = "270px";
            document.getElementById('dropdown-menu-kx').style.left = "270px";
            document.getElementById('smallButton').style.left = "273px";
            document.getElementsByClassName('ol-zoom')[0].style.left = "280px";
            document.getElementsByClassName('ol-zoomslider')[0].style.left = "280px";
            document.getElementsByClassName('ol-scale-line')[0].style.left = "280px";
            if (document.getElementById("xxfwButton").style.display != "block")
            {
                document.getElementById("xxfwButton").style.display = "none";
                document.getElementById("jjxm").style.display = "none";
                document.getElementById("wxxm").style.display = "none";
                document.getElementById("gxfw").style.display = "none";
            };
        }
        else {
            document.getElementById('dropdown-menu-poi').style.left = "60px";
            document.getElementById('dropdown-menu-jjlr').style.left = "60px";
            document.getElementById('dropdown-menu-jjcx').style.left = "60px";
            document.getElementById('dropdown-menu-wxlr').style.left = "60px";
            document.getElementById('dropdown-menu-wxcx').style.left = "60px";
            document.getElementById('dropdown-menu-ewgx').style.left = "60px";
            document.getElementById('dropdown-menu-kx').style.left = "60px";
            document.getElementById('smallButton').style.left = "63px";
            document.getElementsByClassName('ol-zoom')[0].style.left = "70px";
            document.getElementsByClassName('ol-zoomslider')[0].style.left = "70px";
            document.getElementsByClassName('ol-scale-line')[0].style.left = "70px";
        }

    };


    //图层按钮控制
    document.getElementById('layerTreeButton').onclick = function () {
        if ($("#layerTree").attr('class') == 'layerTree showing-right') {
            $("#layerTree").attr('class', 'layerTree hiding-right');

        } else {
            //工具清理函数
            clearTools();
            document.getElementById("layerTree").style.setProperty('display', 'block');
            $("#layerTree").attr('class', 'layerTree showing-right');
            $("#dropdown-menu-cl").attr('class', 'dropdown-menu-cl hiding-right');
            $("#searchBar").attr('class', 'input-group hiding-right');
        }
    };


    //测量按钮控制
    document.getElementById('measureButton').onclick = function () {
        if ($("#dropdown-menu-cl").attr('class') == 'dropdown-menu-cl showing-right') {
            $("#dropdown-menu-cl").attr('class', 'dropdown-menu-cl hiding-right');
            map.removeInteraction(draw);
            //重新进行绘制
            measureLayer.getSource().clear();
            map.getOverlays().clear();
            map.addOverlay(popup);
            element.style.display = 'block';
            map.removeEventListener('singleclick');
            map.removeEventListener('dblclick');

        } else {
            //工具清理函数
            clearTools();
            document.getElementById("dropdown-menu-cl").style.setProperty('display', 'block');
            $("#dropdown-menu-cl").attr('class', 'dropdown-menu-cl showing-right');
            $("#layerTree").attr('class', 'layerTree hiding-right');
            $("#searchBar").attr('class', 'input-group hiding-right');
        }

    };

    //道路检索按钮控制
    document.getElementById('roadSearchButton').onclick = function () {
        if ($("#searchBar").attr('class') == 'input-group showing-right') {
            $("#searchBar").attr('class', 'input-group hiding-right');
            searchLayer.getSource().clear();

        } else {
            //工具清理函数
            clearTools();
            document.getElementById("searchBar").style.setProperty('display', 'flex');
            $("#searchBar").attr('class', 'input-group showing-right');
            $("#dropdown-menu-cl").attr('class', 'dropdown-menu-cl hiding-right');
            $("#layerTree").attr('class', 'layerTree hiding-right');
        }
    };

    //全景按钮控制
    document.getElementById('sceneButton').onclick = function () {
        if (document.getElementById("sceneButton").getAttribute("class") == "sceneButton") {
            //工具清理函数
            clearTools();
            qjLayer.setVisible(true);
            $("#sceneButton").attr('class', 'sceneButton active');
        } else {
            qjLayer.setVisible(false);
            $("#sceneButton").attr('class', 'sceneButton');
        }
    };

    //街道景按钮控制
    document.getElementById('streetSceneButton').onclick = function () {
        if (document.getElementById("streetSceneButton").getAttribute("class") == "streetSceneButton") {
            //工具清理函数
            clearTools();
            jiejLayer.setVisible(true);
            $("#streetSceneButton").attr('class', 'streetSceneButton active');


            jiejLayer.setVisible(true);
            jiejMLayer.getSource().clear();
            jiejMLayer.setVisible(true);

            map.on('click', function (e) {
                var closeFeature = jiejvectorSource.getClosestFeatureToCoordinate(e.coordinate);
                $("#myModalLabel_qj").text("街景查看");
                document.getElementById("myModal_qj").style.setProperty("top", "50px");
                document.getElementById("myModal_qj").style.setProperty("left", "50px");
                $('#myModal_qj').modal();
                featuremarker = closeFeature.get('name');
                openkrpano("j");
            });

        } else {
            jiejLayer.setVisible(false);
            jiejMLayer.getSource().clear();
            jiejLayer.setVisible(false);
            $("#streetSceneButton").attr('class', 'streetSceneButton');
            /*ssLayer.setVisible(true);
            jxlLayer.setVisible(true);
            ctLayer.setVisible(true);
            gjzLayer.setVisible(true);
            xndwLayer.setVisible(true);
            tycLayer.setVisible(true);
            sdLayer.setVisible(true);
            ylLayer.setVisible(true);
            jdLayer.setVisible(true);
            hdzxLayer.setVisible(true);
            wxLayer.setVisible(true);
            jjLayer.setVisible(true);*/
            jiejLayer.setVisible(false);
            map.removeEventListener('click');
            addclick();
        }
    };
    /*--------------------------地图面板滑入控制结束------------------------------*/


    /*======================================信息查询模块======================================*/
    //初始化过滤器
    function updateFilter() {
        var filter = $("#filter-field").val();
        //$("#filter-type").prop("disabled", false);
        $("#filter-value").prop("disabled", false);
        //table_building.setFilter(filter, $("#filter-type").val(), $("#filter-value").val());
        table_building.setFilter(filter,'like', $("#filter-value").val());
    };

    $("#filter-field").change(updateFilter);
    $("#filter-value").keyup(updateFilter);

    $("#filter-clear").click(function () {
        $("#building-search").select2("val", " ");
        $("#building-search").select2({
            placeholder: "请选择查询信息",
            language: 'zh-CN'
        });
        $("#filter-field").val("1");
        //$("#filter-type").val("1");
        $("#filter-value").val("");
        table_building.clearFilter();
        ssLayer.setVisible(true);
        jxlLayer.setVisible(true);
        ctLayer.setVisible(true);
        gjzLayer.setVisible(true);
        xndwLayer.setVisible(true);
        tycLayer.setVisible(true);
        sdLayer.setVisible(true);
        ylLayer.setVisible(true);
        jdLayer.setVisible(true);
        hdzxLayer.setVisible(true);
        olLayer.setVisible(true);
        $("#jxlLayer").prop('checked', true);
        $("#ctLayer").prop('checked', true);
        $("#gjzLayer").prop('checked', true);
        $("#xndwLayer").prop('checked', true);
        $("#tycLayer").prop('checked', true);
        $("#sdLayer").prop('checked', true);
        $("#ylLayer").prop('checked', true);
        $("#jdLayer").prop('checked', true);
        $("#hdzxLayer").prop('checked', true);
        $("#olLayer").prop('checked', true);
        $("#ssLayer").prop('checked', true);


    });

    function setVisible(x) {
        ssLayer.setVisible(false);
        jxlLayer.setVisible(false);
        ctLayer.setVisible(false);
        gjzLayer.setVisible(false);
        xndwLayer.setVisible(false);
        tycLayer.setVisible(false);
        sdLayer.setVisible(false);
        ylLayer.setVisible(false);
        jdLayer.setVisible(false);
        hdzxLayer.setVisible(false);
        olLayer.setVisible(false);
        eval(x + "Layer").setVisible(true);
    };

    function setExtent() {
        view.animate({
            center: ([229900.75146050294, 102750.57857082381]),
            duration: 500,
        });
        view.animate({
            zoom: 8,
            duration: 500,
        });
    };

    function setCheck() {
        $("#jxlLayer").prop('checked', false);
        $("#ctLayer").prop('checked', false);
        $("#gjzLayer").prop('checked', false);
        $("#xndwLayer").prop('checked', false);
        $("#tycLayer").prop('checked', false);
        $("#sdLayer").prop('checked', false);
        $("#ylLayer").prop('checked', false);
        $("#jdLayer").prop('checked', false);
        $("#hdzxLayer").prop('checked', false);
        $("#olLayer").prop('checked', false);
        $("#ssLayer").prop('checked', false);
        $("#otherLayer").prop('checked', false);
    };

    function changeColor() {
        document.getElementById("btn-ss").style.background = "#FFFFFF";
        document.getElementById("btn-gjz").style.background = "#FFFFFF";
        document.getElementById("btn-ct").style.background = "#FFFFFF";
        document.getElementById("btn-xndw").style.background = "#FFFFFF";
          document.getElementById("btn-jxl").style.background = "#FFFFFF";
        document.getElementById("btn-sd").style.background = "#FFFFFF";
        document.getElementById("btn-jd").style.background = "#FFFFFF";
        document.getElementById("btn-tyc").style.background = "#FFFFFF";
    }

    //快捷POI筛选菜单
    function search_method(e) {
        popup.setPosition(undefined);//清除所有建筑弹窗
        closer.blur();
        changeColor();//改变分类点击背景颜色
        document.getElementById("btn-" + e).style.background = "#FFF68F";
        switch (e) {
            case "ss":
                table_building.clearFilter();
                table_building.setFilter("XLB", "=", "学生公寓");
                setVisible(e);
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#ssLayer").prop('checked', true);
                setExtent();
                break;
            case "gjz":
                table_building.clearFilter();
                table_building.setFilter("LB", "=", "古建筑");
                setVisible(e);
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#gjzLayer").prop('checked', true);
                setExtent();
                break;
            case "ct":
                table_building.clearFilter();
                table_building.setFilter("XLB", "=", "餐厅");
                setVisible(e);
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#ctLayer").prop('checked', true);
                setExtent();
                break;
            case "xndw":
                table_building.clearFilter();
                table_building.setFilter("LB", "=", "校内单位");
                setVisible(e);
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#xndwLayer").prop('checked', true);
                setExtent();
                break;
            case "jxl":
                table_building.clearFilter();
                table_building.setFilter("LB", "=", "教学楼");
                setVisible(e);
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#jxlLayer").prop('checked', true);
                setExtent();
                break;
            case "sd":
                table_building.clearFilter();
                table_building.setFilter("XLB", "=", "商店");
                setVisible(e);
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#sdLayer").prop('checked', true);
                setExtent();
                break;
            case "jd":
                table_building.clearFilter();
                table_building.setFilter("XLB", "=", "景点");
                setVisible(e);
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#jdLayer").prop('checked', true);
                setExtent();
                break;
            case "tyc":
                table_building.clearFilter();
                table_building.setFilter("XLB", "=", "体育场");
                setVisible(e);
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#tycLayer").prop('checked', true);
                setExtent();
                break;
        }
    };
    var locationIcon = function (cell, formatterParams) { //定位图标
        return "<i class='fa fa-location-arrow'></i>";
    };
    var deleteIcon = function (cell, formatterParams) { //删除图标
        return "<i class='fa fa-trash-o'></i>";
    };
    var detialIcon = function (cell, formatterParams) { //查看详情图标
        return "<i class='fa fa-info-circle'></i>";
    };


    //建筑查询表格
    var table_building = new Tabulator("#table_building", {
        data: tableData_building,
        height: "411px",
        layout: "fitColumns",
        columns: [
            {
                formatter: locationIcon, width: 20, align: "center", cellClick: function (e, cell) {
                    var geom = new Array();
                    geom[0] = cell.getRow().getData().X - 70;
                    geom[1] = cell.getRow().getData().Y;
                    var geom1 = new Array();
                    geom1[0] = cell.getRow().getData().X;
                    geom1[1] = cell.getRow().getData().Y;
                    //alert(geom);
                    view.animate({
                        center: (geom),
                        duration: 500,
                    });
                    view.animate({
                        zoom: 10,
                        duration: 500,
                    });
                    element.style.display = 'block';
                    popup.setPosition(geom1);
                    pass = cell.getRow().getData().MC;
                    content.innerHTML = '<h5>' + cell.getRow().getData().MC + '</h5><hr>' + '<a onclick="show()">详细信息>></a>';
                }
            },
            {
                formatter: detialIcon, width: 20, align: "center", cellClick: function (e, cell) {
                    $(element).popover('destroy');

                    var markerID = cell.getRow().getData().BSM;
                    var markerName = cell.getRow().getData().MC;

                    document.getElementById("video").innerHTML = '';
                    document.getElementById("video").innerHTML = '<li style="font-size:15px;"><strong>视频查看:&nbsp;&nbsp;</strong></li>';
                    document.getElementById("video").style.display = "none";

                    document.getElementById("viewer").innerHTML = '';
                    document.getElementById("viewer").innerHTML = '<li style="font-size:15px"><strong>图片查看:&nbsp;&nbsp;</strong></li>';
                    $.ajax({
                        type: "GET",
                        url: "getFileNum",
                        data: { BSM: markerID, type: "image" },
                        success: function (data) {
                            if (data.length == 0) {
                                return;
                            };

                            for (var j = 0; j < data.length; j++) {
                                var pathImg = data[j].substring(7);
                                document.getElementById("viewer").innerHTML += '<li><img data-original=' + pathImg + ' src=' + pathImg + ' alt="图片1" style="width:100px"></li>&nbsp;&nbsp;';
                            };
                            viewer.update();
                        },
                        error: function () {

                            document.getElementById("viewer").innerHTML += '<li><img data-original=~/Source/none/pic/1.png src=/Source/none/pic/1.png alt="图片1" style="width:100px"></li>&nbsp;&nbsp;';
                        }
                    });

                    $.ajax({
                        type: "GET",
                        url: "getFileNum",
                        data: { BSM: markerID, type: "video" },
                        success: function (data) {
                            if (data.length == 0) {
                                return;
                            };

                            document.getElementById("video").style.display = "block";

                            for (var j = 0; j < data.length; j++) {
                                var pathImg = data[j].substring(7);
                                document.getElementById("video").innerHTML += '<li><video id="example_video_1" class="video-js vjs-default-skin" controls preload="none" width="400" height="200" poster="/images/BG.png" data-setup="{}"><source src=' + pathImg + ' /></video></li>';
                            };
                            viewer.update();
                        },
                        error: function () {

                            document.getElementById("video").innerHTML += '<li><video id="example_video_1" class="video-js vjs-default-skin" controls preload="none" width="400" height="200" poster="/images/BG.png" data-setup="{}"><source src="/Source/' + markerID + '/video/1.mov" type="video/mov" /></video></li>';
                        }
                    });

                    $('#myModal2').modal();
                    $("#myModalLabel2").text(cell.getRow().getData().MC);
                    $("#fontlb").text(cell.getRow().getData().LB + " " + cell.getRow().getData().XLB);
                    $("#fontwzms").text(cell.getRow().getData().WZMS);

                    
                }
            },

            { title: "建筑名称", field: "MC", width: 259 },
            { title: "类别", field: "LB", width: 80 },
            { title: "细类别", field: "XLB", width: 80 }
        ],
    });
    /*======================================信息查询模块结束======================================*/


    /*====================管线图形统计功能函数=============================*/
    var gxtxtj = function (a) {

        //统计可见图层
        var kjtc = [];

        for (var i = 0; i < gxLayerGroup.length; i++) {

            var layerName = gxLayerGroup[i].substring(9) + "Layer";
            if (eval(layerName).getVisible() == true) {
                kjtc.push(gxLayerGroup[i]);
            }
        };
        //由于管点图层受缩放等级影响是否可见，故勾选即可被框选

        if (document.getElementById("js_ss_point").checked)
            kjtc.push("pipeline:js_ss_point");
        if (document.getElementById("ps_ws_point").checked)
            kjtc.push("pipeline:ps_ws_point");
        if (document.getElementById("ps_ys_point").checked)
            kjtc.push("pipeline:ps_ys_point");
        if (document.getElementById("ps_aq_point").checked)
            kjtc.push("pipeline:ps_aq_point");
        if (document.getElementById("rq_tr_point").checked)
            kjtc.push("pipeline:rq_tr_point");
        if (document.getElementById("dl_gd_point").checked)
            kjtc.push("pipeline:dl_gd_point");
        if (document.getElementById("dl_ld_point").checked)
            kjtc.push("pipeline:dl_ld_point");
        if (document.getElementById("dx_tx_point").checked)
            kjtc.push("pipeline:dx_tx_point");
        if (document.getElementById("dx_ex_point").checked)
            kjtc.push("pipeline:dx_ex_point");
        if (document.getElementById("dx_dt_point").checked)
            kjtc.push("pipeline:dx_dt_point");
        if (document.getElementById("dx_yx_point").checked)
            kjtc.push("pipeline:dx_yx_point");
        if (document.getElementById("dx_lx_point").checked)
            kjtc.push("pipeline:dx_lx_point");
        if (document.getElementById("dx_jk_point").checked)
            kjtc.push("pipeline:dx_jk_point");
        if (document.getElementById("dx_jy_point").checked)
            kjtc.push("pipeline:dx_jy_point");
        if (document.getElementById("rl_rs_point").checked)
            kjtc.push("pipeline:rl_rs_point");
        if (document.getElementById("wz_wz_point").checked)
            kjtc.push("pipeline:wz_wz_point");


        var searchRequest3 = new ol.format.WFS().writeGetFeature({
            srsName: 'EPSG:2385',
            featureNS: 'http://www.qdkcy.org',//命名空间url
            featurePrefix: 'pipeline',//工作区名称
            featureTypes: kjtc,//仅查询可见图层
            //featureTypes: ['pipeline:dl_gdpoint', 'pipeline:dx_dlzbpoint', 'pipeline:dx_jkxhpoint', 'pipeline:dx_jypoint', 'pipeline:dx_txpoint', 'pipeline:dx_zgdxpoint', 'pipeline:dx_zgltpoint', 'pipeline:dx_zgydpoint', 'pipeline:gs_yyspoint', 'pipeline:ps_wspoint', 'pipeline:ps_yspoint', 'pipeline:rl_rspoint', 'pipeline:rq_trqpoint',
            //'pipeline:dl_gdline', 'pipeline:dx_dlzbline', 'pipeline:dx_jkxhline', 'pipeline:dx_jyline', 'pipeline:dx_txline', 'pipeline:dx_zgdxline', 'pipeline:dx_zgltline', 'pipeline:dx_zgydline', 'pipeline:gs_yysline', 'pipeline:ps_wsline', 'pipeline:ps_ysline', 'pipeline:rl_rsline', 'pipeline:rq_trqline'],//查询图层，可以同一个工作区下多个图层，逗号隔开
            outputFormat: 'application/json',
            filter: ol.format.filter.intersects('the_geom', a),//必须使用the_geom这个沙雕坐标名称
        });

        seriesData_gx = [];
        seriesData_gd = [];
        seriesData_gxds = [];
        legendData_gxd = [];
        legendData_gx = [];
        legendData_gd = [];
        onlyValue_gx = [];
        onlyValue_gxds = [];
        onlyValue_gd = [];

        searchBar = [];//对表格进行筛选
        document.getElementById("loadingMarker").style.display = 'block';
        fetch( "@ViewBag.mapURLs", {
            method: 'POST',
            body: new XMLSerializer().serializeToString(searchRequest3)
        }).then(function (response) {
            return response.json();
            }).then(function (json) {
                //console.log(json);
                document.getElementById("loadingMarker").style.display='none';
            var fs = new ol.format.GeoJSON().readFeatures(json);

            if (fs.length == 0) {
                swal(
                    '没有选中的元素！',
                    '再试一次',
                    'warning'
                );
            };



            var tableData_gdx = [];//管线管点统计表
            var tableData_gds = [];//新管点表
            var tableData_gxs = [];//新管线表

            var js_ss_pointNum = 0;
            var ps_ws_pointNum = 0;
            var ps_ys_pointNum = 0;
            var ps_aq_pointNum = 0;
            var rq_tr_pointNum = 0;
            var dl_gd_pointNum = 0;
            var dl_ld_pointNum = 0;
            var dx_tx_pointNum = 0;
            var dx_ex_pointNum = 0;
            var dx_dt_pointNum = 0;
            var dx_yx_pointNum = 0;
            var dx_lx_pointNum = 0;
            var dx_jk_pointNum = 0;
            var dx_jy_pointNum = 0;
            var rl_rs_pointNum = 0;
            var wz_wz_pointNum = 0;

            var js_ss_lineNum = 0;
            var ps_ws_lineNum = 0;
            var ps_ys_lineNum = 0;
            var ps_aq_lineNum = 0;
            var rq_tr_lineNum = 0;
            var dl_gd_lineNum = 0;
            var dl_ld_lineNum = 0;
            var dx_tx_lineNum = 0;
            var dx_ex_lineNum = 0;
            var dx_dt_lineNum = 0;
            var dx_yx_lineNum = 0;
            var dx_lx_lineNum = 0;
            var dx_jk_lineNum = 0;
            var dx_jy_lineNum = 0;
            var rl_rs_lineNum = 0;
            var wz_wz_lineNum = 0;

            var js_ss_lineLeng = 0;
            var ps_ws_lineLeng = 0;
            var ps_ys_lineLeng = 0;
            var ps_aq_lineLeng = 0;
            var rq_tr_lineLeng = 0;
            var dl_gd_lineLeng = 0;
            var dl_ld_lineLeng = 0;
            var dx_tx_lineLeng = 0;
            var dx_ex_lineLeng = 0;
            var dx_dt_lineLeng = 0;
            var dx_yx_lineLeng = 0;
            var dx_lx_lineLeng = 0;
            var dx_jk_lineLeng = 0;
            var dx_jy_lineLeng = 0;
            var rl_rs_lineLeng = 0;
            var wz_wz_lineLeng = 0;
            table_gx.clearFilter();
            table_gd.clearFilter();
            document.getElementById('filter-field-gxLayer').options.length = 0;
            document.getElementById('filter-field-gxLayer').options.add(new Option("管线类型", ""));
            for (var i = 0; i < fs.length; i++) {
                if (searchBar.indexOf(fs[i].id_.split('.')[0].substring(0, 5)) == -1) {
                    searchBar.push(fs[i].id_.split('.')[0].substring(0, 5));
                }
                //创建新的管线管点表格
                if (fs[i].id_.indexOf("line") != -1) {
                    var a = {
                        "起点点号": fs[i].get("起点点号"),
                        "终点点号": fs[i].get("终点点号"),
                        "起点埋深": fs[i].get("起点埋深"),
                        "终点埋深": fs[i].get("终点埋深"),
                        "起点高程": fs[i].get("起点高程"),
                        "终点高程": fs[i].get("终点高程"),
                        "材质": fs[i].get("材质"),
                        "埋设方式": fs[i].get("埋设方式"),
                        "管径": fs[i].get("管径"),
                        "权属单位": fs[i].get("权属单位"),
                        "工程编号": fs[i].get("工程编号"),
                        "工程类别": fs[i].get("工程类别"),
                        "套管材质": fs[i].get("套管材质"),
                        "要素代码": fs[i].get("要素代码"),
                        "条数": fs[i].get("条数"),
                        "压力值": fs[i].get("压力值"),
                        "总孔数": fs[i].get("总孔数"),
                        "已用孔数": fs[i].get("已用孔数"),
                        "测量时间": fs[i].get("测量时间"),
                        "使用状况": fs[i].get("使用状况"),
                        "流向": fs[i].get("流向"),
                        "所在位置": fs[i].get("所在位置"),
                        "管线范畴": fs[i].get("管线范畴"),
                        "入库时间": fs[i].get("入库时间"),
                        "更新时间": fs[i].get("更新时间"),
                        "是否利用": fs[i].get("是否利用"),
                        "更新状态": fs[i].get("更新状态"),
                        "唯一标识": fs[i].get("唯一标识"),
                        "备注": fs[i].get("备注"),
                        "管段编号": fs[i].get("管段编号"),
                        "线型": fs[i].get("线型"),
                        "建设日期": fs[i].get("建设日期"),
                        "探测单位": fs[i].get("探测单位"),
                        "是否长输": fs[i].get("是否长输"),
                        "管线长度": fs[i].get("SHAPE_Leng"),
                        "管线类型": fs[i].id_.split('.')[0].substring(0, fs[i].id_.split('.')[0].length - 5),
                    };
                    tableData_gxs.push(a);
                }
                if (fs[i].id_.indexOf("point") != -1) {
                    var b = {
                        "管点编号": fs[i].get("管点编号"),
                        "图上点号": fs[i].get("图上点号"),
                        "测量点号": fs[i].get("测量点号"),
                        "X坐标": fs[i].get("X坐标"),
                        "Y坐标": fs[i].get("Y坐标"),
                        "地面高程": fs[i].get("地面高程"),
                        "特征": fs[i].get("特征"),
                        "附属物": fs[i].get("附属物"),
                        "井盖类型": fs[i].get("井盖类型"),
                        "井盖规格": fs[i].get("井盖规格"),
                        "井盖材质": fs[i].get("井盖材质"),
                        "工程编号": fs[i].get("工程编号"),
                        "工程类别": fs[i].get("工程类别"),
                        "要素代码": fs[i].get("要素代码"),
                        "图幅号": fs[i].get("图幅号"),
                        "测量时间": fs[i].get("测量时间"),
                        "权属单位": fs[i].get("权属单位"),
                        "数据来源": fs[i].get("数据来源"),
                        "获取时机": fs[i].get("获取时机"),
                        "偏心井点号": fs[i].get("偏心井点号"),
                        "偏距": fs[i].get("偏距"),
                        "旋转角度": fs[i].get("旋转角度"),
                        "所在位置": fs[i].get("所在位置"),
                        "管点范畴": fs[i].get("管点范畴"),
                        "入库时间": fs[i].get("入库时间"),
                        "更新时间": fs[i].get("更新时间"),
                        "是否利用": fs[i].get("是否利用"),
                        "更新状态": fs[i].get("更新状态"),
                        "唯一标识": fs[i].get("唯一标识"),
                        "备注": fs[i].get("备注"),
                        "物探点号": fs[i].get("物探点号"),
                        "井底深": fs[i].get("井底深"),
                        "探测单位": fs[i].get("探测单位"),
                        "建设日期": fs[i].get("建设日期"),
                        "是否长输": fs[i].get("是否长输"),
                        "管点类型": fs[i].id_.split('.')[0].substring(0, fs[i].id_.split('.')[0].length - 6),
                    };
                    tableData_gds.push(b);

                }
                //统计管点管线数据

                switch (fs[i].id_.split('.')[0]) {
                    case "js_ss_point":
                        js_ss_pointNum++;
                        break;
                    case "ps_ws_point":
                        ps_ws_pointNum++;
                        break;
                    case "ps_ys_point":
                        ps_ys_pointNum++;
                        break;
                    case "ps_aq_point":
                        ps_aq_pointNum++;
                        break;
                    case "rq_tr_point":
                        rq_tr_pointNum++;
                        break;
                    case "dl_gd_point":
                        dl_gd_pointNum++;
                        break;
                    case "dl_ld_point":
                        dl_ld_pointNum++;
                        break;
                    case "dx_tx_point":
                        dx_tx_pointNum++;
                        break;
                    case "dx_ex_point":
                        dx_ex_pointNum++;
                        break;
                    case "dx_dt_point":
                        dx_dt_pointNum++;
                        break;
                    case "dx_yx_point":
                        dx_yx_pointNum++;
                        break;
                    case "dx_lx_point":
                        dx_lx_pointNum++;
                        break;
                    case "dx_jk_point":
                        dx_jk_pointNum++;
                        break;
                    case "dx_jy_point":
                        dx_jy_pointNum++;
                        break;
                    case "rl_rs_point":
                        rl_rs_pointNum++;
                        break;
                    case "wz_wz_point":
                        wz_wz_pointNum++;
                        break;
                    case "js_ss_line":
                        js_ss_lineNum++;
                        js_ss_lineLeng = js_ss_lineLeng + fs[i].get("SHAPE_Leng");
                        break;
                    case "ps_ws_line":
                        ps_ws_lineNum++;
                        ps_ws_lineLeng = ps_ws_lineLeng + fs[i].get("SHAPE_Leng");
                        break;
                    case "ps_ys_line":
                        ps_ys_lineNum++;
                        ps_ys_lineLeng = ps_ys_lineLeng + fs[i].get("SHAPE_Leng");
                        break;
                    case "ps_aq_line":
                        ps_aq_lineNum++;
                        ps_aq_lineLeng = ps_aq_lineLeng + fs[i].get("SHAPE_Leng");
                        break;
                    case "rq_tr_line":
                        rq_tr_lineNum++;
                        rq_tr_lineLeng = rq_tr_lineLeng + fs[i].get("SHAPE_Leng");
                        break;
                    case "dl_gd_line":
                        dl_gd_lineNum++;
                        dl_gd_lineLeng = dl_gd_lineLeng + fs[i].get("SHAPE_Leng");
                        break;
                    case "dl_ld_line":
                        dl_ld_lineNum++;
                        dl_ld_lineLeng = dl_ld_lineLeng + fs[i].get("SHAPE_Leng");
                        break;
                    case "dx_tx_line":
                        dx_tx_lineNum++;
                        dx_tx_lineLeng = dx_tx_lineLeng + fs[i].get("SHAPE_Leng");
                        break;
                    case "dx_ex_line":
                        dx_ex_lineNum++;
                        dx_ex_lineLeng = dx_ex_lineLeng + fs[i].get("SHAPE_Leng");
                        break;
                    case "dx_dt_line":
                        dx_dt_lineNum++;
                        dx_dt_lineLeng = dx_dt_lineLeng + fs[i].get("Shape_Leng");//注意长度字段名不同
                        break;
                    case "dx_yx_line":
                        dx_yx_lineNum++;
                        dx_yx_lineLeng = dx_yx_lineLeng + fs[i].get("Shape_Leng");//注意长度字段名不同
                        break;
                    case "dx_lx_line":
                        dx_lx_lineNum++;
                        dx_lx_lineLeng = dx_lx_lineLeng + fs[i].get("Shape_Leng");//注意长度字段名不同
                        break;
                    case "dx_jk_line":
                        dx_jk_lineNum++;
                        dx_jk_lineLeng = dx_jk_lineLeng + fs[i].get("SHAPE_Leng");
                        break;
                    case "dx_jy_line":
                        dx_jy_lineNum++;
                        dx_jy_lineLeng = dx_jy_lineLeng + fs[i].get("SHAPE_Leng");
                        break;
                    case "rl_rs_line":
                        rl_rs_lineNum++;
                        rl_rs_lineLeng = rl_rs_lineLeng + fs[i].get("SHAPE_Leng");
                        break;
                }
            }
            for (var i = 0; i < searchBar.length; i++) {
                switch (searchBar[i]) {
                    case "js_ss":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("饮用水(上水)", "js_ss"));
                        break;
                    case "ps_ws":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("污水", "ps_ws"));
                        break;
                    case "ps_ys":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("雨水", "ps_ys"));
                        break;
                    case "ps_aq":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("暗渠", "ps_aq"));
                        break;
                    case "rq_tr":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("天然气", "rq_tr"));
                        break;
                    case "dl_gd":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("供电", "dl_gd"));
                        break;
                    case "dl_ld":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("路灯", "dl_ld"));
                        break;
                    case "dx_tx":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("通讯", "dx_tx"));
                        break;
                    case "dx_ex":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("电力载波", "dx_ex"));
                        break;
                    case "dx_dt":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("中国电信", "dx_dt"));
                        break;
                    case "dx_yx":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("中国移动", "dx_yx"));
                        break;
                    case "dx_lx":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("中国联通", "dx_lx"));
                        break;
                    case "dx_jk":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("监控", "dx_jk"));
                        break;
                    case "dx_jy":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("军用", "dx_jy"));
                        break;
                    case "rl_rs":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("热力", "rl_rs"));
                        break;
                    case "wz_wz":
                        document.getElementById('filter-field-gxLayer').options.add(new Option("不明", "wz_wz"));
                        break;
                }

            };



            //框选后重置管线管点表格
            table_gd.setData(tableData_gds);
            table_gx.setData(tableData_gxs);

                var gxdxAdd = 0;
                var gxzcdAdd = 0;
                var gdzsAdd = 0;

            for (var i = 0; i < gdLayerGroup.length; i++) {

                var layerName = gdLayerGroup[i].substring(9);
                var pointLayerNum = gdLayerGroup[i].substring(9) + "Num";
                var pointLayerName = gdLayerGroup[i].substring(9).replace("point", "");

                //不明管线只有管点，单独处理
                if (pointLayerName == 'wz_wz_' && eval(pointLayerNum) != 0) {
                    lineLayerName = "不明";
                    var b = {
                        "类别": lineLayerName,
                        "管点总数": eval(pointLayerNum),
                        "管线段数":0,
                        "管线总长度": 0,//保留两位小数
                    };
                    tableData_gdx.push(b);
                    legendData_gd.push(lineLayerName);


                    seriesData_gd.push({ name: lineLayerName, value: eval(pointLayerNum) == 0 ? null : eval(pointLayerNum) });//如果统计数值为0时将其值设置为null提高饼图显示效果
                    seriesData_gx.push({ name: lineLayerName, value: null});
                    seriesData_gxds.push({ name: lineLayerName, value:null});

                    onlyValue_gd.push(eval(pointLayerNum));
                    //onlyValue_gx.push(0);
                    //onlyValue_gxds.push(0);
                };

                
                for (var j = 0; j < gxLayerGroup.length; j++) {
                    var lineLayerNum = gxLayerGroup[j].substring(9) + "Num";
                    var lineLayerName = gxLayerGroup[j].substring(9).replace("line", "");
                    var lineleng = gxLayerGroup[j].substring(9) + "Leng";

                    if (lineLayerName == pointLayerName) {
                        if (eval(pointLayerNum) != 0 || eval(lineLayerNum) != 0) {
                            switch (lineLayerName) {
                                case "js_ss_":
                                    lineLayerName = "饮用水(上水)";
                                    break;
                                case "ps_ws_":
                                    lineLayerName = "污水";
                                    break;
                                case "ps_ys_":
                                    lineLayerName = "雨水";
                                    break;
                                case "ps_aq_":
                                    lineLayerName = "暗渠";
                                    break;
                                case "rq_tr_":
                                    lineLayerName = "天然气";
                                    break;
                                case "dl_gd_":
                                    lineLayerName = "供电";
                                    break;
                                case "dl_ld_":
                                    lineLayerName = "路灯";
                                    break;
                                case "dx_tx_":
                                    lineLayerName = "通讯";
                                    break;
                                case "dx_ex_":
                                    lineLayerName = "电力载波";
                                    break;
                                case "dx_dt_":
                                    lineLayerName = "中国电信";
                                    break;
                                case "dx_yx_":
                                    lineLayerName = "中国移动";
                                    break;
                                case "dx_lx_":
                                    lineLayerName = "中国联通";
                                    break;
                                case "dx_jk_":
                                    lineLayerName = "监控";
                                    break;
                                case "dx_jy_":
                                    lineLayerName = "军用";
                                    break;
                                case "rl_rs_":
                                    lineLayerName = "热水";
                                    break;
                            };
                            var b = {
                                "类别": lineLayerName,
                                "管点总数": eval(pointLayerNum),
                                "管线段数": eval(lineLayerNum),
                                "管线总长度": eval(lineleng).toFixed(2),//保留两位小数
                            };

                            tableData_gdx.push(b);
                            gxdxAdd += eval(pointLayerNum);
                            gxzcdAdd += eval(lineLayerNum);
                            gdzsAdd = Number(eval(lineleng).toFixed(2)) + Number(gdzsAdd) ;


                            if (eval(pointLayerNum) == 0) {
                                legendData_gx.push(lineLayerName);
                            } else if (eval(lineLayerNum) == 0) {
                                legendData_gd.push(lineLayerName);
                            } else {
                                legendData_gx.push(lineLayerName);
                                legendData_gd.push(lineLayerName);
                            }

                            //legendData_gxd=["饮用水(上水)","污水","雨水", "暗渠","天然气","供电", "路灯","通讯","电力载波","中国电信","中国移动","中国联通","监控","军用","热水"]
                            //框选后重置管线管点数据
                            seriesData_gd.push({ name: lineLayerName, value: eval(pointLayerNum) == 0 ? null : eval(pointLayerNum) });//如果统计数值为0时将其值设置为null提高饼图显示效果
                            seriesData_gx.push({ name: lineLayerName, value: eval(lineleng).toFixed(2) == 0 ? null : eval(lineleng).toFixed(2) });
                            seriesData_gxds.push({ name: lineLayerName, value: eval(lineLayerNum) == 0 ? null : eval(lineLayerNum) });

                            onlyValue_gd.push(eval(pointLayerNum));
                            onlyValue_gx.push(eval(lineleng).toFixed(2));
                            onlyValue_gxds.push(eval(lineLayerNum));
                        }


                    }
                }

            }
                var total = {
                    "类别": "总计",
                    "管点总数": gxdxAdd,
                    "管线段数": gxzcdAdd,
                    "管线总长度": gdzsAdd.toFixed(2),//保留两位小数
                };
                tableData_gdx.push(total);

            table_gdxSearch.setData(tableData_gdx);

            option11 = {//饼图
                title: {
                    text: '管点框选统计',
                    subtext: '框选结果-饼状图',
                    x: 'center'
                },
                tooltip: {
                    trigger: 'item',
                    formatter: "{a} <br />{b} : {c} ({d}%)"
                },
                legend: {
                    type: 'scroll',
                    orient: 'vertical',
                    right: 10,
                    top: 120,
                    bottom: 20,
                    data: legendData_gd,
                    selected: selected
                },
                series: [
                    {
                        name: '管点个数',
                        type: 'pie',
                        radius: '55%',
                        center: ['40%', '50%'],
                        data: seriesData_gd,
                        itemStyle: {
                            emphasis: {
                                shadowBlur: 10,
                                shadowOffsetX: 0,
                                shadowColor: 'rgba(0, 0, 0, 0.5)'
                            }
                        }
                    }
                ]
            };

            option22 = {//柱状图
                title: {
                    text: '管点框选统计',
                    subtext: '框选结果-柱状图',
                    x: 'center'
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {            // 坐标轴指示器，坐标轴触发有效
                        type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
                    }
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis: [
                    {
                        type: 'category',
                        data: legendData_gd,
                        axisTick: {
                            alignWithLabel: true
                        },
                        axisLabel: {
                            interval: 0,
                            rotate: 40
                        }
                    }
                ],
                yAxis: [
                    {
                        type: 'value',

                    }
                ],
                series: [
                    {
                        name: '管点个数',
                        type: 'bar',
                        barWidth: '60%',
                        itemStyle: {
                            normal: {
                                color: function (params) {
                                    var colorList = ['#C33531', '#EFE42A', '#64BD3D', '#EE9201', '#29AAE3', '#B74AE5', '#0AAF9F', '#E89589', '#16A085', '#4A235A', '#C39BD3 ', '#F9E79F', '#BA4A00', '#ECF0F1', '#616A6B', '#EAF2F8', '#4A235A', '#3498DB'];
                                    return colorList[params.dataIndex]
                                }
                            },
                        },
                        data: onlyValue_gd
                    }
                ]
            };

            option33 = {//折线图
                color: ['#3398DB'],
                title: {
                    text: '管点框选统计',
                    subtext: '框选结果-折线图',
                    x: 'center'
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {            // 坐标轴指示器，坐标轴触发有效
                        type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
                    }
                },
                xAxis: {
                    type: 'category',
                    data: legendData_gd,
                    axisLabel: {
                        interval: 0,
                        rotate: 40
                    }
                },
                yAxis: {
                    type: 'value',
                    minInterval: 1,
                    name: '数量(个)',
                },
                series: [{
                    data: onlyValue_gd,
                    type: 'line'
                }]
            };

            option11x = {//饼图
                title: {
                    text: '管线框选统计',
                    subtext: '框选结果-饼状图',
                    x: 'center'
                },
                tooltip: {
                    trigger: 'item',
                    formatter: "{a} <br />{b} : {c} ({d}%)"
                },
                legend: {
                    type: 'scroll',
                    orient: 'vertical',
                    right: 10,
                    top: 150,
                    bottom: 20,
                    data: legendData_gx,
                    selected: selected
                },
                series: [
                    {
                        name: '长度(m)',
                        type: 'pie',
                        radius: '40%',
                        center: ['40%', '28%'],
                        data: seriesData_gx,
                        itemStyle: {
                            emphasis: {
                                shadowBlur: 10,
                                shadowOffsetX: 0,
                                shadowColor: 'rgba(0, 0, 0, 0.5)'
                            }
                        }
                    },
                    {
                        name: '段数(个)',
                        type: 'pie',
                        radius: '40%',
                        center: ['40%', '70%'],
                        data: seriesData_gxds,
                        itemStyle: {
                            emphasis: {
                                shadowBlur: 10,
                                shadowOffsetX: 0,
                                shadowColor: 'rgba(0, 0, 0, 0.5)'
                            }
                        }
                    }
                ]
            };

            option22x = {//柱状图
                title: {
                    text: '管线框选统计',
                    subtext: '框选结果-柱状图',
                    x: 'center'
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {            // 坐标轴指示器，坐标轴触发有效
                        type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
                    }
                },
                grid: {
                    left: '1%',
                    right: '2%',
                    bottom: '13%',
                    containLabel: true
                },
                xAxis: [
                    {
                        type: 'category',
                        data: legendData_gx,
                        axisTick: {
                            alignWithLabel: true
                        },
                        axisLabel: {
                            interval: 0,
                            rotate: 40
                        }
                    },
                ],
                yAxis: [
                    {
                        type: 'value',
                        name: '长度(m)',
                    },
                    {
                        type: 'value',
                        name: '段数(个)',
                    },
                ],
                series: [
                    {
                        name: '长度(m)',
                        type: 'bar',
                        itemStyle: {
                            normal: {
                                color: function (params) {
                                    var colorList = ['#C33531', '#EFE42A', '#64BD3D', '#EE9201', '#29AAE3', '#B74AE5', '#0AAF9F', '#E89589', '#16A085', '#4A235A', '#C39BD3 ', '#F9E79F', '#BA4A00', '#ECF0F1', '#616A6B', '#EAF2F8', '#4A235A', '#3498DB'];
                                    return colorList[params.dataIndex]
                                }
                            },
                        },
                        data: onlyValue_gx
                    },
                    {
                        name: '段数(个)',
                        type: 'bar',
                        itemStyle: {
                            normal: {
                                color: function (params) {
                                    var colorList = ['#C33531', '#EFE42A', '#64BD3D', '#EE9201', '#29AAE3', '#B74AE5', '#0AAF9F', '#E89589', '#16A085', '#4A235A', '#C39BD3 ', '#F9E79F', '#BA4A00', '#ECF0F1', '#616A6B', '#EAF2F8', '#4A235A', '#3498DB'];
                                    return colorList[params.dataIndex]
                                }
                            },
                        },
                        data: onlyValue_gxds,
                        yAxisIndex: 1,
                    }
                ]
            };

            option33x = {//折线图
                color: ['#3398DB'],
                title: {
                    text: '管线框选统计',
                    subtext: '框选结果-折线图',
                    x: 'center'
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {            // 坐标轴指示器，坐标轴触发有效
                        type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
                    }
                },
                xAxis: {
                    type: 'category',
                    data: legendData_gx,
                    axisLabel: {
                        interval: 0,
                        rotate: 40
                    }
                },
                yAxis: [
                    {
                        type: 'value',
                        name: '长度(m)',
                    },
                    {
                        type: 'value',
                        name: '段数(个)',
                    },
                ],
                series: [
                    {
                        name: '长度(m)',
                        data: onlyValue_gx,
                        type: 'line'
                    },
                    {
                        name: '段数(个)',
                        data: onlyValue_gxds,
                        type: 'line',
                        yAxisIndex: 1,
                    },
                ]
            };

            gxChart.setOption(eval($('#gxdchart-c').val() + 'x'));
            gdChart.setOption(eval($('#gxdchart-c').val()));

        });

    };

    /*=====================管线图形统计功能函数结束=======================*/




    /*======================================基建模块======================================*/
    /*------------------------基建面数据-----------—-----------------*/
    var jjProjects =@Html.Raw(@ViewBag.jjProjects);
    var tableData_jj = [];

    for (var i = 0; i < jjProjects.length; i++) {
        /*var geom = JSON.parse(JSON.parse(jjProjects[i].XMZB));
        var polygon = JSON.stringify(geom.coordinates);
        jjProjects[i].XMZB = polygon.toString();*/
        tableData_jj.push(jjProjects[i]);
    };
    for (var i = 0; i < tableData_jj.length; i++) {
        var geom = tableData_jj[i].XMZBC;
        var geom_Type = tableData_jj[i].XMZB;
        var name = tableData_jj[i].MC;

        var geom_Point = tableData_jj[i].XMZBZX;

        //根据不同绘制图形类型 加载图形2
        switch (JSON.parse(JSON.parse(geom_Type)).type) {
            case "Point":
                var feature1 = new ol.Feature({
                    geometry: new ol.geom.Point(JSON.parse(geom)),
                    id: i + 1,
                    name: name,
                    type: '基建',
                    label: 'Point',
                });
                feature1.setStyle(new ol.style.Style({
                    /*fill: new ol.style.Fill({
                        color: 'rgba(255, 255, 255, 0.4)'
                    }),
                    stroke: new ol.style.Stroke({
                        color: '#FF4500',
                        width: 2
                    }),
                    image: new ol.style.Circle({
                        radius: 10,
                        fill: new ol.style.Fill({
                            color: '#FF4500'
                        })
                    })*/
                    image: new ol.style.Icon(({
                        anchor: [0.5, 1],
                        scale: 0.3,
                        anchorXUnits: 'fraction',
                        anchorYUnits: 'pixels',
                        src: '/images/icon/default_layers_roadclosures_icon_normal@2x.png'

                    }))
                }));
                jjvectorSource.addFeature(feature1);
                break;
            case "LineString":
                var feature1 = new ol.Feature({
                    geometry: new ol.geom.LineString(JSON.parse(geom)),
                    id: i + 1,
                    name: name,
                    type: '基建',
                    label: 'LineString',
                });
                feature1.setStyle(new ol.style.Style({
                    fill: new ol.style.Fill({
                        color: 'rgba(255, 255, 255, 0.4)'
                    }),
                    stroke: new ol.style.Stroke({
                        color: '#FF4500',
                        width: 2
                    }),
                    image: new ol.style.Circle({
                        radius: 7,
                        fill: new ol.style.Fill({
                            color: '#ffcc33'
                        })
                    })
                }));
                jjvectorSource.addFeature(feature1);

                var feature_icon = new ol.Feature({
                    geometry: new ol.geom.Point(JSON.parse('['+geom_Point+']')),
                    name: name,
                    type: '基建',
                    label: 'LineString',
                    icon:'true',
                });
                feature_icon.setStyle(new ol.style.Style({
                    image: new ol.style.Icon(({
                        anchor: [0.5, 1],
                        offset:[2,25],
                        scale: 0.3,
                        anchorXUnits: 'fraction',
                        anchorYUnits: 'pixels',
                        src: '/images/icon/default_layers_roadclosures_icon_normal@2x.png',
                    }))
                }));
                jjvectorSource.addFeature(feature_icon);
                break;
            case "Polygon":
                var feature1 = new ol.Feature({
                    geometry: new ol.geom.Polygon(JSON.parse(geom)),
                    id: i + 1,
                    name: name,
                    type: '基建',
                    label: 'Polygon',
                });

                feature1.setStyle(new ol.style.Style({
                    fill: new ol.style.Fill({
                        color: 'rgba(255, 255, 255, 0.4)'
                    }),
                    stroke: new ol.style.Stroke({
                        color: '#FF4500',
                        width: 2
                    }),
                    image: new ol.style.Circle({
                        radius: 7,
                        fill: new ol.style.Fill({
                            color: '#ffcc33'
                        })
                    })
                }));
                jjvectorSource.addFeature(feature1);

                var feature_icon = new ol.Feature({
                    geometry: new ol.geom.Point(JSON.parse('[' + geom_Point + ']')),
                    name: name,
                    type: '基建',
                    label: 'Polygon',
                    icon:'true',
                });
                feature_icon.setStyle(new ol.style.Style({
                    image: new ol.style.Icon(({
                        anchor: [0.5, 1],
                        offset: [2, 19],
                        scale: 0.3,
                        anchorXUnits: 'fraction',
                        anchorYUnits: 'pixels',
                        src: '/images/icon/default_layers_roadclosures_icon_normal@2x.png',
                    }))
                }));
                jjvectorSource.addFeature(feature_icon);
                break;
        };

    };

    /*--------------------------基建查询------------------------------*/
    //初始化基建项目过滤器
    function updateFilter2() {
        var filter = $("#filter-field2").val();
        //$("#filter-type2").prop("disabled", false);
        $("#filter-value2").prop("disabled", false);
        //table_jj.setFilter(filter, $("#filter-type2").val(), $("#filter-value2").val());
        //判断用户输入的是否是一个范围
        if ($("#filter-value2").val().indexOf("-") != -1) {
            table_jj.setFilter([
                { field: filter, type: '>=', value: $("#filter-value2").val().split("-")[0] },
                { field: filter, type: '<=', value: $("#filter-value2").val().split("-")[1] }
            ]);

        } else {
            table_jj.setFilter(filter, 'like', $("#filter-value2").val());
        }


        //更新基建数据统计结果
		//需要在tabulator.js原码中屏蔽 this.botElement.appendChild(row.getElement()); 才可以不显示默认统计结果
        var jj_tj_results = table_jj.getCalcResults();
        var syzjResult = jj_tj_results.bottom.SYZJ;
        var smgsResult = jj_tj_results.bottom.MC;
        document.getElementById("jjcx_tj_xmgs").value = smgsResult;
        document.getElementById("jjcx_tj_syzj").value = syzjResult;
    };
    //$("#filter-field2, #filter-type2").change(updateFilter2);
    $("#filter-field2").change(updateFilter2); 32
    $("#filter-value2").keyup(updateFilter2);
    $("#filter-clear2").click(function () {
        $("#filter-field2").val("1");
        //$("#filter-type2").val("1");
        $("#filter-value2").val("");
        table_jj.clearFilter();

        var jj_tj_results = table_jj.getCalcResults();
        var syzjResult = jj_tj_results.bottom.SYZJ;4
        var smgsResult = jj_tj_results.bottom.MC;
        document.getElementById("jjcx_tj_xmgs").value = smgsResult;
        document.getElementById("jjcx_tj_syzj").value = syzjResult;
    });

    //初始化智能搜索
    /*function updateJJSearch() {

        table_jj.setFilter([
            [{ field: 'MC', type: 'like', value: $("#jj_search").val() },
                { field: 'XMDD', type: 'like', value: $("#jj_search").val() },
                { field: 'SGDW', type: 'like', value: $("#jj_search").val() },
                { field: 'FZR', type: 'like', value: $("#jj_search").val() },
                { field: 'JSZT', type: 'like', value: $("#jj_search").val() },
                { field: 'JSXZ', type: 'like', value: $("#jj_search").val() },
                { field: 'XMMS', type: 'like', value: $("#jj_search").val() },
            ]
        ]);

        //var a = $("#table_jj").find("[class='tabulator-tableHolder']");
        //$("#table_jj").find("[class='tabulator-tableHolder']").text().replace('1', 'da');

     };
    $("#jj_search").keyup(updateJJSearch);*/

    //创建表格编辑器
    var dateEditor = function (cell, onRendered, success, cancel) {
        var cellValue = moment(cell.getValue(), "YYYY/MM/DD").format("YYYY/MM/DD"),
            input = document.createElement("input");
        input.setAttribute("type", "date");
        input.style.padding = "4px";
        input.style.width = "100%";
        input.style.boxSizing = "border-box";
        input.value = cellValue;

        onRendered(function () {
            input.focus();
            input.style.height = "100%";
        });

        function onChange() {
            if (input.value != cellValue) {
                success(moment(input.value, "YYYY/MM/DD").format("YYYY/MM/DD"));
            } else {
                cancel();
            }
        }

        input.addEventListener("change", onChange);
        input.addEventListener("blur", onChange);

        input.addEventListener("keydown", function (e) {
            if (e.keyCode == 13) {
                onChange();
            }
            if (e.keyCode == 27) {
                cancel();
            }
        });
        return input;
    };



    //创建基建查询表格
    var table_jj = new Tabulator("#table_jj", {
        data: tableData_jj,
        height: "411px",
        layout: "fitColumns",
        columnCalcs:"table",
        cellEdited: function (cell) {
            var data = {
                ID: cell.getRow().getData().ID,
                MC: cell.getRow().getData().MC,
                XMDD: cell.getRow().getData().XMDD,
                XMZB: cell.getRow().getData().XMZB,
                SGDW: cell.getRow().getData().SGDW,
                FZR: cell.getRow().getData().FZR,
                LXDH: cell.getRow().getData().LXDH,
                JSZT: cell.getRow().getData().JSZT,
                JSXZ: cell.getRow().getData().JSXZ,
                KGRQ: cell.getRow().getData().KGRQ,
                WGRQ: cell.getRow().getData().WGRQ,
                YSZJ: cell.getRow().getData().YSZJ,
                SYZJ: cell.getRow().getData().SYZJ,
                XMMS: cell.getRow().getData().XMMS,
                BZ: cell.getRow().getData().BZ,
            };

            $.ajax({
                type: "POST",
                url: "JJUpdate",
                data: { datas: JSON.stringify(data) },
                //dataType: 'text',
                //contentType: "application/json",
                success: function (data) {
                    swal(
                        '数据更新成功！',
                        '该项目数据已被成功更新',
                        'success'
                    );
                }
            });

        },
        rowDblClick: function (e, row) {
            $('#myModal_jj').modal();
            $("#myModalLabel_jj").text(row.getData().MC);
            $("#font_jj_id").val(row.getData().ID);
            $("#font_jj_xmdd").val(row.getData().XMDD);
            $("#font_jj_sgdw").val(row.getData().SGDW);
            $("#font_jj_fzr").val(row.getData().FZR);
            $("#font_jj_lxdh").val(row.getData().LXDH);
            $("#font_jj_jszt").val(row.getData().JSZT);
            $("#font_jj_jsxz").val(row.getData().JSXZ);
            $("#font_jj_kgrq").val(row.getData().KGRQ);
            $("#font_jj_wgrq").val(row.getData().WGRQ);
            $("#font_jj_yszj").val(row.getData().YSZJ);
            $("#font_jj_syzj").val(row.getData().SYZJ);
            $("#font_jj_xmms").val(row.getData().XMMS);
            $("#font_jj_bz").val(row.getData().BZ);

            //重置修改面板
            $("#jj_edit").prop("class", "btn btn-primary");
            document.getElementById("jj_edit").innerHTML = "修改";
            $("#font_jj_xmdd").prop("disabled", true);
            $("#font_jj_sgdw").prop("disabled", true);
            $("#font_jj_fzr").prop("disabled", true);
            $("#font_jj_lxdh").prop("disabled", true);
            $("#font_jj_jszt").prop("disabled", true);
            $("#font_jj_jsxz").prop("disabled", true);
            $("#font_jj_kgrq").prop("disabled", true);
            $("#font_jj_wgrq").prop("disabled", true);
            $("#font_jj_yszj").prop("disabled", true);
            $("#font_jj_syzj").prop("disabled", true);
            $("#font_jj_xmms").prop("disabled", true);
            $("#font_jj_bz").prop("disabled", true);
         },
        columns: [
            //{ formatter: "rownum", align: "center", frozen: true, width: 40 },
            {
                formatter: locationIcon, width: 20, align: "center", frozen: false, cellClick: function (e, cell) {
                    var feature = jjLayer.getSource().getFeatures();
                    var geom;
                    for (i = 0; i < feature.length; i++) {
                        if (cell.getRow().getData().MC == feature[i].get('name')) {
                            var geom_Type = cell.getRow().getData().XMZB;
                            switch (JSON.parse(JSON.parse(geom_Type)).type) {
                                case "Point":
                                    geom = feature[i].getGeometry().getCoordinates();
                                    break;
                                case "LineString":
                                    geom = feature[i].getGeometry().getCoordinateAt(0.5);
                                    break;
                                case "Polygon":
                                    geom = feature[i].getGeometry().getInteriorPoint().getCoordinates();
                                    break;
                            };
                            break;
                        }
                    };
                    view.animate({
                        center: (geom),
                        duration: 500,
                    });
                    view.animate({
                        zoom: 10,
                        duration: 500,
                    });
                    element.style.display = 'block';
                    popup.setPosition(geom);
                    pass = cell.getRow().getData().MC;
                    //var h5 = document.getElementsByTagName("h5")[0];
                    //h5.innerHTML = cell.getRow().getData().MC;
                    content.innerHTML = '<h5>' + cell.getRow().getData().MC + '</h5><hr>' + '<a onclick="show()">详细信息>></a>';
                }
            },
            {
                formatter: deleteIcon, width: 20, align: "center", frozen: false, cellClick: function (e, cell) {
                    swal({
                        title: '确定删除该项目吗?',
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: '是的，删除!'
                    }).then((result) => {
                        if (result.value) {
                            $.ajax({
                                type: "POST",
                                url: "JJDelete",
                                data: { id: cell.getRow().getData().ID },
                                success: function (data) {
                                    jjLayer.getSource().clear();
                                    data = JSON.parse(data);
                                    tableData_jj = [];

                                    for (var i = 0; i < data.length; i++) {
                                        /*var geom = JSON.parse(JSON.parse(data[i].XMZB));
                                        var polygon = JSON.stringify(geom.coordinates);
                                        data[i].XMZB = polygon.toString();*/
                                        tableData_jj.push(data[i]);
                                    };

                                    
                                    for (var i = 0; i < tableData_jj.length; i++) {
                                        var geom = tableData_jj[i].XMZBC;
                                        var geom_Type = tableData_jj[i].XMZB;
                                        var name = tableData_jj[i].MC;
                                        var geom_Point = tableData_jj[i].XMZBZX;

                                        switch (JSON.parse(JSON.parse(geom_Type)).type) {
                                            case "Point":
                                                var feature1 = new ol.Feature({
                                                    geometry: new ol.geom.Point(JSON.parse(geom)),
                                                    id: i + 1,
                                                    name: name,
                                                    type: '基建',
                                                    label: 'Point',
                                                });
                                                feature1.setStyle(new ol.style.Style({
                                                    /*fill: new ol.style.Fill({
                                                        color: '#ffcc33'
                                                    }),
                                                    stroke: new ol.style.Stroke({
                                                        color: '#FF4500',
                                                        width: 2
                                                    }),
                                                    image: new ol.style.Circle({
                                                        radius: 7,
                                                        fill: new ol.style.Fill({
                                                            color: '#ffcc33'
                                                        })
                                                    })*/
                                                    image: new ol.style.Icon(({
                                                        anchor: [0.5, 1],
                                                        scale: 0.3,
                                                        anchorXUnits: 'fraction',
                                                        anchorYUnits: 'pixels',
                                                        src: '/images/icon/default_layers_roadclosures_icon_normal@2x.png'
                                                    }))
                                                }));
                                                jjvectorSource.addFeature(feature1);
                                                break;
                                            case "LineString":
                                                var feature1 = new ol.Feature({
                                                    geometry: new ol.geom.LineString(JSON.parse(geom)),
                                                    id: i + 1,
                                                    name: name,
                                                    type: '基建',
                                                    label: 'LineString',
                                                });
                                                feature1.setStyle(new ol.style.Style({
                                                    fill: new ol.style.Fill({
                                                        color: 'rgba(255, 255, 255, 0.4)'
                                                    }),
                                                    stroke: new ol.style.Stroke({
                                                        color: '#FF4500',
                                                        width: 2
                                                    }),
                                                    image: new ol.style.Circle({
                                                        radius: 7,
                                                        fill: new ol.style.Fill({
                                                            color: '#ffcc33'
                                                        })
                                                    })
                                                }));
                                                jjvectorSource.addFeature(feature1);

                                                var feature_icon = new ol.Feature({
                                                    geometry: new ol.geom.Point(JSON.parse('[' + geom_Point + ']')),
                                                    name: name,
                                                    type: '基建',
                                                    label: 'LineString',
                                                    icon: 'true',
                                                });
                                                feature_icon.setStyle(new ol.style.Style({
                                                    image: new ol.style.Icon(({
                                                        anchor: [0.5, 1],
                                                        offset: [2, 25],
                                                        scale: 0.3,
                                                        anchorXUnits: 'fraction',
                                                        anchorYUnits: 'pixels',
                                                        src: '/images/icon/default_layers_roadclosures_icon_normal@2x.png',
                                                    }))
                                                }));
                                                jjvectorSource.addFeature(feature_icon);
                                                break;
                                            case "Polygon":
                                                var feature1 = new ol.Feature({
                                                    geometry: new ol.geom.Polygon(JSON.parse(geom)),
                                                    id: i + 1,
                                                    name: name,
                                                    type: '基建',
                                                    label: 'Polygon',
                                                });
                                                feature1.setStyle(new ol.style.Style({
                                                    fill: new ol.style.Fill({
                                                        color: 'rgba(255, 255, 255, 0.4)'
                                                    }),
                                                    stroke: new ol.style.Stroke({
                                                        color: '#FF4500',
                                                        width: 2
                                                    }),
                                                    image: new ol.style.Circle({
                                                        radius: 7,
                                                        fill: new ol.style.Fill({
                                                            color: '#ffcc33'
                                                        })
                                                    })
                                                }));
                                                jjvectorSource.addFeature(feature1);

                                                var feature_icon = new ol.Feature({
                                                    geometry: new ol.geom.Point(JSON.parse('[' + geom_Point + ']')),
                                                    name: name,
                                                    type: '基建',
                                                    label: 'Polygon',
                                                    icon: 'true',
                                                });
                                                feature_icon.setStyle(new ol.style.Style({
                                                    image: new ol.style.Icon(({
                                                        anchor: [0.5, 1],
                                                        offset: [2, 19],
                                                        scale: 0.3,
                                                        anchorXUnits: 'fraction',
                                                        anchorYUnits: 'pixels',
                                                        src: '/images/icon/default_layers_roadclosures_icon_normal@2x.png',
                                                    }))
                                                }));
                                                jjvectorSource.addFeature(feature_icon);
                                                break;
                                        };
                                    };

                                    table_jj.setData(tableData_jj);

                                    cell.getRow().delete();
                                    swal(
                                        '删除成功！',
                                        '该项目已经被成功删除',
                                        'success'
                                    );
                                    popup.setPosition(undefined);//清除所有建筑弹窗

                                    var jj_tj_results = table_jj.getCalcResults();
                                    var syzjResult = jj_tj_results.bottom.SYZJ;
                                    var smgsResult = jj_tj_results.bottom.MC;
                                    document.getElementById("jjcx_tj_xmgs").value = smgsResult;
                                    document.getElementById("jjcx_tj_syzj").value = syzjResult;
                                    closer.blur();

                                }
                            })
                        }
                    })
                }
            },
            /*{
                formatter: detialIcon, width: 20, align: "center", frozen: false, cellClick: function (e, cell) {}
            },*/
            { title: "项目名称", field: "MC", frozen: false, width: 100 ,bottomCalc:"count"},
            { title: "项目地点", field: "XMDD", width: 100, },
            { title: "施工单位", field: "SGDW", width: 100, },
            { title: "负责人", field: "FZR", width: 100, },
            { title: "联系电话", field: "LXDH", width: 100, },
            { title: "建设状态", field: "JSZT", width: 100, /*editor: "select", editorParams: { "筹建": "筹建", "在建": "在建", "竣工": "竣工" } */},
            { title: "建设性质", field: "JSXZ", width: 100, /*editor: "select", editorParams: { "新建": "新建", "扩建": "扩建", "改建": "改建", "重建": "重建", "技术改造": "技术改造" }*/ },
            { title: "开工日期", field: "KGRQ", width: 130, sorter: "date", },
            { title: "完工日期", field: "WGRQ", width: 130, sorter: "date", },
            { title: "预算资金", field: "YSZJ", width: 100, sorter: "number",},
            { title: "实用资金", field: "SYZJ", width: 100, sorter: "number", bottomCalc: "sum" },
            { title: "项目描述", field: "XMMS", width: 100, },
            { title: "备注", field: "BZ", width: 100,  },
        ],
    });

    /*--------------------------基建查询结束------------------------------*/

    /*--------------------------基建录入------------------------------*/

    document.getElementById("jjlr_kgsj").flatpickr();// js初始化方法 初始化日期录入工具
    document.getElementById("jjlr_wgsj").flatpickr();// js初始化方法
    document.getElementById("font_jj_kgrq").flatpickr();// js初始化方法 初始化日期录入工具
    document.getElementById("font_jj_wgrq").flatpickr();// js初始化方法

    //生成日期自定义ID
    function PrefixInteger(num, length) {//补位函数01 02 03
        return (Array(length).join('0') + num).slice(-length);
    };
    var d = new Date();
    var year = d.getFullYear();  //获取当前年
    var month = ("0" + (d.getMonth() + 1)).slice(-2);//获取当前月
    var day = ("0" + (d.getDate())).slice(-2);//获取当前日
    var date = year.toString() + month.toString() + day.toString();//获取当天日期


    //基建录入保存
    function saveInfo_jjlr() {
        var reg = /^\d+(\.\d+)?$/;

        if (document.getElementById('jjlr_geom').value == '') {
            swal(
                '请在地图上绘制基建范围！',
                '',
                'warning'
            )
        } else if (document.getElementById('jjlr_xmmc').value == '') {
            swal(
                '项目名称不可为空',
                '',
                'warning'
            )
        } else if (document.getElementById('jjlr_yszj').value != '' && reg.test(document.getElementById('jjlr_yszj').value) == false) {
            swal(
                '预算资金格式不正确！',
                '请输入正确格式的数值',
                'warning'
            )
        } else if (document.getElementById('jjlr_syzj').value != ''&& reg.test(document.getElementById('jjlr_syzj').value) == false) {
         
            swal(
                '实用资金格式不正确！',
                '请输入正确格式的数值',
                'warning'
            )
        } else {
            var i = 1;
            for (var j = 0; j < tableData_jj.length; j++) {//判断当前日期下的项目数量，ID+1
                if (tableData_jj[j].ID.substr(0, 8) == date)
                    i = i + 1;
            };
            var newID = date + PrefixInteger(i, 2).toString();//生成当前基建录入项目的新ID
            var xmzbzx;
            var xmzbzxz;
            var feature = paintingLayer.getSource().getFeatures();
            for (i = 0; i < feature.length; i++) {
                switch (JSON.parse(JSON.parse($("#jjlr_geom").val())).type) {
                    case "Point":
                        xmzbzxz = feature[i].getGeometry().getCoordinates();
                        xmzbzx = xmzbzxz[0] + ',' + xmzbzxz[1];
                       // alert(xmzbzx);
                        break;
                    case "LineString":
                        xmzbzxz = feature[i].getGeometry().getCoordinateAt(0.5);
                        xmzbzx = xmzbzxz[0] + ',' + xmzbzxz[1];
                       // alert(xmzbzxz);
                        break;
                    case "Polygon":
                        xmzbzxz = feature[i].getGeometry().getInteriorPoint().getCoordinates();
                        xmzbzx = xmzbzxz[0] + ',' + xmzbzxz[1];
                       // alert(xmzbzx);
                        break;
                };

            };
            var xmzbc = JSON.parse(JSON.parse($("#jjlr_geom").val())).coordinates;
            var xmzblx = JSON.parse(JSON.parse($("#jjlr_geom").val())).type;

            var ID = newID;
            var MC = $("#jjlr_xmmc").val();
            var XMDD = $("#jjlr_xmdd").val();
            var XMZB = $("#jjlr_geom").val();
            var SGDW = $("#jjlr_sgdw").val();
            var FZR = $("#jjlr_fzr").val();
            var LXDH = $("#jjlr_lxdh").val();
            var JSZT = $("#jjlr_jszt").val();
            var JSXZ = $("#jjlr_jsxz").val();
            var KGRQ = $("#jjlr_kgsj").val();
            var WGRQ = $("#jjlr_wgsj").val();
            var YSZJ;
            $("#jjlr_yszj").val() == '' ? YSZJ = 0 : YSZJ = $("#jjlr_yszj").val();//如果预算资金为空，设置默认值0
            var SYZJ;
            $("#jjlr_syzj").val() == '' ? SYZJ = 0 : SYZJ = $("#jjlr_syzj").val();//如果实用资金为空，设置默认值0
            var XMMS = $("#jjlr_xmms").val();
            var BZ = $("#jjlr_bz").val();
            var XMZBC = JSON.stringify(xmzbc);
            var XMZBZX = xmzbzx.toString();
            var XMZBLX = JSON.stringify(xmzblx);

            var data = {
                ID: ID,
                MC: MC,
                XMDD: XMDD,
                XMZB: XMZB,
                SGDW: SGDW,
                FZR: FZR,
                LXDH: LXDH,
                JSZT: JSZT,
                JSXZ: JSXZ,
                KGRQ: KGRQ,
                WGRQ: WGRQ,
                YSZJ: YSZJ,
                SYZJ: SYZJ,
                XMMS: XMMS,
                BZ: BZ,
                XMZBC: XMZBC,
                XMZBZX: XMZBZX,
                XMZBLX:XMZBLX,
            };
            $.ajax({
                type: "POST",
                url: "JJSave",
                data: { datas: JSON.stringify(data) },
                //dataType: 'text',
                //contentType: "application/json",
                success: function (data) {
                    swal(
                        '保存成功！',
                        '',
                        'success'
                    );
                    cleanInfo_jjlr();
                    //map.removeInteraction(draw_interaction);
                    //clearMap();
                    paintingLayer.getSource().clear();
                    $('#jjlr_geom').val('');
                    $('#wxsb_geom').val('');
                    jjLayer.getSource().clear();
                    element.style.display = 'block';
                    data = JSON.parse(data);
                    tableData_jj = [];

                    for (var i = 0; i < data.length; i++) {
                        //var geom = JSON.parse(JSON.parse(data[i].XMZB));
                        //var polygon = JSON.stringify(geom.coordinates);
                        //data[i].XMZB = polygon.toString();
                        tableData_jj.push(data[i]);
                    };

                    for (var i = 0; i < tableData_jj.length; i++) {
                        var geom = tableData_jj[i].XMZBC;
                        var geom_Type = tableData_jj[i].XMZB;
                        var name = tableData_jj[i].MC;
                        var geom_Point = tableData_jj[i].XMZBZX;

                        switch (JSON.parse(JSON.parse(geom_Type)).type) {
                            case "Point":
                                var feature1 = new ol.Feature({
                                    geometry: new ol.geom.Point(JSON.parse(geom)),
                                    id: i + 1,
                                    name: name,
                                    type: '基建',
                                    label: 'Point',
                                });
                                feature1.setStyle(new ol.style.Style({
                                    /*fill: new ol.style.Fill({
                                        color: '#ffcc33'
                                    }),
                                    stroke: new ol.style.Stroke({
                                        color: '#FF4500',
                                        width: 2
                                    }),
                                    image: new ol.style.Circle({
                                        radius: 7,
                                        fill: new ol.style.Fill({
                                            color: '#ffcc33'
                                        })
                                    })*/
                                    image: new ol.style.Icon(({
                                        anchor: [0.5, 1],
                                        scale: 0.3,
                                        anchorXUnits: 'fraction',
                                        anchorYUnits: 'pixels',
                                        src: '/images/icon/default_layers_roadclosures_icon_normal@2x.png'
                                    }))
                                }));
                                jjvectorSource.addFeature(feature1);
                                break;
                            case "LineString":
                                var feature1 = new ol.Feature({
                                    geometry: new ol.geom.LineString(JSON.parse(geom)),
                                    id: i + 1,
                                    name: name,
                                    type: '基建',
                                    label: 'LineString',
                                });
                                feature1.setStyle(new ol.style.Style({
                                    fill: new ol.style.Fill({
                                        color: 'rgba(255, 255, 255, 0.4)'
                                    }),
                                    stroke: new ol.style.Stroke({
                                        color: '#FF4500',
                                        width: 2
                                    }),
                                    image: new ol.style.Circle({
                                        radius: 7,
                                        fill: new ol.style.Fill({
                                            color: '#ffcc33'
                                        })
                                    })
                                }));
                                jjvectorSource.addFeature(feature1);

                                var feature_icon = new ol.Feature({
                                    geometry: new ol.geom.Point(JSON.parse('[' + geom_Point + ']')),
                                    name: name,
                                    type: '基建',
                                    label: 'LineString',
                                    icon: 'true',
                                });
                                feature_icon.setStyle(new ol.style.Style({
                                    image: new ol.style.Icon(({
                                        anchor: [0.5, 1],
                                        offset: [2, 25],
                                        scale: 0.3,
                                        anchorXUnits: 'fraction',
                                        anchorYUnits: 'pixels',
                                        src: '/images/icon/default_layers_roadclosures_icon_normal@2x.png',
                                    }))
                                }));
                                jjvectorSource.addFeature(feature_icon);
                                break;
                            case "Polygon":
                                var feature1 = new ol.Feature({
                                    geometry: new ol.geom.Polygon(JSON.parse(geom)),
                                    id: i + 1,
                                    name: name,
                                    type: '基建',
                                    label: 'Polygon',
                                });
                                feature1.setStyle(new ol.style.Style({
                                    fill: new ol.style.Fill({
                                        color: 'rgba(255, 255, 255, 0.4)'
                                    }),
                                    stroke: new ol.style.Stroke({
                                        color: '#FF4500',
                                        width: 2
                                    }),
                                    image: new ol.style.Circle({
                                        radius: 7,
                                        fill: new ol.style.Fill({
                                            color: '#ffcc33'
                                        })
                                    })
                                }));
                                jjvectorSource.addFeature(feature1);

                                var feature_icon = new ol.Feature({
                                    geometry: new ol.geom.Point(JSON.parse('[' + geom_Point + ']')),
                                    name: name,
                                    type: '基建',
                                    label: 'Polygon',
                                    icon: 'true',
                                });
                                feature_icon.setStyle(new ol.style.Style({
                                    image: new ol.style.Icon(({
                                        anchor: [0.5, 1],
                                        offset: [2, 19],
                                        scale: 0.3,
                                        anchorXUnits: 'fraction',
                                        anchorYUnits: 'pixels',
                                        src: '/images/icon/default_layers_roadclosures_icon_normal@2x.png',
                                    }))
                                }));
                                jjvectorSource.addFeature(feature_icon);
                                break;
                        };

                        pass = tableData_jj[i].MC;

                    };
                    cleanInfo_jjlr();
                }
            });
        }
    };

    //表格清理函数
    function cleanInfo_jjlr() {
        $("#jjlr_xmmc").val('');
        $("#jjlr_xmdd").val('');
        $("#jjlr_geom").val('');
        $("#jjlr_sgdw").val('');
        $("#jjlr_fzr").val('');
        $("#jjlr_lxdh").val('');
        $("#jjlr_jszt").val('筹划');
        $("#jjlr_jsxz").val('新建');
        $("#jjlr_kgsj").val('');
        $("#jjlr_wgsj").val('');
        $("#jjlr_yszj").val('');
        $("#jjlr_syzj").val('');
        $("#jjlr_xmms").val('');
        $("#jjlr_bz").val('');
    };




    //添加图形编辑工具
    var paintingSource = new ol.source.Vector();
    var paintingLayer = new ol.layer.Vector({
        name: 'my_vectorlayer',
        zIndex: 2,
        'title': '绘制工具',
        source: paintingSource,
        style: new ol.style.Style({
            fill: new ol.style.Fill({
                color: 'rgba(255, 255, 255, 0.2)'
            }),
            stroke: new ol.style.Stroke({
                color: '#ffcc33',
                width: 2
            }),
            image: new ol.style.Circle({
                radius: 7,
                fill: new ol.style.Fill({
                    color: '#ffcc33'
                })
            })
        })
    });
    paintingLayer.setMap(map);

    // make interactions global so they can later be removed
    var select_interaction;
    var draw_interaction;
    var modify_interaction;

    var geomType;//获取交互的图形类型
    var itemType;//获取那个项目在进行绘制操作

    var interaction_type_draw_point = function () {
        if (draw_interaction) {
            geomType = "Point";
            swal(
                '您已经画了一个图形！',
                '请先保存它或清除它！',
                'warning'
            )
        }
        else {
            geomType = "Point";
            map.removeInteraction(draw_interaction);
            addDrawInteraction();
        }
    };



    var interaction_type_draw_polygon = function () {
        if (draw_interaction) {
            geomType = "Polygon";
            swal(
                '您已经画了一个图形！',
                '请先保存它或清除它！',
                'warning'
            )
        }
        else {
            geomType = "Polygon";
            map.removeInteraction(draw_interaction);
            addDrawInteraction();
        }
    };

    $("#interaction_type_modify").click(function () {
        addModifyInteraction();
    });

    $("#save").click(function () {
        if (draw_interaction) {
            saveData();
            if (geomType == "Polygon") {
                $("#myModalLabel_jjlr").text(geomType);
                //$('#myModal_jjlr').modal();
            };
            if (geomType == "Point") {
                $("#myModalLabel_wxsb").text(geomType);
                //$('#myModal_wxsb').modal();
            }

        }
        else {
            swal(
                '您还没有画东西！',
                '尝试画一个图形吧',
                'warning'
            )
        }
    });

    // 清除已绘制的图形
    $("#delete_wx").click(function () {
        if (paintingSource.getFeatures() != '') {
            swal({
                title: '确定删除图形吗?',
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '是的，删除!'
            }).then((result) => {
                if (result.value) {
                    //清除绘图工具
                    paintingLayer.getSource().clear();
                    $("#wxsb_geom").val('');
                    swal(
                        '删除成功！',
                        '图形已经被成功删除',
                        'success'
                    )
                }
            })
        }
        else {
            swal(
                '您还没有画东西！',
                '尝试画一个图形吧',
                'warning'
            )
        }
    });

    $("#delete_jj").click(function () {
        if (paintingSource.getFeatures() != '') {
            swal({
                title: '确定删除图形吗?',
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '是的，删除!'
            }).then((result) => {
                if (result.value) {
                    //清除绘图工具
                    paintingLayer.getSource().clear();
                    $("#jjlr_geom").val('');
                    swal(
                        '删除成功！',
                        '图形已经被成功删除',
                        'success'
                    )
                }
            })
        }
        else {
            swal(
                '您还没有画东西！',
                '尝试画一个图形吧',
                'warning'
            )
        }
    });

    // creates a draw interaction
    function addDrawInteraction() {
        // remove other interactions
        map.removeInteraction(select_interaction);
        map.removeInteraction(modify_interaction);

        // create the interaction
        draw_interaction = new ol.interaction.Draw({
            source: paintingLayer.getSource(),
            type: geomType
        });
        // add it to the map
        map.addInteraction(draw_interaction);

        draw_interaction.on('drawstart', function (event) {
            paintingLayer.getSource().clear();
        });

        // when a new feature has been drawn...
        draw_interaction.on('drawend', function (event) {
            // create a unique id
            // it is later needed to delete features
            var id = uid();
            // give the feature this id
            paintingSource.addFeature(event.feature);
            event.feature.setId(id);

            //管线多边形选
            if ($("#dropdown-menu-ewgx").attr('class') == 'dropdown-menu-ewgx showing') {
                var polygonGeometry_gx = event.feature.getGeometry();
                gxtxtj(polygonGeometry_gx);

                 //展示出表格
                showButton.innerHTML = '<i class="fa fa-angle-double-up"></i>';
                $("#showTable").attr('class', 'btn btn-info');
                document.getElementById("allTable").style.setProperty('display', 'block');
                document.getElementById("changeTable").style.setProperty('display', 'inline-block');
                document.getElementById("exportTable").style.display = "inline";
                document.getElementById("dropdown-menu-ewgx").style.setProperty('height', '870px');
                if (layerButton.innerHTML == '<i class="fa fa-angle-double-right"></i>') {
                    document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '600px');
                }
                else {
                    document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '680px');
                };
            }

            // save the changed data
            saveData();

            //展示出表格
           /* showButton.innerHTML = '<i class="fa fa-angle-double-up"></i>';
            $("#showTable").attr('class', 'btn btn-info');
            document.getElementById("allTable").style.setProperty('display', 'block');
            document.getElementById("exportTable").style.display = "inline";
            document.getElementById("dropdown-menu-ewgx").style.setProperty('height', '900px');
            if (layerButton.innerHTML == '<i class="fa fa-angle-double-right"></i>') {
            document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '600px');
            }
            else {
            document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '680px');
            };*/
        });

    }

    // build up modify interaction
    // needs a select and a modify interaction working together
    function addModifyInteraction() {
        // remove draw interaction
        map.removeInteraction(draw_interaction);
        // create select interaction
        select_interaction = new ol.interaction.Select({
            // make sure only the desired layer can be selected
            layers: function (paintingLayer) {
                return paintingLayer.get('name') === 'my_vectorlayer';
            }
        });
        map.addInteraction(select_interaction);

        // grab the features from the select interaction to use in the modify interaction
        var selected_features = select_interaction.getFeatures();
        // when a feature is selected...
        selected_features.on('add', function (event) {
            // grab the feature
            var feature = event.element;
            // ...listen for changes and save them
            feature.on('change', saveData);
            // listen to pressing of delete key, then delete selected features
            $(document).on('keyup', function (event) {
                if (event.keyCode == 46) {
                    // remove all selected features from select_interaction and my_vectorlayer
                    selected_features.forEach(function (selected_feature) {
                        var selected_feature_id = selected_feature.getId();
                        // remove from select_interaction
                        selected_features.remove(selected_feature);
                        // features aus vectorlayer entfernen
                        var vectorlayer_features = paintingLayer.getSource().getFeatures();
                        vectorlayer_features.forEach(function (source_feature) {
                            var source_feature_id = source_feature.getId();
                            if (source_feature_id === selected_feature_id) {
                                // remove from my_vectorlayer
                                paintingLayer.getSource().removeFeature(source_feature);
                                // save the changed data
                                saveData();
                            }
                        });
                    });
                    // remove listener
                    $(document).off('keyup');
                }
            });
        });
        // create the modify interaction
        modify_interaction = new ol.interaction.Modify({
            features: selected_features,
            // delete vertices by pressing the SHIFT key
            deleteCondition: function (event) {
                return ol.events.condition.shiftKeyOnly(event) &&
                    ol.events.condition.singleClick(event);
            }
        });
        // add it to the map
        map.addInteraction(modify_interaction);
    }



    // add the draw interaction when the page is first shown
    //addDrawInteraction();

    // shows data in textarea
    // replace this function by what you need
    function saveData() {
        // get the format the user has chosen
        var data_type = "GeoJSON",
            // define a format the data shall be converted to
            //format = new ol.format[data_type](dataProjection: 'EPSG:2385'),
            format = new ol.format.GeoJSON({
                //dataProjection: 'EPSG:4326',
                //featureProjection: 'EPSG:2385'
            }),
            // this will be the data in the chosen format
            data;
        try {
            // convert the data of the vector_layer into the chosen format
            //var geo = vector_layer.getSource().getFeatures().getGeometry();
            var feature = paintingLayer.getSource().getFeatures();
            for (i = 0; i < feature.length; i++) {
                var geo = feature[i].getGeometry();

            };
            //geo.transform(ol.proj.get('EPSG:2385'), ol.proj.get('EPSG:4326'));
            data = format.writeGeometry(geo);
            //data = format.writeFeatures(vector_layer.getSource().getFeatures());
        }
        catch (e) {
            // at time of creation there is an error in the GPX format (18.7.2014)
            //$('#txt_geom').val(e.name + ": " + e.message);
            if (geomType == "Polygon") {
                $('#jjlr_geom').val(e.name + ": " + e.message);
            } else {
                $('#wxsb_geom').val(e.name + ": " + e.message);
            }
            return;
        }

        //根据不同绘制类型、不同功能进行分类存储
        switch (geomType) {
            case "Point":
                if (itemType == "jj") {
                    $('#jjlr_geom').val(JSON.stringify(data, null, 4));
                } else {
                    $('#wxsb_geom').val(JSON.stringify(data, null, 4));
                };
                break;
            case "LineString":
                if (itemType == "jj") {
                    $('#jjlr_geom').val(JSON.stringify(data, null, 4));
                } else {
                    $('#wxsb_geom').val(JSON.stringify(data, null, 4));
                };
                break;
            case "Polygon":
                if (itemType == "jj") {
                    $('#jjlr_geom').val(JSON.stringify(data, null, 4));
                } else {
                    $('#wxsb_geom').val(JSON.stringify(data, null, 4));
                };
                break;
        }

        /*if (geomType == "Polygon") {
            $('#jjlr_geom').val(JSON.stringify(data, null, 4));
        } else {
            $('#wxsb_geom').val(JSON.stringify(data, null, 4));
        }*/

    }


    // clears the map and the output of the data
    function clearMap() {
        paintingLayer.getSource().clear();
        draw_interaction = NaN;
        if (select_interaction) {
            select_interaction.getFeatures().clear();
        };
        //$('#txt_geom').val('');
        $('#jjlr_geom').val('');
        $('#wxsb_geom').val('');
    }

    // creates unique id's
    function uid() {
        var id = 0;
        return function () {
            if (arguments[0] === 0) {
                id = 0;
            }
            return id++;
        }
    }

    //绘制不同类型的图形
    var jjPointButton = document.getElementById("jj_point");
    var jjLineButton = document.getElementById("jj_line");
    var jjPolygonButton = document.getElementById("jj_polygon");

    var drawFunction = function (drawtype) {

        map.removeInteraction(draw_interaction);
        geomType = drawtype;
        addDrawInteraction();

        //alert(geomType);
    };
    /*--------------------------基建录入结束------------------------------*/

    /*--------------------------基建信息修改------------------------------*/
    var jjDataEdit = function () {

        if ($("#jj_edit").prop("class") == "btn btn-primary") {
            $("#font_jj_xmdd").prop("disabled", false);
            $("#font_jj_sgdw").prop("disabled", false);
            $("#font_jj_fzr").prop("disabled", false);
            $("#font_jj_lxdh").prop("disabled", false);
            $("#font_jj_jszt").prop("disabled", false);
            $("#font_jj_jsxz").prop("disabled", false);
            $("#font_jj_kgrq").prop("disabled", false);
            $("#font_jj_wgrq").prop("disabled", false);
            $("#font_jj_yszj").prop("disabled", false);
            $("#font_jj_syzj").prop("disabled", false);
            $("#font_jj_xmms").prop("disabled", false);
            $("#font_jj_bz").prop("disabled", false);
            $("#jj_edit").prop("class", "btn btn-success");
            document.getElementById("jj_edit").innerHTML = "确认";

        } else {
            var reg = /^\d+(\.\d+)?$/;
            if ($("#font_jj_yszj").val() == '' || reg.test($("#font_jj_yszj").val()) == false) {
                swal(
                    '预算资金不可为空或格式不正确！',
                    '若暂不明确，填写默认值 0',
                    'warning'
                )
            } else if ($("#font_jj_syzj").val() == '' || reg.test($("#font_jj_syzj").val()) == false) {
                swal(
                    '实用资金不可为空或格式不正确！',
                    '若暂不明确，填写默认值 0',
                    'warning'
                )
            } else {

                var data = {
                    ID: $("#font_jj_id").val(),
                    XMDD: $("#font_jj_xmdd").val(),
                    SGDW: $("#font_jj_sgdw").val(),
                    FZR: $("#font_jj_fzr").val(),
                    LXDH: $("#font_jj_lxdh").val(),
                    JSZT: $("#font_jj_jszt").val(),
                    JSXZ: $("#font_jj_jsxz").val(),
                    KGRQ: $("#font_jj_kgrq").val(),
                    WGRQ: $("#font_jj_wgrq").val(),
                    YSZJ: $("#font_jj_yszj").val(),
                    SYZJ: $("#font_jj_syzj").val(),
                    XMMS: $("#font_jj_xmms").val(),
                    BZ: $("#font_jj_bz").val(),
                };

                $.ajax({
                    type: "POST",
                    url: "JJUpdate",
                    data: { datas: JSON.stringify(data) },
                    //dataType: 'text',
                    //contentType: "application/json",
                    success: function (data) {
                        swal(
                            '数据更新成功！',
                            '该项目数据已被成功更新',
                            'success'
                        ).then((value) => { $("#myModal_jj").modal('hide') });  //手动关闭弹出框);
                        data = JSON.parse(data);
                        tableData_jj = [];
                        for (var i = 0; i < data.length; i++) {
                            tableData_jj.push(data[i]);
                        };
                        table_jj.setData(tableData_jj);

                        //数据完成修改后，重置修改面板
                        $("#jj_edit").prop("class", "btn btn-primary");
                        document.getElementById("jj_edit").innerHTML = "修改";
                        $("#font_jj_xmdd").prop("disabled", true);
                        $("#font_jj_sgdw").prop("disabled", true);
                        $("#font_jj_fzr").prop("disabled", true);
                        $("#font_jj_lxdh").prop("disabled", true);
                        $("#font_jj_jszt").prop("disabled", true);
                        $("#font_jj_jsxz").prop("disabled", true);
                        $("#font_jj_kgrq").prop("disabled", true);
                        $("#font_jj_wgrq").prop("disabled", true);
                        $("#font_jj_yszj").prop("disabled", true);
                        $("#font_jj_syzj").prop("disabled", true);
                        $("#font_jj_xmms").prop("disabled", true);
                        $("#font_jj_bz").prop("disabled", true);
                    }
                });
            }
            
        }
    };
     /*--------------------------基建信息修改结束------------------------------*/

    /*======================================基建模块结束======================================*/

    /*========================================维修模块========================================*/
    /*--------------------------维修点数据-----------------------------*/
    var wxProjects =@Html.Raw(@ViewBag.wxProjects);
    var tableData_wx = [];

    for (var i = 0; i < wxProjects.length; i++) {
        tableData_wx.push(wxProjects[i]);
    };
    var allFeatures1 = [];
    for (i = 0; i < tableData_wx.length; i++) {
        var iconFeature4 = new ol.Feature({
            geometry: new ol.geom.Point([tableData_wx[i].X, tableData_wx[i].Y]),
            //geometry: new ol.geom.Point(ol.proj.transform([230092.75146050294, 102614.57857082381], 'EPSG:2385', 'EPSG:4326')),
            id: i + 1,
            name: tableData_wx[i].ID,
            type: '维修',
            label: '维修信息'
        });
        var iconStyle4 = new ol.style.Style({
            image: new ol.style.Icon(({
                anchor: [0.5, 1],
                scale: 0.3,
                anchorXUnits: 'fraction',
                anchorYUnits: 'pixels',
                src: '/images/icon/default_layers_construction_icon_normal@2x.png'

            }))
        });
        iconFeature4.setStyle(iconStyle4);
        allFeatures1.push(iconFeature4);
    };
    wxvectorSource.addFeatures(allFeatures1);



    /*---------------初始化图片、视频上传插件--------------------------*/
    var fileID;
    initFileInput();//解决图片上传插件中英文问题
    function initFileInput() {
        $("#imageUpload").fileinput({
            language: 'zh',
            uploadUrl: "UpLoadfileImage", //上传的地址
            maxFilesNum: 3,
            allowedFileTypes: ["image"],//允许的文件类型
            showUpload: false, //显示批量上传按钮
            dropZoneEnabled: true,//是否显示拖拽区域
            removeFromPreviewOnError: true, //当文件不符合规则，就不显示预览
        }).on("fileuploaded", function (event, data) {
            fileID = data.response.fileID;
        })
    };

    initFileInput1();//解决视频上传插件中英文问题
    function initFileInput1() {
        $("#videoUpload").fileinput({
            language: 'zh',
            uploadUrl: "UpLoadfileVideo", //上传的地址
            allowedFileTypes: ["video"],//允许的文件类型
            showUpload: false, //显示批量上传按钮
            dropZoneEnabled: true,//是否显示拖拽区域
            removeFromPreviewOnError: true, //当文件不符合规则，就不显示预览
        })
    };

    /*--------------------------维修查询------------------------------*/

    //初始化过滤器
    function updateFilter3() {
        var filter = $("#filter-field3").val();
        //$("#filter-type3").prop("disabled", false);
        $("#filter-value3").prop("disabled", false);
        table_wx.setFilter(filter, 'like', $("#filter-value3").val());

        //更新基建数据统计结果
        //需要在tabulator.js原码中屏蔽 this.botElement.appendChild(row.getElement()); 才可以不显示默认统计结果
        var wx_tj_results = table_wx.getCalcResults();
        var smgsResult = wx_tj_results.bottom.SBRY;
        document.getElementById("wxsb_tj_xmgs").value = smgsResult;
    };
    //$("#filter-field3, #filter-type3").change(updateFilter3);
    $("#filter-field3").change(updateFilter3);
    $("#filter-value3").keyup(updateFilter3);
    $("#filter-clear3").click(function () {
        $("#filter-field3").val("1");
        //$("#filter-type3").val("1");
        $("#filter-value3").val("");
        table_wx.clearFilter();

        var wx_tj_results = table_wx.getCalcResults();
        var smgsResult = wx_tj_results.bottom.SBRY;
        document.getElementById("wxsb_tj_xmgs").value = smgsResult;
    });

    //定义维修查询表格
    var table_wx = new Tabulator("#table_wx", {
        data: tableData_wx,
        height: "411px",
        layout: "fitColumns",
        cellEdited: function (cell) {
            var date = new Date();
            var seperator = "/";
            var year = date.getFullYear();
            var month = date.getMonth() + 1;
            var strDate = date.getDate();
            if (month >= 1 && month <= 9) {
                month = "0" + month;
            }
            if (strDate >= 0 && strDate <= 9) {
                strDate = "0" + strDate;
            }
            var currentdate = year + seperator + month + seperator + strDate;
            var  data = {
                    ID: cell.getRow().getData().ID,
                    SSLX: cell.getRow().getData().SSLX,
                    SBRY: cell.getRow().getData().SBRY,
                    WXZT: cell.getRow().getData().WXZT,
                    WZ: cell.getRow().getData().WZ,
                    SBRQ: cell.getRow().getData().SBRQ,
                    WXRQ:cell.getRow().getData().WXRQ,
                    X: cell.getRow().getData().X,
                    Y: cell.getRow().getData().Y,
                    X84: cell.getRow().getData().X84,
                    Y84: cell.getRow().getData().Y84,
                    BZ: cell.getRow().getData().BZ,
            };
            if (cell.getRow().getData().WXZT == "已维修")
                data.WXRQ = currentdate;

            $.ajax({
                type: "POST",
                url: "WXUpdate",
                data: { datas: JSON.stringify(data) },
                //dataType: 'text',
                //contentType: "application/json",
                success: function (data) {
                    swal(
                        '数据更新成功！',
                        '该项目数据已被成功更新',
                        'success'
                    );
                    data = JSON.parse(data);
                    tableData_wx = [];
                    for (var i = 0; i < data.length; i++) {
                        tableData_wx.push(data[i]);
                    };
                    table_wx.setData(tableData_wx);
                }
            });

        },
        rowDblClick: function (e, row) {
            var BSM = row.getData().ID;
            document.getElementById("video_wx").innerHTML = '';
            document.getElementById("video_wx").innerHTML = '<li style="font-size:15px;"><strong>项目视频:&nbsp;&nbsp;</strong></li>';
            $.ajax({
                type: "GET",
                url: "getFileWX_Video",
                data: { BSM: BSM },
                success: function (data) {

                    for (var j = 0; j < data.length; j++) {
                        data[j] = data[j].substring(7);
                        document.getElementById("video_wx").innerHTML += '<li><video id="example_video_1" class="video-js vjs-default-skin" controls preload="none" width="400" height="200" poster="/images/BG.png" data-setup="{}"><source src=' + data[j] + ' /></video></li>';
                    };
                },
                error: function () {

                }
            });

            document.getElementById("viewer_wx").innerHTML = '';
            document.getElementById("viewer_wx").innerHTML = '<li style="font-size:15px"><strong>项目图片:&nbsp;&nbsp;</strong></li>';
            $('#myModal_wx').modal();
            $("#myModalLabel_wx").text("维修项目" + row.getData().ID);
            $("#font_wx_wxzt").val(row.getData().WXZT);
            $("#font_wx_sbrq").val(row.getData().SBRQ);
            $("#font_wx_wxrq").val(row.getData().WXRQ);
            $("#font_wx_bz").val(row.getData().BZ);
            $("#font_wx_wz").val(row.getData().WZ);
            $("#font_wx_sslx").val(row.getData().SSLX);
            $("#font_wx_sbry").val(row.getData().SBRY);
            //重置修改面板
            $("#wx_edit").prop("class", "btn btn-primary");
            document.getElementById("wx_edit").innerHTML = "修改";
            $("#font_wx_wxzt").prop("disabled", true);
            $("#font_wx_sbrq").prop("disabled", true);
            $("#font_wx_wxrq").prop("disabled", true);
            $("#font_wx_bz").prop("disabled", true);
            $("#font_wx_wz").prop("disabled", true);
            $("#font_wx_sslx").prop("disabled", true);
            $("#font_wx_sbry").prop("disabled", true);
            $.ajax({
                type: "GET",
                url: "getFileWX",
                data: { BSM: BSM },
                success: function (data) {

                    for (var j = 0; j < data.length; j++) {
                        data[j] = data[j].substring(7);
                        document.getElementById("viewer_wx").innerHTML += '<li><img data-original=' + data[j] + ' src=' + data[j] + ' alt="图片1" style="width:100px"></li>&nbsp;&nbsp;'
                    };
                    viewer_wx.update();
                },
                error: function () {

                    document.getElementById("viewer_wx").innerHTML += '<li><img data-original=~/Source/none/pic/1.png src=/Source/none/pic/1.png alt="图片1" style="width:100px"></li>&nbsp;&nbsp;'
                }
            });
        },
        columns: [
            //{ formatter: "rownum", align: "center", frozen: true, width: 40 },
            {
                formatter: locationIcon, width: 20, align: "center", frozen: false, cellClick: function (e, cell) {
                    var geom = new Array();
                    geom[0] = cell.getRow().getData().X - 750;
                    geom[1] = cell.getRow().getData().Y;
                    var geom1 = new Array();
                    geom1[0] = cell.getRow().getData().X;
                    geom1[1] = cell.getRow().getData().Y;
                    view.animate({
                        center: ([geom1[0] - 70, geom1[1]]),
                        duration: 500,
                    });
                    view.animate({
                        zoom: 10,
                        duration: 500,
                    });
                    element.style.display = 'block';
                    popup.setPosition(geom1);
                    pass = cell.getRow().getData().ID;
                    content.innerHTML = '<h5>维修项目' + cell.getRow().getData().ID + '</h5><hr>' + '<a onclick="show()">详细信息>></a>';

                }
            },
            {
                formatter: deleteIcon, width: 20, align: "center", frozen: false, cellClick: function (e, cell) {
                    swal({
                        title: '确定删除该条上报信息吗?',
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: '是的，删除!'
                    }).then((result) => {
                        if (result.value) {
                            $.ajax({
                                type: "POST",
                                url: "WXDelete",
                                data: { id: cell.getRow().getData().ID },
                                success: function (data) {
                                    wxLayer.getSource().clear();
                                    data = JSON.parse(data);
                                    tableData_wx = [];

                                    for (var i = 0; i < data.length; i++) {
                                        tableData_wx.push(data[i]);
                                    };

                                    var allFeatures1 = [];
                                    for (i = 0; i < tableData_wx.length; i++) {
                                        var iconFeature4 = new ol.Feature({
                                            geometry: new ol.geom.Point([tableData_wx[i].X, tableData_wx[i].Y]),
                                            id: i + 1,
                                            name: tableData_wx[i].ID,
                                            type: '维修',
                                            label: '维修信息'
                                        });
                                        var iconStyle4 = new ol.style.Style({
                                            image: new ol.style.Icon(({
                                                anchor: [0.5, 1],
                                                scale: 0.3,
                                                anchorXUnits: 'fraction',
                                                anchorYUnits: 'pixels',
                                                src: '/images/icon/default_layers_construction_icon_normal@2x.png'

                                            }))
                                        });
                                        iconFeature4.setStyle(iconStyle4);
                                        allFeatures1.push(iconFeature4);
                                    };
                                    wxvectorSource.addFeatures(allFeatures1);

                                    table_wx.setData(tableData_wx);

                                    cell.getRow().delete();
                                    swal(
                                        '删除成功！',
                                        '该项目已经被成功删除',
                                        'success'
                                    );
                                    popup.setPosition(undefined);//清除所有建筑弹窗
                                    var wx_tj_results = table_wx.getCalcResults();//重置统计表格
                                    var smgsResult = wx_tj_results.bottom.SBRY;
                                    document.getElementById("wxsb_tj_xmgs").value = smgsResult;
                                    closer.blur();
                                }
                            })
                        }
                    })
                }
            },
            /*{
                formatter: detialIcon, width: 20, align: "center", frozen: false, cellClick: function (e, cell) {

                    
                }
            },*/
            { title: "上报人员", field: "SBRY", width: 100, bottomCalc: "count"},
            { title: "上报日期", field: "SBRQ", sorter: "date", width: 100 },
            { title: "维修日期", field: "WXRQ", sorter: "date", width: 100 },
            { title: "位置", field: "WZ", width: 196 },
            { title: "维修状态", field: "WXZT", /*editor: "select", editorParams: { "待处理": "待处理", "已维修": "已维修" },*/ width: 100 },
            { title: "备注", field: "BZ", width: 100 },
            { title: "设施类型", field: "SSLX", width: 100 },
        ],
    });

    /*--------------------------维修查询结束------------------------------*/

    /*--------------------------维修录入------------------------------*/

    // js初始化方法 初始化日期录入工具
    document.getElementById("wxsb_sbrq").flatpickr();
    document.getElementById("wxsb_wxrq").flatpickr();
    document.getElementById("font_wx_sbrq").flatpickr();
    document.getElementById("font_wx_wxrq").flatpickr();

    //生成日期自定义ID
    //补位函数
    function PrefixInteger(num, length) {
        return (Array(length).join('0') + num).slice(-length);
    };

    var d = new Date();
    var year = d.getFullYear();  //获取当前年
    var month = ("0" + (d.getMonth() + 1)).slice(-2);//获取当前月
    var day = ("0" + (d.getDate())).slice(-2);//获取当前日
    var date = year.toString() + month.toString() + day.toString();//获取当天日期

    //维修上报保存
    function saveInfo_wxsb() {
        //对输入进行判断
        if (document.getElementById('wxsb_geom').value == null || document.getElementById('wxsb_geom').value == undefined || document.getElementById('wxsb_geom').value == '') {
            swal(
                '请在地图上绘制维修地点！',
                '',
                'warning'
            )
        } else if (document.getElementById('wxsb_sslx').value == '') {
            swal(
                '类型不可为空',
                '',
                'warning'
            )
        } else if (document.getElementById('wxsb_sbrq').value == '') {
            swal(
                '日期不可为空',
                '',
                'warning'
            )
        }
        else {
            /*var k = 1;
            for (var j = 0; j < tableData_wx.length; j++) {//判断当前日期下的项目数量，ID+1
            if (tableData_wx[j].ID.substr(0, 8) == date)
            k = k + 1;
            };
            var newID2 = date + PrefixInteger(k, 4).toString();//生成当前维修上报项目的新ID
            var geom = JSON.parse(JSON.parse($("#wxsb_geom").val()));
            var x = geom.coordinates[0];
            var y = geom.coordinates[1];

            var data = {
            ID: newID2,
            BZ: $("#wxsb_bz").val(),
            SBRQ: $("#wxsb_sbrq").val(),
            SBRY: $("#wxsb_sbry").val(),
            SSLX: $("#wxsb_sslx").val(),
            WXZT: $("#wxsb_wxzt").val(),
            WZ: $("#wxsb_wz").val(),
            X: x,
            Y: y,
            X84:0,
            Y84:0,}*/
            //从数据库判断当前日期的上报条数更加靠谱
            var data1 = {};
            $.ajax({
                type: "GET",
                url: "getWXUploadNum",
                async: false,
                success: function (data) {
                    var newID2 = (date + PrefixInteger(data, 4).toString()).toString();//生成当前维修上报项目的新ID
                    var geom = JSON.parse(JSON.parse($("#wxsb_geom").val()));
                    var x = geom.coordinates[0];
                    var y = geom.coordinates[1];
                    data1 = {
                        ID: newID2,
                        BZ: $("#wxsb_bz").val(),
                        SBRQ: $("#wxsb_sbrq").val(),
                        WXRQ: $("#wxsb_wxrq").val(),
                        SBRY: $("#wxsb_sbry").val(),
                        SSLX: $("#wxsb_sslx").val(),
                        WXZT: $("#wxsb_wxzt").val(),
                        WZ: $("#wxsb_wz").val(),
                        X: x,
                        Y: y,
                        X84: 0,
                        Y84: 0,
                    }
                }
            });

            $("#imageUpload1 .kv-file-upload").click();//虚拟点击事件
            $("#videoUpload1 .kv-file-upload").click();//虚拟点击事件

            //延时函数保证了虚拟点击事件先完成，后执行保存操作
            setTimeout(function () {
                $.ajax({
                    type: "POST",
                    url: "WXSave",
                    data: { datas: JSON.stringify(data1) },
                    success: function (data) {
                        swal(
                            '保存成功！',
                            '',
                            'success'
                        );
                        map.removeInteraction(draw_interaction);
                        cleanInfo_wxsb();
                        clearMap();
                        interaction_type_draw_point();//初始化绘图工具
                        wxLayer.getSource().clear();
                        element.style.display = 'block';
                        data = JSON.parse(data);
                        tableData_wx = [];
                        var allFeatures1 = [];

                        for (var i = 0; i < data.length; i++) {
                            tableData_wx.push(data[i]);
                        };

                        for (i = 0; i < tableData_wx.length; i++) {
                            var iconFeature4 = new ol.Feature({
                                geometry: new ol.geom.Point([tableData_wx[i].X, tableData_wx[i].Y]),
                                id: i + 1,
                                name: tableData_wx[i].ID,
                                type: '维修',
                                label: '维修信息'
                            });
                            var iconStyle4 = new ol.style.Style({
                                image: new ol.style.Icon(({
                                    anchor: [0.5, 1],
                                    scale: 0.3,
                                    anchorXUnits: 'fraction',
                                    anchorYUnits: 'pixels',
                                    src: '/images/icon/default_layers_construction_icon_normal@2x.png'

                                }))
                            });
                            iconFeature4.setStyle(iconStyle4);
                            allFeatures1.push(iconFeature4);
                            pass = tableData_wx[i].ID;
                        };
                        wxvectorSource.addFeatures(allFeatures1);
                    }
                });
            }, 0);

        }
    };

    //清空输入表格
    function cleanInfo_wxsb() {
        $("#videoUpload").fileinput('clear');
        $("#imageUpload").fileinput('clear');
        $("#wxsb_bz").val('');
        $("#wxsb_sbrq").val('');
        //$("#wxsb_sbry").val('@UserManager.GetUserName(User)');
        $("#wxsb_sslx").val('');
        $("#wxsb_wxzt").val('待处理');
        $("#wxsb_wz").val('');
        $("#wxsb_geom").val('');
    };
    /*--------------------------维修录入结束------------------------------*/



    /*-----------------------维修信息修改-------------------*/

    //维修详细信息弹出框修改信息功能
    var wxDataEdit = function () {

        if ($("#wx_edit").prop("class") == "btn btn-primary") {

            $("#font_wx_wxzt").prop("disabled", false);
            $("#font_wx_sbrq").prop("disabled", false);
            $("#font_wx_wxrq").prop("disabled", false);
            $("#font_wx_bz").prop("disabled", false);
            $("#font_wx_wz").prop("disabled", false);
            $("#font_wx_sslx").prop("disabled", false);
            $("#font_wx_sbry").prop("disabled", false);
            $("#wx_edit").prop("class", "btn btn-success");
            document.getElementById("wx_edit").innerHTML = "确认";

        } else {
            //获取当前日期，并转换至指定格式YYYY/MM/DD
            var date = new Date();
            var seperator = "/";
            var year = date.getFullYear();
            var month = date.getMonth() + 1;
            var strDate = date.getDate();
            if (month >= 1 && month <= 9) {
                month = "0" + month;
            }
            if (strDate >= 0 && strDate <= 9) {
                strDate = "0" + strDate;
            }
            var currentdate = year + seperator + month + seperator + strDate;

            //打包数据 准备提交至服务端
            var data = {
                ID: $("#myModalLabel_wx").text().substring(4),
                SSLX: $("#font_wx_sslx").val(),
                SBRY: $("#font_wx_sbry").val(),
                WXZT: $("#font_wx_wxzt").val(),
                WZ: $("#font_wx_wz").val(),
                SBRQ: $("#font_wx_sbrq").val(),
                WXRQ: $("#font_wx_wxrq").val(),
                BZ: $("#font_wx_bz").val(),
            };


            /*if (cell.getRow().getData().WXZT == "已维修")
                data.WXRQ = currentdate;*/

            $.ajax({
                type: "POST",
                url: "WXUpdate",
                data: { datas: JSON.stringify(data) },
                //dataType: 'text',
                //contentType: "application/json",
                success: function (data) {
                    swal(
                        '数据更新成功！',
                        '该项目数据已被成功更新',
                        'success'
                    ).then((value) => { $("#myModal_wx").modal('hide') });  //手动关闭弹出框);
                    data = JSON.parse(data);
                    tableData_wx = [];
                    for (var i = 0; i < data.length; i++) {
                        tableData_wx.push(data[i]);
                    };
                    table_wx.setData(tableData_wx);

                    //数据完成修改后，重置修改面板
                    $("#wx_edit").prop("class", "btn btn-primary");
                    document.getElementById("wx_edit").innerHTML = "修改";
                    $("#font_wx_wxzt").prop("disabled", true);
                    $("#font_wx_sbrq").prop("disabled", true);
                    $("#font_wx_wxrq").prop("disabled", true);
                    $("#font_wx_bz").prop("disabled", true);
                    $("#font_wx_wz").prop("disabled", true);
                    $("#font_wx_sslx").prop("disabled", true);
                    $("#font_wx_sbry").prop("disabled", true);
                    
                }
            });
        }
       
    };

    /*-----------------------维修信息修改结束-------------------*/

    /*-----------------------维修信息更新-------------------*/
    document.getElementById("wx_update").onclick = function () {
        //刷新表格数据
        $.ajax({
            type: "POST",
            url: "tableDataUpdate",
            data: { type: "wx" },
            success: function (data) {
                wxLayer.getSource().clear();
                data = JSON.parse(data);
                tableData_wx = [];

                for (var i = 0; i < data.length; i++) {
                    tableData_wx.push(data[i]);
                };

                var allFeatures1 = [];
                for (i = 0; i < tableData_wx.length; i++) {
                    var iconFeature4 = new ol.Feature({
                        geometry: new ol.geom.Point([tableData_wx[i].X, tableData_wx[i].Y]),
                        id: i + 1,
                        name: tableData_wx[i].ID,
                        type: '维修',
                        label: '维修信息'
                    });
                    var iconStyle4 = new ol.style.Style({
                        image: new ol.style.Icon(({
                            anchor: [0.5, 1],
                            scale: 0.3,
                            anchorXUnits: 'fraction',
                            anchorYUnits: 'pixels',
                            src: '/images/icon/default_layers_construction_icon_normal@2x.png'

                        }))
                    });
                    iconFeature4.setStyle(iconStyle4);
                    allFeatures1.push(iconFeature4);
                };
                wxvectorSource.addFeatures(allFeatures1);

                table_wx.setData(tableData_wx);

                //初始化统计结果
                var wx_tj_results = table_wx.getCalcResults();
                var smgsResult = wx_tj_results.bottom.SBRY;
                document.getElementById("wxsb_tj_xmgs").value = smgsResult;
            }
        });
    };
    /*======================================维修模块结束======================================*/


    /*======================================二维管线模块=====================================*/

    var searchvectorSource = new ol.source.Vector();
    var searchLayer = new ol.layer.Vector({ visible: true, 'title': '道路查询', source: searchvectorSource, zIndex: 5 });
    map.addLayer(searchLayer);

    /*---------------管线表格----------------------*/
    var table_gx = new Tabulator("#table_gx", {
        //data: tableData_gx,
        height: "650px",
        layout: "fitColumns",
        pagination: "local", //enable local pagination.
        paginationSize: 15,
        langs: {
            "en-gb": {
                "pagination": {
                    "first": "首页", //text for the first page button
                    "last": "尾页",
                    "prev": "前一页",
                    "next": "后一页",
                },
            }
        },
        columns: [
            { formatter: "rownum", align: "center", frozen: true, width: 70 },
            {
                formatter: locationIcon, width: 20, align: "center", frozen: false, cellClick: function (e, cell) {
                    searchLayer.getSource().clear();
                    var selectId = cell.getRow().getData().管段编号;
                    var searchRequest = new ol.format.WFS().writeGetFeature({
                        srsName: 'EPSG:2385',
                        featureNS: 'http://www.qdkcy.org',//命名空间url
                        featurePrefix: 'pipeline',//工作区名称
                        featureTypes: gxLayerGroup,
                        outputFormat: 'application/json',
                        filter: ol.format.filter.like('管段编号', selectId)
                    });

                    fetch( "@ViewBag.mapURLs", {
                        method: 'POST',
                        body: new XMLSerializer().serializeToString(searchRequest)
                    }).then(function (response) {
                        return response.json();
                        }).then(function (json) {
                            var fs = new ol.format.GeoJSON().readFeatures(json);
                            if (fs.length == 0) {
                                swal(
                                    '管线位置信息错误！',
                                    '换一个管线试试',
                                    'warning'
                                );
                            }
                            for (var i = 0; i < fs.length; i++) {
                                var f = fs[i];
                                var searchStyle = new ol.style.Style({
                                    fill: new ol.style.Fill({
                                        color: 'rgba(0, 0, 0, 1)',
                                    }),
                                    stroke: new ol.style.Stroke({
                                        color: 'rgba(65, 105, 225, 0.7)',
                                        width: 15
                                    })
                                });
                                f.setStyle(searchStyle);
                                searchvectorSource.addFeature(f);
                                var coord = f.getGeometry().getLineString(0).getCoordinateAt(0.5);
                                var marker = new ol.Feature({
                                    type: 'gx',
                                    id: (i + 1).toString(),
                                    geometry: new ol.geom.Point(coord),
                                    labelPoint: new ol.geom.Point(coord),
                                    name: f.get("管段编号")
                                });
                                marker.setId(i);
                                marker.setStyle(searchLayerFeatureStyle(marker));
                                searchvectorSource.addFeature(marker);
                                view.animate({
                                    center: (coord),
                                    duration: 500,
                                });
                                /*view.animate({
                                zoom: 9,
                                duration: 500,
                                });*/
                            }
                    });

                }
            },
            {
                formatter: detialIcon, width: 20, align: "center", frozen: false, cellClick: function (e, cell) {

                    //var BSM = cell.getRow().getData().ID;
                    $('#myModal_gx').modal();
                    $("#font_gx_qddh").text(cell.getRow().getData().起点点号);
                    $("#font_gx_zddh").text(cell.getRow().getData().终点点号);
                    $("#font_gx_qdms").text(cell.getRow().getData().起点埋深);
                    $("#font_gx_zdms").text(cell.getRow().getData().终点埋深);
                    $("#font_gx_qdgc").text(cell.getRow().getData().起点高程);
                    $("#font_gx_zdgc").text(cell.getRow().getData().终点高程);
                    $("#font_gx_cz").text(cell.getRow().getData().材质);
                    $("#font_gx_mxfs").text(cell.getRow().getData().埋设方式);
                    $("#font_gx_gj").text(cell.getRow().getData().管径);
                    $("#font_gx_qsdw").text(cell.getRow().getData().权属单位);
                    $("#font_gx_gcbh").text(cell.getRow().getData().工程编号);
                    $("#font_gx_gclb").text(cell.getRow().getData().工程类别);
                    $("#font_gx_tgcz").text(cell.getRow().getData().套管材质);
                    $("#font_gx_ysdm").text(cell.getRow().getData().要素代码);
                    $("#font_gx_ts").text(cell.getRow().getData().条数);
                    $("#font_gx_ylz").text(cell.getRow().getData().压力值);
                    $("#font_gx_zks").text(cell.getRow().getData().总孔数);
                    $("#font_gx_yyks").text(cell.getRow().getData().已用孔数);
                    $("#font_gx_clsj").text(cell.getRow().getData().测量时间);
                    $("#font_gx_syzk").text(cell.getRow().getData().使用状况);
                    $("#font_gx_lx").text(cell.getRow().getData().流向);
                    $("#font_gx_szwz").text(cell.getRow().getData().所在位置);
                    $("#font_gx_gxfc").text(cell.getRow().getData().管线范畴);
                    $("#font_gx_rksj").text(cell.getRow().getData().入库时间);
                    $("#font_gx_gxsj").text(cell.getRow().getData().更新时间);
                    $("#font_gx_sfly").text(cell.getRow().getData().是否利用);
                    $("#font_gx_gxzt").text(cell.getRow().getData().更新状态);
                    $("#font_gx_wybs").text(cell.getRow().getData().唯一标识);
                    $("#font_gx_bz").text(cell.getRow().getData().备注);
                    $("#font_gx_gdbh").text(cell.getRow().getData().管段编号);
                    $("#font_gx_xx").text(cell.getRow().getData().线型);
                    $("#font_gx_jsrq").text(cell.getRow().getData().建设日期);
                    $("#font_gx_tcdw").text(cell.getRow().getData().探测单位);
                    $("#font_gx_sfcs").text(cell.getRow().getData().是否长输);
                    $("#font_gx_gxcd").text(cell.getRow().getData().管线长度);
                }
            },
            //{ title: "OBJECTID", field: "id", width: 150 },
            { title: "起点点号", field: "起点点号", width: 150 },
            { title: "终点点号", field: "终点点号", width: 150 },
            { title: "起点埋深", field: "起点埋深", width: 100 },
            { title: "终点埋深", field: "终点埋深", width: 100 },
            { title: "起点高程", field: "起点高程", width: 100 },
            { title: "终点高程", field: "终点高程", width: 100 },
            { title: "材质", field: "材质", width: 100 },
            { title: "埋设方式", field: "埋设方式", width: 100 },
            { title: "管径", field: "管径", width: 100 },
            { title: "权属单位", field: "权属单位", width: 150 },
            { title: "工程编号", field: "工程编号", width: 100 },
            { title: "工程类别", field: "工程类别", width: 100 },
            { title: "套管材质", field: "套管材质", width: 100 },
            { title: "要素代码", field: "要素代码", width: 100 },
            { title: "条数", field: "条数", width: 100 },
            { title: "压力值", field: "压力值", width: 100 },
            { title: "总孔数", field: "总孔数", width: 100 },
            { title: "已用孔数", field: "已用孔数", width: 100 },
            { title: "测量时间", field: "测量时间", width: 150 },
            { title: "使用状况", field: "使用状况", width: 100 },
            { title: "流向", field: "流向", width: 100 },
            { title: "所在位置", field: "所在位置", width: 150 },
            { title: "管线范畴", field: "管线范畴", width: 100 },
            { title: "入库时间", field: "入库时间", width: 100 },
            { title: "更新时间", field: "更新时间", width: 100 },
            { title: "是否利用", field: "是否利用", width: 100 },
            { title: "更新状态", field: "更新状态", width: 100 },
            { title: "唯一标识", field: "唯一标识", width: 100 },
            { title: "备注", field: "备注", width: 100 },
            { title: "管段编号", field: "管段编号", width: 100 },
            { title: "线型", field: "线型", width: 100 },
            { title: "建设日期", field: "建设日期", width: 150 },
            { title: "探测单位", field: "探测单位", width: 150 },
            { title: "是否长输", field: "是否长输", width: 100 },
            { title: "管线长度", field: "管线长度", width: 150 },
            { title: "管线类型", field: "管线类型", width: 150 },
        ],
    });
    table_gx.setLocale("en-gb");
    /*---------------管线表格结束----------------------*/

    /*-----------------管点表格------------------------*/
    var table_gd = new Tabulator("#table_gd", {
        //data: tableData_gd,
        height: "650px",
        layout: "fitColumns",
        pagination: "local", //enable local pagination.
        paginationSize: 15,
        langs: {
            "en-gb": {
                "pagination": {
                    "first": "首页", //text for the first page button
                    "last": "尾页",
                    "prev": "前一页",
                    "next": "后一页",
                },
            }
        },
        columns: [
            { formatter: "rownum", align: "center", frozen: true, width: 70 },
            {
                formatter: locationIcon, width: 20, align: "center", frozen: false, cellClick: function (e, cell) {
                    searchLayer.getSource().clear();
                    var selectId = cell.getRow().getData().管点编号;
                    var searchRequest = new ol.format.WFS().writeGetFeature({
                        srsName: 'EPSG:2385',
                        featureNS: 'http://www.qdkcy.org',//命名空间url
                        featurePrefix: 'pipeline',//工作区名称
                        featureTypes: gdLayerGroup,
                        outputFormat: 'application/json',
                        filter: ol.format.filter.like('管点编号', selectId)
                    });

                    fetch( "@ViewBag.mapURLs", {
                        method: 'POST',
                        body: new XMLSerializer().serializeToString(searchRequest)
                    }).then(function (response) {
                        return response.json();
                    }).then(function (json) {
                        var fs = new ol.format.GeoJSON().readFeatures(json);
                        if (fs.length == 0) {
                            swal(
                                '管点位置信息错误！',
                                '换一个管线试试',
                                'warning'
                            );
                        }
                        for (var i = 0; i < fs.length; i++) {
                            var f = fs[i];
                            var searchStyle = new ol.style.Style({
                                fill: new ol.style.Fill({
                                    color: 'rgba(0, 0, 0, 1)',
                                }),
                                stroke: new ol.style.Stroke({
                                    color: 'rgba(65, 105, 225, 0.7)',
                                    width: 125
                                })
                            });
                            f.setStyle(searchStyle);
                            searchvectorSource.addFeature(f);
                            var coord = f.getGeometry().getCoordinates();
                            var marker = new ol.Feature({
                                type: 'gx',
                                id: (i + 1).toString(),
                                geometry: new ol.geom.Point(coord),
                                labelPoint: new ol.geom.Point(coord),
                                name: f.get("管点编号")
                            });
                            marker.setId(i);
                            marker.setStyle(searchLayerFeatureStyle(marker));
                            searchvectorSource.addFeature(marker);
                            view.animate({
                                center: (coord),
                                duration: 500,
                            });
                            /*view.animate({
                            zoom: 9,
                            duration: 500,
                            });*/

                        }
                    });

                }
            },
            {
                formatter: detialIcon, width: 20, align: "center", frozen: false, cellClick: function (e, cell) {

                    //var BSM = cell.getRow().getData().ID;
                    $('#myModal_gd').modal();
                    $("#font_gd_gdbh").text(cell.getRow().getData().管点编号);
                    $("#font_gd_tsdh").text(cell.getRow().getData().图上点号);
                    $("#font_gd_cldh").text(cell.getRow().getData().测量点号);
                    $("#font_gd_x").text(cell.getRow().getData().X坐标);
                    $("#font_gd_y").text(cell.getRow().getData().Y坐标);
                    $("#font_gd_dmgc").text(cell.getRow().getData().地面高程);
                    $("#font_gd_tz").text(cell.getRow().getData().特征);
                    $("#font_gd_fsw").text(cell.getRow().getData().附属物);
                    $("#font_gd_jglx").text(cell.getRow().getData().井盖类型);
                    $("#font_gd_jggg").text(cell.getRow().getData().井盖规格);
                    $("#font_gd_jgcz").text(cell.getRow().getData().井盖材质);
                    $("#font_gd_gcbh").text(cell.getRow().getData().工程编号);
                    $("#font_gd_gclb").text(cell.getRow().getData().工程类别);
                    $("#font_gd_ysdm").text(cell.getRow().getData().要素代码);
                    $("#font_gd_tfh").text(cell.getRow().getData().图幅号);
                    $("#font_gd_clsj").text(cell.getRow().getData().测量时间);
                    $("#font_gd_qsdw").text(cell.getRow().getData().权属单位);
                    $("#font_gd_sjly").text(cell.getRow().getData().数据来源);
                    $("#font_gd_hqsj").text(cell.getRow().getData().获取时机);
                    $("#font_gd_pxjdh").text(cell.getRow().getData().偏心井点号);
                    $("#font_gd_pj").text(cell.getRow().getData().偏距);
                    $("#font_gd_xzjd").text(cell.getRow().getData().旋转角度);
                    $("#font_gd_szwz").text(cell.getRow().getData().所在位置);
                    $("#font_gd_gdfc").text(cell.getRow().getData().管点范畴);
                    $("#font_gd_rksj").text(cell.getRow().getData().入库时间);
                    $("#font_gd_gxsj").text(cell.getRow().getData().更新时间);
                    $("#font_gd_sfly").text(cell.getRow().getData().是否利用);
                    $("#font_gd_gxzt").text(cell.getRow().getData().更新状态);
                    $("#font_gd_wybs").text(cell.getRow().getData().唯一标识);
                    $("#font_gd_bz").text(cell.getRow().getData().备注);
                    $("#font_gd_wtdh").text(cell.getRow().getData().物探点号);
                    $("#font_gd_jds").text(cell.getRow().getData().井底深);
                    $("#font_gd_tcdw").text(cell.getRow().getData().探测单位);
                    $("#font_gd_jsrq").text(cell.getRow().getData().建设日期);
                    $("#font_gd_sfcs").text(cell.getRow().getData().是否长输);

                }
            },
            //{ title: "OBJECTID", field: "OBJECTID", width: 150 },
            { title: "管点编号", field: "管点编号", width: 150 },
            { title: "图上点号", field: "图上点号", width: 150 },
            { title: "测量点号", field: "测量点号", width: 100 },
            { title: "X坐标", field: "X坐标", width: 100 },
            { title: "Y坐标", field: "Y坐标", width: 100 },
            { title: "地面高程", field: "地面高程", width: 100 },
            { title: "特征", field: "特征", width: 100 },
            { title: "附属物", field: "附属物", width: 100 },
            { title: "井盖类型", field: "井盖类型", width: 100 },
            { title: "井盖规格", field: "井盖规格", width: 150 },
            { title: "井盖材质", field: "井盖材质", width: 100 },
            { title: "工程编号", field: "工程编号", width: 100 },
            { title: "工程类别", field: "工程类别", width: 100 },
            { title: "要素代码", field: "要素代码", width: 100 },
            { title: "图幅号", field: "图幅号", width: 100 },
            { title: "测量时间", field: "测量时间", width: 150 },
            { title: "权属单位", field: "权属单位", width: 100 },
            { title: "数据来源", field: "数据来源", width: 100 },
            { title: "获取时机", field: "获取时机", width: 150 },
            { title: "偏心井点号", field: "偏心井点号", width: 150 },
            { title: "偏距", field: "偏距", width: 100 },
            { title: "旋转角度", field: "旋转角度", width: 100 },
            { title: "所在位置", field: "所在位置", width: 100 },
            { title: "管点范畴", field: "管点范畴", width: 100 },
            { title: "入库时间", field: "入库时间", width: 100 },
            { title: "更新时间", field: "更新时间", width: 100 },
            { title: "是否利用", field: "是否利用", width: 100 },
            { title: "更新状态", field: "更新状态", width: 100 },
            { title: "唯一标识", field: "唯一标识", width: 100 },
            { title: "备注", field: "备注", width: 100 },
            { title: "物探点号", field: "物探点号", width: 100 },
            { title: "井底深", field: "井底深", width: 100 },
            { title: "探测单位", field: "探测单位", width: 100 },
            { title: "建设日期", field: "建设日期", width: 100 },
            { title: "是否长输", field: "是否长输", width: 100 },
            { title: "管点类型", field: "管点类型", width: 150 },
        ],
    });
    table_gd.setLocale("en-gb");
    /*-----------------管点表格------------------------*/

    /*-------------管线、管点搜索结果表格-------------*/
    var table_gdxSearch = new Tabulator("#table_gdx", {
        height: "650px",
        layout: "fitColumns",
        pagination: "local", //enable local pagination.
        paginationSize: 15,
        langs: {
            "en-gb": {
                "pagination": {
                    "first": "首页", //text for the first page button
                    "last": "尾页",
                    "prev": "前一页",
                    "next": "后一页",
                },
            }
        },
        columns: [
            { formatter: "rownum", align: "center", frozen: true, width: 70 },
            { title: "类别", field: "类别", width: 100 },
            { title: "管线段数(段)", field: "管线段数", width: 130 },
            { title: "管线总长度(米)", field: "管线总长度", width: 145 },
            { title: "管点总数(个)", field: "管点总数", width: 130 },
        ],
    });
    table_gdxSearch.setLocale("en-gb");

    /*-------------管线、管点搜索结果表格结束-------------*/

    /*------------------获取管线feature----------------------*/
    var tableData_gx = [];
    /*var searchRequest = new ol.format.WFS().writeGetFeature({
    srsName: 'EPSG:2385',
    featureNS: 'http://www.qdkcy.org',//命名空间url
    featurePrefix: 'pipeline',//工作区名称
    featureTypes: gxLayerGroup,
    outputFormat: 'application/json',
    filter: ol.format.filter.not(ol.format.filter.isNull('起点点号'))
    });


    fetch( "", {
    method: 'POST',
    body: new XMLSerializer().serializeToString(searchRequest)
    }).then(function (response) {
    return response.json();
    }).then(function (json) {
    var fs = new ol.format.GeoJSON().readFeatures(json);
    if (fs.length == 0) {
    swal(
    '管线不存在！',
    '再试一次',
    'warning'
    );
    };
    for (var i = 0; i < fs.length; i++) {
    var a = {
    "起点点号": fs[i].get("起点点号"),
    "终点点号": fs[i].get("终点点号"),
    "起点埋深": fs[i].get("起点埋深"),
    "终点埋深": fs[i].get("终点埋深"),
    "起点高程": fs[i].get("起点高程"),
    "终点高程": fs[i].get("终点高程"),
    "材质": fs[i].get("材质"),
    "埋设方式": fs[i].get("埋设方式"),
    "管径": fs[i].get("管径"),
    "权属单位": fs[i].get("权属单位"),
    "工程编号": fs[i].get("工程编号"),
    "工程类别": fs[i].get("工程类别"),
    "套管材质": fs[i].get("套管材质"),
    "要素代码": fs[i].get("要素代码"),
    "条数": fs[i].get("条数"),
    "压力值": fs[i].get("压力值"),
    "总孔数": fs[i].get("总孔数"),
    "已用孔数": fs[i].get("已用孔数"),
    "测量时间": fs[i].get("测量时间"),
    "使用状况": fs[i].get("使用状况"),
    "流向": fs[i].get("流向"),
    "所在位置": fs[i].get("所在位置"),
    "管线范畴": fs[i].get("管线范畴"),
    "入库时间": fs[i].get("入库时间"),
    "更新时间": fs[i].get("更新时间"),
    "是否利用": fs[i].get("是否利用"),
    "更新状态": fs[i].get("更新状态"),
    "唯一标识": fs[i].get("唯一标识"),
    "备注": fs[i].get("备注"),
    "管段编号": fs[i].get("管段编号"),
    "线型": fs[i].get("线型"),
    "建设日期": fs[i].get("建设日期"),
    "探测单位": fs[i].get("探测单位"),
    "是否长输": fs[i].get("是否长输"),
    "管线长度": fs[i].get("SHAPE_Leng"),
    "管线类型": fs[i].id_.split('.')[0].substring(0, fs[i].id_.split('.')[0].length - 5),
    };
    tableData_gx.push(a);
    }
    table_gx.setData(tableData_gx);
    });*/
    table_gx.setData(tableData_gx);
    /*----------获取管线feature结束------------------*/

    /*-------------获取管点feature-------------------*/
    var tableData_gd = [];
    /*var searchRequest2 = new ol.format.WFS().writeGetFeature({
    srsName: 'EPSG:2385',
    featureNS: 'http://www.qdkcy.org',//命名空间url
    featurePrefix: 'pipeline',//工作区名称
    featureTypes: gdLayerGroup,
    outputFormat: 'application/json',
    filter: ol.format.filter.not(ol.format.filter.isNull('管点编号'))
    });


    fetch( "", {
    method: 'POST',
    body: new XMLSerializer().serializeToString(searchRequest2)
    }).then(function (response) {
    return response.json();
    }).then(function (json) {
    var fs = new ol.format.GeoJSON().readFeatures(json);
    if (fs.length == 0) {
    swal(
    '管点不存在！',
    '再试一次',
    'warning'
    );
    };
    for (var i = 0; i < fs.length; i++) {
    var b = {
    "管点编号": fs[i].get("管点编号"),
    "图上点号": fs[i].get("图上点号"),
    "测量点号": fs[i].get("测量点号"),
    "X坐标": fs[i].get("X坐标"),
    "Y坐标": fs[i].get("Y坐标"),
    "地面高程": fs[i].get("地面高程"),
    "特征": fs[i].get("特征"),
    "附属物": fs[i].get("附属物"),
    "井盖类型": fs[i].get("井盖类型"),
    "井盖规格": fs[i].get("井盖规格"),
    "井盖材质": fs[i].get("井盖材质"),
    "工程编号": fs[i].get("工程编号"),
    "工程类别": fs[i].get("工程类别"),
    "要素代码": fs[i].get("要素代码"),
    "图幅号": fs[i].get("图幅号"),
    "测量时间": fs[i].get("测量时间"),
    "权属单位": fs[i].get("权属单位"),
    "数据来源": fs[i].get("数据来源"),
    "获取时机": fs[i].get("获取时机"),
    "偏心井点号": fs[i].get("偏心井点号"),
    "偏距": fs[i].get("偏距"),
    "旋转角度": fs[i].get("旋转角度"),
    "所在位置": fs[i].get("所在位置"),
    "管点范畴": fs[i].get("管点范畴"),
    "入库时间": fs[i].get("入库时间"),
    "更新时间": fs[i].get("更新时间"),
    "是否利用": fs[i].get("是否利用"),
    "更新状态": fs[i].get("更新状态"),
    "唯一标识": fs[i].get("唯一标识"),
    "备注": fs[i].get("备注"),
    "物探点号": fs[i].get("物探点号"),
    "井底深": fs[i].get("井底深"),
    "探测单位": fs[i].get("探测单位"),
    "建设日期": fs[i].get("建设日期"),
    "是否长输": fs[i].get("是否长输"),
    "管点类型": fs[i].id_.split('.')[0].substring(0, fs[i].id_.split('.')[0].length - 6),
    };
    tableData_gd.push(b);
    }
    table_gd.setData(tableData_gd);
    });*/
    table_gd.setData(tableData_gd);
    /*------------------获取管点feature结束----------*/

    /*------------------管线、管点表格切换----------*/

    document.getElementById("table_gd").style.display = "none";
    document.getElementById("table_gdx").style.display = "none";
    document.getElementById("gdchart").style.display = "none";
    document.getElementById("gxchart").style.display = "none";
    document.getElementById("gxdchart-c").style.display = "none";
    $("#gx").change(function () {
        if (document.getElementById("gx").checked) {
            document.getElementById("gxText").setAttribute('style', 'color:cornflowerblue');
            document.getElementById("gdText").setAttribute('style', '');
            document.getElementById("tjText").setAttribute('style', '');
            if (changeButton.innerHTML == "图表模式") {
                document.getElementById("table_gx").style.display = "block";
                document.getElementById("table_gd").style.display = "none";
                document.getElementById("table_gdx").style.display = "none";
                document.getElementById("filterMenu").style.display = "block";
            }
            else {
                document.getElementById("table_gx").style.display = "none";
                document.getElementById("table_gdx").style.display = "none";
                document.getElementById("filterMenu").style.display = "none";
                document.getElementById("gdchart").style.display = "none";
                document.getElementById("gxchart").style.display = "block";
                gxChart.clear();
                gxChart.setOption(eval($('#gxdchart-c').val() + 'x'));
            }
        }
    });

    $("#gd").change(function () {
        if (document.getElementById("gd").checked) {
            document.getElementById("gdText").setAttribute('style', 'color:cornflowerblue');
            document.getElementById("gxText").setAttribute('style', '');
            document.getElementById("tjText").setAttribute('style', '');
            if (changeButton.innerHTML == "图表模式") {
                document.getElementById("table_gd").style.display = "block";
                document.getElementById("table_gx").style.display = "none";
                document.getElementById("table_gdx").style.display = "none";
                document.getElementById("filterMenu").style.display = "none";
            }
            else {
                document.getElementById("table_gd").style.display = "none";
                document.getElementById("table_gdx").style.display = "none";
                document.getElementById("filterMenu").style.display = "none";
                document.getElementById("gxchart").style.display = "none";
                document.getElementById("gdchart").style.display = "block";
                gdChart.clear();
                gdChart.setOption(eval($('#gxdchart-c').val()));

            }
        }
    });
    $("#tj").change(function () {
        if (document.getElementById("tj").checked) {
            document.getElementById("tjText").setAttribute('style', 'color:cornflowerblue');
            document.getElementById("gdText").setAttribute('style', '');
            document.getElementById("gxText").setAttribute('style', '');
            if (changeButton.innerHTML == "图表模式") {
                document.getElementById("table_gd").style.display = "none";
                document.getElementById("table_gx").style.display = "none";
                document.getElementById("table_gdx").style.display = "block";
                document.getElementById("filterMenu").style.display = "none";
            }
            else {
                document.getElementById("table_gd").style.display = "none";
                document.getElementById("table_gx").style.display = "none";
                document.getElementById("table_gdx").style.display = "none";
                document.getElementById("filterMenu").style.display = "none";
            }
        }
    });

    var changeButton = document.getElementById("changeTable");

    changeButton.onclick = function () {
        if (changeButton.innerHTML == "图表模式") {
            changeButton.innerHTML = "数据模式";
            document.getElementById("tjtj").style.display = "none";
            document.getElementById("table_gdx").style.display = "none";
            document.getElementById("gxdchart-c").style.display = "inline-block";
            document.getElementById("exportTable").style.display = "none";
            document.getElementById("filter-field-gxLayer").style.display = "none";
            $("#changeTable").attr('class', 'btn btn-success');


            if (document.getElementById("gx").checked) {
                document.getElementById("table_gx").style.display = "none";
                document.getElementById("filterMenu").style.display = "none";
                document.getElementById("gdchart").style.display = "none";
                document.getElementById("gxchart").style.display = "block";

            }
            if (document.getElementById("gd").checked) {
                document.getElementById("table_gd").style.display = "none";
                document.getElementById("filterMenu").style.display = "none";
                document.getElementById("gdchart").style.display = "block";
                document.getElementById("gxchart").style.display = "none";
            }



        } else {
            changeButton.innerHTML = "图表模式";
            $("#changeTable").attr('class', 'btn btn-info');
            document.getElementById("gxdchart-c").style.display = "none";
            document.getElementById("exportTable").style.display = "block";
            document.getElementById("tjtj").style.display = "inline-block";
            document.getElementById("filter-field-gxLayer").style.display = "inline-block";
            document.getElementById("gdchart").style.display = "none";
            document.getElementById("gxchart").style.display = "none";
            if (document.getElementById("gx").checked) {
                document.getElementById("table_gx").style.display = "block";
                document.getElementById("filterMenu").style.display = "block";
            }
            if (document.getElementById("gd").checked) {
                document.getElementById("table_gd").style.display = "block";
            }
            if (document.getElementById("tj").checked) {
                document.getElementById("table_gdx").style.display = "block";
            }

        }

    };

    var layerButton = document.getElementById("changeLayer");

    layerButton.onclick = function () {
        if (layerButton.innerHTML == '<i class="fa fa-angle-double-right"></i>') {
            layerButton.innerHTML = '<i class="fa fa-angle-double-left"></i>';
            $("#changeLayer").attr('class', 'btn btn-info');
            document.getElementById("gxLayerTree").style.setProperty('display', 'block');
            $("#gxLayerTree").attr('class', 'col-lg-3 showing');
            $("#gxLayerTable").attr('class', 'col-lg-9');
            document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '680px');
            document.getElementById("dropdown-menu-ewgx").style.setProperty('height', '870px');
        }
        else {
            layerButton.innerHTML = '<i class="fa fa-angle-double-right"></i>';
            $("#changeLayer").attr('class', 'btn btn-success');
            $("#gxLayerTree").attr('class', 'col-lg-1 hiding');
            document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '600px');
            $("#gxLayerTable").attr('class', 'col-lg-11');
            if (showButton.innerHTML == '<i class="fa fa-angle-double-down"></i>' && layerButton.innerHTML == '<i class="fa fa-angle-double-right"></i>') {
                document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '450px');
                document.getElementById("dropdown-menu-ewgx").style.setProperty('height', '200px');
            }
        }

    };

    var showButton = document.getElementById("showTable");

    showButton.onclick = function () {
        if (showButton.innerHTML == '<i class="fa fa-angle-double-down"></i>') {
            showButton.innerHTML = '<i class="fa fa-angle-double-up"></i>';
            $("#showTable").attr('class', 'btn btn-info');
            document.getElementById("allTable").style.setProperty('display', 'block');
            document.getElementById("dropdown-menu-ewgx").style.setProperty('height', '900px');
            if (layerButton.innerHTML == '<i class="fa fa-angle-double-right"></i>') {
                document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '600px');
            }
            else {
                document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '680px');
            };
        }
        else {
            showButton.innerHTML = '<i class="fa fa-angle-double-down"></i>';
            $("#showTable").attr('class', 'btn btn-success');
            document.getElementById("allTable").style.setProperty('display', 'none');
            if (showButton.innerHTML == '<i class="fa fa-angle-double-down"></i>' && layerButton.innerHTML == '<i class="fa fa-angle-double-right"></i>') {
                document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '450px');
                document.getElementById("dropdown-menu-ewgx").style.setProperty('height', '200px');
            }
        }

    };



    /*-------------管线、管点表格切换结束----------*/

    /*----------------二维管线图层----------------*/

    var addLayers = function () {

        for (var i = 0; i < layerGroup.length; i++) {

            var sourceName = layerGroup[i].substring(9) + "Source";
            var layerName = layerGroup[i].substring(9) + "Layer";

            //wms瓦片加载方式
            /*window[sourceName] = new ol.source.TileWMS({
                url: "ViewBag.mapURLs",
                projection: Proj2385,
                params: {
                    'FORMAT': 'image/png',
                    'VERSION': '1.1.1',
                    STYLES: '',
                    LAYERS: layerGroup[i],
                }
            });
            window[layerName] = new ol.layer.Tile({
                visible: false,
                title: layerName,
                zIndex: 4,
                source: eval(layerGroup[i].substring(9) + "Source"),
        });*/

            //wms图片加载方式
            window[sourceName] = new ol.source.ImageWMS({
                ratio:1,
                url: "@ViewBag.mapURLs",
                crossOrigin: 'anonymous',
                params: {
                    LAYERS: layerGroup[i],
                    'VERSION': '1.1.1',
                    'FORMAT': "image/png",

                },
                serverType: 'geoserver',
            });
            window[layerName] = new ol.layer.Image({
                visible: false,
                zIndex: 4,
                source: eval(layerGroup[i].substring(9) + "Source"),
            })

            map.addLayer(eval(layerGroup[i].substring(9) + "Layer"));
        }

    };

    var setLayers = function () {

           for (var i = 0; i < layerGroup.length; i++) {
            (eval(layerGroup[i].substring(9) + "Layer")).setVisible(true);
        }
    };
    var gxdClick = function () {
        if (typeof building != "undefined")
            ol.Observable.unByKey(building);

        gxgd = map.on('click', function (evt) {
            var kjtc1 = [];
            for (var i = 0; i < gxLayerGroup.length; i++) {

                var layerName = gxLayerGroup[i].substring(9) + "Layer";
                if (eval(layerName).getVisible() == true) {
                    kjtc1.push(gxLayerGroup[i]);
                }
            };
            //由于管点图层受缩放等级影响是否可见，故勾选即可被框选
            if (document.getElementById("js_ss_point").checked)
                kjtc1.push("pipeline:js_ss_point");
            if (document.getElementById("ps_ws_point").checked)
                kjtc1.push("pipeline:ps_ws_point");
            if (document.getElementById("ps_ys_point").checked)
                kjtc1.push("pipeline:ps_ys_point");
            if (document.getElementById("ps_aq_point").checked)
                kjtc1.push("pipeline:ps_aq_point");
            if (document.getElementById("rq_tr_point").checked)
                kjtc1.push("pipeline:rq_tr_point");
            if (document.getElementById("dl_gd_point").checked)
                kjtc1.push("pipeline:dl_gd_point");
            if (document.getElementById("dl_ld_point").checked)
                kjtc1.push("pipeline:dl_ld_point");
            if (document.getElementById("dx_tx_point").checked)
                kjtc1.push("pipeline:dx_tx_point");
            if (document.getElementById("dx_ex_point").checked)
                kjtc1.push("pipeline:dx_ex_point");
            if (document.getElementById("dx_dt_point").checked)
                kjtc1.push("pipeline:dx_dt_point");
            if (document.getElementById("dx_yx_point").checked)
                kjtc1.push("pipeline:dx_yx_point");
            if (document.getElementById("dx_lx_point").checked)
                kjtc1.push("pipeline:dx_lx_point");
            if (document.getElementById("dx_jk_point").checked)
                kjtc1.push("pipeline:dx_jk_point");
            if (document.getElementById("dx_jy_point").checked)
                kjtc1.push("pipeline:dx_jy_point");
            if (document.getElementById("rl_rs_point").checked)
                kjtc1.push("pipeline:rl_rs_point");
            if (document.getElementById("wz_wz_point").checked)
                kjtc1.push("pipeline:wz_wz_point");

            if (kjtc1.length == 0) {
                swal(
                    '至少打开一个图层！',
                    '再试一次',
                    'warning'
                );
            } else {
                var coor = evt.coordinate;
                var cricle;
                if (view.getZoom() > 11) {//12、13级别
                    cricle = new ol.geom.Circle(coor, 0.1);

                }else if (view.getZoom() > 9) {//10、11级别
                    cricle = new ol.geom.Circle(coor, 0.3);

                } else if (view.getZoom() > 7) {//8、9级别
                    cricle = new ol.geom.Circle(coor, 1);

                }

                var circlePolygon = new ol.geom.Polygon.fromCircle(cricle, 60);
                menu_overlay.setPosition(undefined);//清除右击菜单

                var searchRequest5 = new ol.format.WFS().writeGetFeature({
                    srsName: 'EPSG:2385',
                    featureNS: 'http://www.qdkcy.org',//命名空间url
                    featurePrefix: 'pipeline',//工作区名称
                    featureTypes: kjtc1,//仅查询可见图层
                    outputFormat: 'application/json',
                    filter: ol.format.filter.intersects('the_geom', circlePolygon),//必须使用the_geom这个沙雕坐标名称
                });

                fetch( "@ViewBag.mapURLs", {
                    method: 'POST',
                    body: new XMLSerializer().serializeToString(searchRequest5)
                }).then(function (response) {
                    //console.log(response);
                    return response.json();
                }).then(function (json) {
                    //var allFeatures = new WMSGetFeatureInfo().readFeatures(response);
                    //console.log(allFeatures);
                    var fs = new ol.format.GeoJSON().readFeatures(json);
                    //console.log(fs);
                    if (fs.length == 0) {
                        swal(
                            '没有选中的元素！',
                            '再试一次',
                            'warning'
                        );
                    } else {
                        var f = fs[0];
                        //popupGX.setPosition(undefined);
                        //console.log(f.getId().slice(6, 11));
                        if (f.getId().slice(6, 11) == "line.") {
                            var searchStyle = new ol.style.Style({
                                fill: new ol.style.Fill({
                                    color: 'rgba(0, 0, 0, 1)',
                                }),
                                stroke: new ol.style.Stroke({
                                    color: 'rgba(65, 105, 225, 0.7)',
                                    width: 10
                                })
                            });
                            f.setStyle(searchStyle);
                            searchLayer.getSource().clear();
                            searchvectorSource.addFeature(f);
                            document.getElementById('popup').style.setProperty('width', '300px');
                            document.getElementById('popup').style.setProperty('height', '285px');
                            document.getElementById('popup-content').style.setProperty('margin-top', '10px');
                            document.getElementById('popup-content').style.setProperty('height', '240px');
                            document.getElementById('popup-content').style.setProperty('overflow', 'auto');

                            content.innerHTML = '<h4>' + f.get("管段编号") + '</h4>' + '起点点号:' + f.get("起点点号") +
                                '<br>终点点号: ' + f.get("终点点号") +
                                '<br>起点埋深: ' + f.get("起点埋深") +
                                '<br>终点埋深: ' + f.get("终点埋深") +
                                '<br>起点高程: ' + f.get("起点高程") +
                                '<br>终点高程: ' + f.get("终点高程") +
                                '<br>材质: ' + f.get("材质") +
                                '<br>埋设方式: ' + f.get("埋设方式") +
                                '<br>管径: ' + f.get("管径") +
                                '<br>权属单位: ' + f.get("权属单位") +
                                '<br>工程编号: ' + f.get("工程编号") +
                                '<br>工程类别: ' + f.get("工程类别") +
                                '<br>套管材质: ' + f.get("套管材质") +
                                '<br>要素代码: ' + f.get("要素代码") +
                                '<br>条数: ' + f.get("条数") +
                                '<br>压力值: ' + f.get("压力值") +
                                '<br>总孔数: ' + f.get("总孔数") +
                                '<br>已用孔数: ' + f.get("已用孔数") +
                                '<br>测量时间: ' + f.get("测量时间") +
                                '<br>使用状况: ' + f.get("使用状况") +
                                '<br>流向: ' + f.get("流向") +
                                '<br>所在位置: ' + f.get("所在位置") +
                                '<br>管线范畴: ' + f.get("管线范畴") +
                                '<br>入库时间: ' + f.get("入库时间") +
                                '<br>更新时间: ' + f.get("更新时间") +
                                '<br>是否利用: ' + f.get("是否利用") +
                                '<br>更新状态: ' + f.get("更新状态") +
                                '<br>唯一标识: ' + f.get("唯一标识") +
                                '<br>备注: ' + f.get("备注") +
                                '<br>管段编号: ' + f.get("管段编号") +
                                '<br>线型: ' + f.get("线型") +
                                '<br>建设日期: ' + f.get("建设日期") +
                                '<br>探测单位: ' + f.get("探测单位") +
                                '<br>是否长输: ' + f.get("是否长输") +
                                '<br>管线长度: ' + f.get("SHAPE_Leng");
                            map.addOverlay(popup);
                            popup.setPosition(coor);
                        };
                        if (f.getId().slice(6, 11) == "point") {

                            var searchStyle = new ol.style.Style({
                                image: new ol.style.Circle({
                                    stroke: new ol.style.Stroke({
                                        color: 'rgba(65, 105, 225, 0.7)',
                                        width: 10
                                    }),
                                    radius:10,
                                })
                            });

                            f.setStyle(searchStyle);
                            searchLayer.getSource().clear();
                            searchvectorSource.addFeature(f);
                            document.getElementById('popup').style.setProperty('width', '300px');
                            document.getElementById('popup').style.setProperty('height', '285px');
                            document.getElementById('popup-content').style.setProperty('margin-top', '10px');
                            document.getElementById('popup-content').style.setProperty('height', '240px');
                            document.getElementById('popup-content').style.setProperty('overflow', 'auto');

                            content.innerHTML = '<h4>' + f.get("管点编号") + '</h4>' +
                                '图上点号: ' + f.get("图上点号") +
                                '<br>测量点号: ' + f.get("测量点号") +
                                '<br>X坐标: ' + f.get("X坐标") +
                                '<br>Y坐标: ' + f.get("Y坐标") +
                                '<br>地面高程: ' + f.get("地面高程") +
                                '<br>特征: ' + f.get("特征") +
                                '<br>附属物: ' + f.get("附属物") +
                                '<br>井盖类型: ' + f.get("井盖类型") +
                                '<br>井盖规格: ' + f.get("井盖规格") +
                                '<br>井盖材质: ' + f.get("井盖材质") +
                                '<br>工程编号: ' + f.get("工程编号") +
                                '<br>工程类别: ' + f.get("工程类别") +
                                '<br>要素代码: ' + f.get("要素代码") +
                                '<br>图幅号: ' + f.get("图幅号") +
                                '<br>测量时间: ' + f.get("测量时间") +
                                '<br>权属单位: ' + f.get("权属单位") +
                                '<br>数据来源: ' + f.get("数据来源") +
                                '<br>获取时机: ' + f.get("获取时机") +
                                '<br>偏心井点号: ' + f.get("偏心井点号") +
                                '<br>偏距: ' + f.get("偏距") +
                                '<br>旋转角度: ' + f.get("旋转角度") +
                                '<br>所在位置: ' + f.get("所在位置") +
                                '<br>管点范畴: ' + f.get("管点范畴") +
                                '<br>入库时间: ' + f.get("入库时间") +
                                '<br>更新时间: ' + f.get("更新时间") +
                                '<br>是否利用: ' + f.get("是否利用") +
                                '<br>更新状态: ' + f.get("更新状态") +
                                '<br>唯一标识: ' + f.get("唯一标识") +
                                '<br>备注: ' + f.get("备注") +
                                '<br>物探点号: ' + f.get("物探点号") +
                                '<br>井底深: ' + f.get("井底深") +
                                '<br>探测单位: ' + f.get("探测单位") +
                                '<br>建设日期: ' + f.get("建设日期") +
                                '<br>是否长输: ' + f.get("是否长输");
                            map.addOverlay(popup);
                            popup.setPosition(coor);
                        }
                    };
                })
            }
        }.bind(this));
    }
    /*----------------二维管线图层结束----------------*/

    /*-------------二维管线图层控件-------------------*/

    var showFlag = false;
    var view = map.getView();
    view.on('change:resolution', function (e) {
        if (view.getZoom() > 11 && $("#dropdown-menu-ewgx").attr('class') == 'dropdown-menu-ewgx showing') {
            showFlag = true;
            if (document.getElementById("js_ss_point").checked)
                js_ss_pointLayer.setVisible(true);
            if (document.getElementById("ps_ws_point").checked)
                ps_ws_pointLayer.setVisible(true);
            if (document.getElementById("ps_ys_point").checked)
                ps_ys_pointLayer.setVisible(true);
            if (document.getElementById("ps_aq_point").checked)
                ps_aq_pointLayer.setVisible(true);
            if (document.getElementById("rq_tr_point").checked)
                rq_tr_pointLayer.setVisible(true);
            if (document.getElementById("dl_gd_point").checked)
                dl_gd_pointLayer.setVisible(true);
            if (document.getElementById("dl_ld_point").checked)
                dl_ld_pointLayer.setVisible(true);
            if (document.getElementById("dx_tx_point").checked)
                dx_tx_pointLayer.setVisible(true);
            if (document.getElementById("dx_ex_point").checked)
                dx_ex_pointLayer.setVisible(true);
            if (document.getElementById("dx_dt_point").checked)
                dx_dt_pointLayer.setVisible(true);
            if (document.getElementById("dx_yx_point").checked)
                dx_yx_pointLayer.setVisible(true);
            if (document.getElementById("dx_lx_point").checked)
                dx_lx_pointLayer.setVisible(true);
            if (document.getElementById("dx_jk_point").checked)
                dx_jk_pointLayer.setVisible(true);
            if (document.getElementById("dx_jy_point").checked)
                dx_jy_pointLayer.setVisible(true);
            if (document.getElementById("rl_rs_point").checked)
                rl_rs_pointLayer.setVisible(true);
        }
        if (view.getZoom() < 12) {
            showFlag = false;
            if (typeof js_ss_pointLayer != "undefined")
                js_ss_pointLayer.setVisible(false);
            if (typeof ps_ws_pointLayer != "undefined")
                ps_ws_pointLayer.setVisible(false);
            if (typeof ps_ys_pointLayer != "undefined")
                ps_ys_pointLayer.setVisible(false);
            if (typeof ps_aq_pointLayer != "undefined")
                ps_aq_pointLayer.setVisible(false);
            if (typeof rq_tr_pointLayer != "undefined")
                rq_tr_pointLayer.setVisible(false);
            if (typeof dl_gd_pointLayer != "undefined")
                dl_gd_pointLayer.setVisible(false);
            if (typeof dl_ld_pointLayer != "undefined")
                dl_ld_pointLayer.setVisible(false);
            if (typeof dx_tx_pointLayer != "undefined")
                dx_tx_pointLayer.setVisible(false);
            if (typeof dx_ex_pointLayer != "undefined")
                dx_ex_pointLayer.setVisible(false);
            if (typeof dx_dt_pointLayer != "undefined")
                dx_dt_pointLayer.setVisible(false);
            if (typeof dx_yx_pointLayer != "undefined")
                dx_yx_pointLayer.setVisible(false);
            if (typeof dx_lx_pointLayer != "undefined")
                dx_lx_pointLayer.setVisible(false);
            if (typeof dx_jk_pointLayer != "undefined")
                dx_jk_pointLayer.setVisible(false);
            if (typeof dx_jy_pointLayer != "undefined")
                dx_jy_pointLayer.setVisible(false);
            if (typeof rl_rs_pointLayer != "undefined")
                rl_rs_pointLayer.setVisible(false);
        };
        //更新比例尺
        switch (view.getZoom()) {
            case 0:
                document.getElementById("scaleNumber").innerHTML = '1:1155583';
                break;
            case 1:
                document.getElementById("scaleNumber").innerHTML = '1:577791';
                break;
            case 2:
                document.getElementById("scaleNumber").innerHTML = '1:288895';
                break;
            case 3:
                document.getElementById("scaleNumber").innerHTML = '1:144447';
                break;
            case 4:
                document.getElementById("scaleNumber").innerHTML = '1:72223';
                break;
            case 5:
                document.getElementById("scaleNumber").innerHTML = '1:36111';
                break;
            case 6:
                document.getElementById("scaleNumber").innerHTML = '1:18055';
                break;
            case 7:
                document.getElementById("scaleNumber").innerHTML = '1:9028';
                break;
            case 8:
                document.getElementById("scaleNumber").innerHTML = '1:4514';
                break;
            case 9:
                document.getElementById("scaleNumber").innerHTML = '1:2257';
                break;
            case 10:
                document.getElementById("scaleNumber").innerHTML = '1:1128';
                break;
            case 11:
                document.getElementById("scaleNumber").innerHTML = '1:564';
                break;
            case 12:
                document.getElementById("scaleNumber").innerHTML = '1:282';
                break;
            case 13:
                document.getElementById("scaleNumber").innerHTML = '1:141';
                break;
        }
    });

    //生成管线管点图层名（排除字符"pipline:"）
    var gxName = [];
    for (var i = 0; i < layerGroup.length; i++) {
        gxName.push(layerGroup[i].substring(9));
    };

    //循环控制管线图层开关
    //循环添加监听事件
    for (var i = 0; i < gxName.length; i++) {
        (function (i) {
            $(eval(gxName[i])).change(function () {
                if (gxName[i].indexOf("point") == -1) {
                    if (document.getElementById(gxName[i]).checked) {
                        eval(gxName[i] + "Layer").setVisible(true);
                    } else {
                        eval(gxName[i] + "Layer").setVisible(false);
                    }
                } else {
                    if (document.getElementById(gxName[i]).checked && showFlag == true) {
                        eval(gxName[i] + "Layer").setVisible(true);
                    } else {
                        if (showFlag == true)
                            eval(gxName[i] + "Layer").setVisible(false);
                    }
                }
            });
        })(i);
    };

    //电力
    $("#dlgx").change(function () {
        if (document.getElementById("dlgx").checked) {
            dl_gd_lineLayer.setVisible(true);
            dl_ld_lineLayer.setVisible(true);
            if (showFlag == true) {
                dl_gd_pointLayer.setVisible(true);
                dl_ld_pointLayer.setVisible(true);
            }

            $('#sub-dl').find('input[type=checkbox]').prop("checked", true);
        } else {
            dl_gd_lineLayer.setVisible(false);
            dl_ld_lineLayer.setVisible(false);
            if (showFlag == true) {
                dl_gd_pointLayer.setVisible(false);
                dl_ld_pointLayer.setVisible(false);
            }
            $('#sub-dl').find('input[type=checkbox]').prop("checked", false);
        }
    });

    //燃气
    $("#rqgx").change(function () {
        if (document.getElementById("rqgx").checked) {
            rq_tr_lineLayer.setVisible(true);
            if (showFlag == true)
                rq_tr_pointLayer.setVisible(true);
            $('#sub-rq').find('input[type=checkbox]').prop("checked", true);
        } else {
            rq_tr_lineLayer.setVisible(false);
            if (showFlag == true)
                rq_tr_pointLayer.setVisible(false);
            $('#sub-rq').find('input[type=checkbox]').prop("checked", false);
        }
    });

    //排水
    $("#psgx").change(function () {
        if (document.getElementById("psgx").checked) {
            ps_ws_lineLayer.setVisible(true);
            ps_ys_lineLayer.setVisible(true);
            ps_aq_lineLayer.setVisible(true);
            if (showFlag == true) {
                ps_ws_pointLayer.setVisible(true);
                ps_ys_pointLayer.setVisible(true);
                ps_aq_pointLayer.setVisible(true);
            };
            $('#sub-ps').find('input[type=checkbox]').prop("checked", true);
        } else {
            ps_ws_lineLayer.setVisible(false);
            ps_ys_lineLayer.setVisible(false);
            ps_aq_lineLayer.setVisible(false);
            if (showFlag == true) {
                ps_ws_pointLayer.setVisible(false);
                ps_ys_pointLayer.setVisible(false);
                ps_aq_pointLayer.setVisible(false);
            };
            $('#sub-ps').find('input[type=checkbox]').prop("checked", false);
        }
    });

    //给水
    $("#gsgx").change(function () {
        if (document.getElementById("gsgx").checked) {
            js_ss_lineLayer.setVisible(true);
            if (showFlag == true)
                js_ss_pointLayer.setVisible(true);
            $('#sub-gs').find('input[type=checkbox]').prop("checked", true);
        } else {
            js_ss_lineLayer.setVisible(false);
            if (showFlag == true)
                js_ss_pointLayer.setVisible(false);
            $('#sub-gs').find('input[type=checkbox]').prop("checked", false);
        }
    });

    //热力
    $("#rlgx").change(function () {
        if (document.getElementById("rlgx").checked) {
            rl_rs_lineLayer.setVisible(true);
            if (showFlag == true)
                rl_rs_pointLayer.setVisible(true);
            $('#sub-rl').find('input[type=checkbox]').prop("checked", true);
        } else {
            rl_rs_lineLayer.setVisible(false);
            if (showFlag == true)
                rl_rs_pointLayer.setVisible(false);
            $('#sub-rl').find('input[type=checkbox]').prop("checked", false);
        }
    });

    //未知
    $("#wzgx").change(function () {
        if (document.getElementById("wzgx").checked) {
            if (showFlag == true)
                wz_wz_pointLayer.setVisible(true);
            $('#sub-wz').find('input[type=checkbox]').prop("checked", true);
        } else {
            if (showFlag == true)
                wz_wz_pointLayer.setVisible(false);
            $('#sub-wz').find('input[type=checkbox]').prop("checked", false);
        }
    });

    //电信
    $("#dxgx").change(function () {
        if (document.getElementById("dxgx").checked) {
            dx_ex_lineLayer.setVisible(true);
            dx_jk_lineLayer.setVisible(true);
            dx_jy_lineLayer.setVisible(true);
            dx_tx_lineLayer.setVisible(true);
            dx_dt_lineLayer.setVisible(true);
            dx_lx_lineLayer.setVisible(true);
            dx_yx_lineLayer.setVisible(true);
            if (showFlag == true) {
                dx_ex_pointLayer.setVisible(true);
                dx_jk_pointLayer.setVisible(true);
                dx_jy_pointLayer.setVisible(true);
                dx_tx_pointLayer.setVisible(true);
                dx_dt_pointLayer.setVisible(true);
                dx_lx_pointLayer.setVisible(true);
                dx_yx_pointLayer.setVisible(true);
            };
            $('#sub-dx').find('input[type=checkbox]').prop("checked", true);
        } else {
            dx_ex_lineLayer.setVisible(false);
            dx_jk_lineLayer.setVisible(false);
            dx_jy_lineLayer.setVisible(false);
            dx_tx_lineLayer.setVisible(false);
            dx_dt_lineLayer.setVisible(false);
            dx_lx_lineLayer.setVisible(false);
            dx_yx_lineLayer.setVisible(false);
            if (showFlag == true) {
                dx_ex_pointLayer.setVisible(false);
                dx_jk_pointLayer.setVisible(false);
                dx_jy_pointLayer.setVisible(false);
                dx_tx_pointLayer.setVisible(false);
                dx_dt_pointLayer.setVisible(false);
                dx_lx_pointLayer.setVisible(false);
                dx_yx_pointLayer.setVisible(false);
            };
            $('#sub-dx').find('input[type=checkbox]').prop("checked", false);
        }
    });


    $("#rqgx").prop('checked', false);//初始化管线图层面板
    $("#rq_tr_line").prop('checked', false);
    $("#rq_tr_point").prop('checked', false);
    $("#gsgx").prop('checked', false);
    $("#js_ss_line").prop('checked', false);
    $("#js_ss_point").prop('checked', false);
    $("#dlgx").prop('checked', false);
    $("#dl_gd_line").prop('checked', false);
    $("#dl_gd_point").prop('checked', false);
    $("#dl_ld_line").prop('checked', false);
    $("#dl_ld_point").prop('checked', false);
    $("#dxgx").prop('checked', false);
    $("#dx_tx_line").prop('checked', false);
    $("#dx_tx_point").prop('checked', false);
    $("#dx_ex_line").prop('checked', false);
    $("#dx_ex_point").prop('checked', false);
    $("#dx_dt_line").prop('checked', false);
    $("#dx_dt_point").prop('checked', false);
    $("#dx_yx_line").prop('checked', false);
    $("#dx_yx_point").prop('checked', false);
    $("#dx_lx_line").prop('checked', false);
    $("#dx_lx_point").prop('checked', false);
    $("#dx_jk_line").prop('checked', false);
    $("#dx_jk_point").prop('checked', false);
    $("#dx_jy_line").prop('checked', false);
    $("#dx_jy_point").prop('checked', false);
    $("#rlgx").prop('checked', false);
    $("#rl_rs_line").prop('checked', false);
    $("#rl_rs_point").prop('checked', false);
    $("#wzgx").prop('checked', false);
    $("#wz_wz_point").prop('checked', false);
    /*-------------二维管线图层控件结束-------------------*/


    /*-------------二维管线查询-------------------*/
    function updateFilter_gx() {
        var filter = $("#filter-field-gx").val();
        $("#filter-type-gx").prop("disabled", false);
        $("#filter-value-gx").prop("disabled", false);
        table_gx.setFilter(filter, $("#filter-type-gx").val(), $("#filter-value-gx").val());
    };
    $("#filter-field-gx, #filter-type-gx").change(updateFilter_gx);
    $("#filter-value-gx").keyup(updateFilter_gx);
    $("#filter-clear-gx").click(function () {
        $("#filter-field-gx").val("1");
        $("#filter-type-gx").val("1");
        $("#filter-value-gx").val("");
        $("#filter-field-gxLayer").val('');
        table_gx.clearFilter();
        table_gd.clearFilter();

    });

    function updateFilter_gxLayer() {
        if ($("#filter-field-gxLayer").val() == '') {
            table_gx.clearFilter();
            table_gd.clearFilter();

        } else {
            var filter = $("#filter-field-gxLayer").val();
            table_gx.setFilter("管线类型", "=", filter);
            table_gd.setFilter("管点类型", "=", filter);
        }

    };

    $("#filter-field-gxLayer").change(updateFilter_gxLayer);

    /*-------------二维管线查询结束-------------------*/

    /*-------------多边形查询-------------------*/

    var drawCircle = new ol.interaction.Draw({
        source: paintingSource,
        type: "Circle",
        geometryFunction: new ol.interaction.Draw.createRegularPolygon(60),
    });

    var drawBox_gx = new ol.interaction.Draw({
        source: paintingSource,
        type: "Circle",
        geometryFunction: new ol.interaction.Draw.createBox(),
    });

    drawCircle.on('drawstart', function (evt) {
        paintingLayer.getSource().clear();
        map.getOverlays().clear();
        map.addOverlay(popup);
        //The feature being drawn.
        sketch = evt.feature;
        //提示框的坐标
        var tooltipCoord = evt.coordinate;

        measureTooltipElement = document.createElement('div');
        measureTooltipElement.setAttribute('id', 'lengthLabel_gx_Circle');
        //设置测量提示要素的样式
        measureTooltipElement.className = 'tooltip tooltip-measure';
        //创建一个测量提示的覆盖标注
        measureTooltip = new ol.Overlay({
            element: measureTooltipElement,
            offset: [0, -15],
            positioning: 'bottom-center',
        });
        //将测量提示的覆盖标注添加到地图中
        map.addOverlay(measureTooltip);

        //格式化测量面积
        var formatArea = function (polygon) {
            //定义面积变量
            var area;
            //获取平面面积
            area = polygon.getArea();
            //定义输出变量
            var output;
            //当面积大于10000时，转换为平方千米，否则为平方米
            /*if (area > 10000) {
            output = (Math.round(area / 1000000 * 100) / 100) + ' ' + 'km<sup>2</sup>';
            } else {
            output = (Math.round(area * 100) / 100) + ' ' + 'm<sup>2</sup>';
            }*/
            output = (Math.round(area * 100) / 100);//一直以平方米为单位
            return output;
        };

        listener2 = sketch.getGeometry().on('change', function (evt) {
            //The event target.
            //获取绘制的几何对象
            var geom = evt.target;
            //定义一个输出对象，用于记录面积和长度
            var output;
            if (geom instanceof ol.geom.Polygon) {
                map.removeEventListener('singleclick');
                map.removeEventListener('dblclick');
                //输出多边形的面积
                output = Math.round(Math.sqrt(formatArea(geom) / 3.1415926535) * 100) / 100 + ' ' + 'm';
                //Return an interior point of the polygon.
                //获取多变形内部点的坐标
                tooltipCoord = geom.getInteriorPoint().getCoordinates();
            } else if (geom instanceof ol.geom.LineString) {
                //输出多线段的长度
                output = formatLength(geom);
                //Return the last coordinate of the geometry.
                //获取多线段的最后一个点的坐标
                tooltipCoord = geom.getLastCoordinate();
            }

            //设置测量提示框的内标签为最终输出结果
            measureTooltipElement.innerHTML = output;
            //设置测量提示信息的位置坐标
            measureTooltip.setPosition(tooltipCoord);
        });
    });

    drawCircle.on('drawend', function (evt) {
        var circleGeometry_gx = evt.feature.getGeometry();
        //console.log(circleGeometry_gx);
        gxtxtj(circleGeometry_gx);
        //展示出表格
        showButton.innerHTML = '<i class="fa fa-angle-double-up"></i>';
        $("#showTable").attr('class', 'btn btn-info');
        document.getElementById("allTable").style.setProperty('display', 'block');
        document.getElementById("changeTable").style.setProperty('display', 'inline-block');
        document.getElementById("exportTable").style.display = "block";
        document.getElementById("dropdown-menu-ewgx").style.setProperty('height', '870px');
        if (layerButton.innerHTML == '<i class="fa fa-angle-double-right"></i>') {
            document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '600px');
        }
        else {
            document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '680px');
        };
    });

    drawBox_gx.on('drawstart', function (evt) {
        paintingLayer.getSource().clear();
    });

    drawBox_gx.on('drawend', function (evt) {
        var boxGeometry_gx = evt.feature.getGeometry();
        //console.log(boxGeometry_gx);
        gxtxtj(boxGeometry_gx);
        //展示出表格
        showButton.innerHTML = '<i class="fa fa-angle-double-up"></i>';
        $("#showTable").attr('class', 'btn btn-info');
        document.getElementById("allTable").style.setProperty('display', 'block');
        document.getElementById("changeTable").style.setProperty('display', 'inline-block');
        document.getElementById("exportTable").style.display = "block";
        document.getElementById("dropdown-menu-ewgx").style.setProperty('height', '870px');
        if (layerButton.innerHTML == '<i class="fa fa-angle-double-right"></i>') {
            document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '600px');
        }
        else {
            document.getElementById("dropdown-menu-ewgx").style.setProperty('width', '680px');
        };
    })

    var gxName = ['js_ss_line', 'ps_ws_line', 'ps_ys_line', 'ps_aq_line', 'rq_tr_line', 'dl_gd_line', 'dl_ld_line', 'dx_tx_line', 'dx_ex_line', 'dx_dt_line', 'dx_yx_line', 'dx_lx_line', 'dx_jk_line', 'dx_jy_line', 'rl_rs_line',
        'js_ss_point', 'ps_ws_point', 'ps_ys_point', 'ps_aq_point', 'rq_tr_point', 'dl_gd_point', 'dl_ld_point', 'dx_tx_point', 'dx_ex_point', 'dx_dt_point', 'dx_yx_point', 'dx_lx_point', 'dx_jk_point', 'dx_jy_point', 'rl_rs_point','wz_wz_point'];



    $("#kx-gx").click(function () {
        //清除点选弹出信息
        if (typeof gxgd != "undefined")
            ol.Observable.unByKey(gxgd);
        ol.Observable.unByKey(building);
        searchLayer.getSource().clear();
        popup.setPosition(undefined);
        //document.getElementById("dx-gx").style.setProperty('display', 'inline');
        $("#qx-gx").prop('class', 'btn btn-warning');
        $("#dbxx-gx").prop('class', 'btn btn-warning');
        $("#dx-gx").prop('class', 'btn btn-warning');

        //清除圈选半径
        map.getOverlays().clear();
        map.addOverlay(popup);
        var j = 0;
        for (var i = 0; i < gxName.length; i++) {
            if (document.getElementById(gxName[i]).checked) {
                j++;
            }
        };
        if (j == 0) {
            swal(
                '请先至少勾选一个图层(框选目标)',
                '再试一次',
                'warning'
            );
        } else {
            //清除多边形
            paintingLayer.getSource().clear();
            map.removeInteraction(drawCircle);
            map.removeInteraction(draw_interaction);
            draw_interaction = NaN;
            map.removeInteraction(drawBox_gx);
            map.addInteraction(drawBox_gx);
        }
    });

    $("#qx-gx").click(function () {
        //清除点选弹出信息
        if (typeof gxgd != "undefined")
            ol.Observable.unByKey(gxgd);
        searchLayer.getSource().clear();
        popup.setPosition(undefined);
        //document.getElementById("dx-gx").style.setProperty('display', 'inline');
        $("#kx-gx").prop('class', 'btn btn-warning');
        $("#dbxx-gx").prop('class', 'btn btn-warning');
        $("#dx-gx").prop('class', 'btn btn-warning');
        //清除圈选半径
        map.getOverlays().clear();
        map.addOverlay(popup);
        var j = 0;
        for (var i = 0; i < gxName.length; i++) {
            if (document.getElementById(gxName[i]).checked) {
                j++;
            }
        };
        if (j == 0) {
            swal(
                '请先至少勾选一个图层(框选目标)',
                '再试一次',
                'warning'
            );
        } else {
            //清除多边形
            paintingLayer.getSource().clear();
            map.removeInteraction(draw_interaction);
            draw_interaction = NaN;
            map.removeInteraction(drawBox_gx);
            map.removeInteraction(drawCircle);
            map.addInteraction(drawCircle);
        }
    });

    $("#dbxx-gx").click(function () {
        //清除点选弹出信息
        if (typeof gxgd != "undefined")
            ol.Observable.unByKey(gxgd);
        ol.Observable.unByKey(building);
        searchLayer.getSource().clear();
        popup.setPosition(undefined);
        //document.getElementById("dx-gx").style.setProperty('display', 'inline');
        $("#qx-gx").prop('class', 'btn btn-warning');
        $("#kx-gx").prop('class', 'btn btn-warning');
        $("#dx-gx").prop('class', 'btn btn-warning');
        //清除圈选半径
        map.getOverlays().clear();
        map.addOverlay(popup);
        var j = 0;
        for (var i = 0; i < gxName.length; i++) {
            if (document.getElementById(gxName[i]).checked) {
                j++;
            }
        };
        if (j == 0) {
            swal(
                '请先至少勾选一个图层(框选目标)',
                '再试一次',
                'warning'
            );
        } else {
            paintingLayer.getSource().clear();
            map.removeInteraction(drawBox_gx);
            map.removeInteraction(drawCircle);
            //清除多边形
            paintingLayer.getSource().clear();
            map.removeInteraction(draw_interaction);
            draw_interaction = NaN;
            interaction_type_draw_polygon();
        }
    });

    $("#dx-gx").click(function () {
        $("#qx-gx").prop('class', 'btn btn-warning');
        $("#dbxx-gx").prop('class', 'btn btn-warning');
        $("#kx-gx").prop('class', 'btn btn-warning');
        var j = 0;
        for (var i = 0; i < gxName.length; i++) {
            if (document.getElementById(gxName[i]).checked) {
                j++;
            }
        };
        if (j == 0) {
            swal(
                '请先至少勾选一个图层(框选目标)',
                '再试一次',
                'warning'
            );
        } else {
            map.removeInteraction(draw_interaction);
            map.removeInteraction(drawBox_gx);
            map.removeInteraction(drawCircle);
            kxLayer.getSource().clear();
            paintingLayer.getSource().clear();
            map.getOverlays().clear();
            map.addOverlay(popup);
            gxdClick();
        }
    });

    /*-------------多边形查询结束-------------------*/

    /*-------------管线表格导出-------------------*/

    $("#exportTable").click(function () {
        if (document.getElementById("gx").checked) {
            table_gx.download("xlsx", "data.xlsx", { sheetName: "My Data" });
        };
        if (document.getElementById("gd").checked) {
            table_gd.download("xlsx", "data.xlsx", { sheetName: "My Data" });
        };
        if (document.getElementById("tj").checked) {
            table_gdxSearch.download("xlsx", "data.xlsx", { sheetName: "My Data" });
        };

    });



    /*-------------管线表格导出结束-------------------*/


    /*===================================二维管线模块结束====================================*/

    /*================================定义所有marker的弹窗===================================*/
    var element = document.getElementById('popup');
    var content = document.getElementById('popup-content');
    var closer = document.getElementById('popup-closer');

    var popup = new ol.Overlay({
        element: element,
        positioning: 'bottom-center',
        stopEvent: true,//解决popup弹窗和基建项目点击事件冲突
        offset: [0, 0],
    });
    map.addOverlay(popup);

    closer.onclick = function () {
        popup.setPosition(undefined);
        closer.blur();
        //关闭管线弹窗时清理search图层
        if ("undefined" != typeof js_ss_lineLayer)
        searchLayer.getSource().clear();
        return false;
    };

    var pass;//全局传参参数，将popup与marker一一对应

    var addclick = function () { //定义marker点击后弹框
        if (typeof gxgd!="undefined")
            ol.Observable.unByKey(gxgd);
         building =map.on('click', function (evt) {
             menu_overlay.setPosition(undefined);//清除右击菜单
             document.getElementById('popup').style.setProperty('width', '210px');
             document.getElementById('popup').style.setProperty('height', '120px');
             document.getElementById('popup').style.setProperty('overflow', 'visible');
            var feature = map.forEachFeatureAtPixel(evt.pixel,
                function (feature, layer) {
                    return feature;
                });
            element.style.display = 'block';
            if (feature) {
                if (feature.get('type') == "教学楼" || feature.get('type') == "古建筑" || feature.get('type') == "校内单位" || feature.get('type') == "生活服务") {
                    var coordinates = feature.getGeometry().getCoordinates();
                    view.animate({
                        center: coordinates,
                        duration: 500,
                    });
                    view.animate({
                        zoom: 12,
                        duration: 500,
                    });
                    popup.setPosition(coordinates);
                    pass = feature.get('name');

                    content.innerHTML = '<h5>' + feature.get('name') + '</h5><hr>' + '<a onclick="show()">详细信息>></a>';
                } else if (feature.get('type') == "全景") {
                    if (feature.get('label') == "无人机全景") {
                        featuremarker = feature.get('name');
                        var coordinates = feature.getGeometry().getCoordinates();
                        view.animate({
                            center: coordinates,
                            duration: 500,
                        });
                        $("#myModalLabel_qj").text("全景查看");
                        document.getElementById("myModal_qj").style.setProperty("top", "50px");
                        document.getElementById("myModal_qj").style.setProperty("left", "450px");
                        $('#myModal_qj').modal();
                        openkrpano("q");
                    }
                } else if (feature.get('type') == "维修") {
                    var coordinates = feature.getGeometry().getCoordinates();
                    view.animate({
                        center: coordinates,
                        duration: 500,
                    });

                    popup.setPosition(coordinates);
                    pass = feature.get('name');
                    content.innerHTML = '<h5>维修项目' + feature.get('name') + '</h5><hr>' + '<a onclick="show()">详细信息>></a>';

                } else if (feature.get('type') == "基建") {
                    var coordinates;
                    //判断不同图形类型的基建图形
                    switch (feature.get('label')) {
                        case "Point":
                            coordinates = feature.getGeometry().getCoordinates();
                            break;
                        case "LineString":
                            if (feature.get('icon') == 'true') {
                                coordinates = feature.getGeometry().getCoordinates();
                            } else {
                                coordinates = feature.getGeometry().getCoordinateAt(0.5);
                            };
                            break;
                        case "Polygon":
                            if (feature.get('icon') == 'true') {
                                coordinates = feature.getGeometry().getCoordinates();
                            } else {
                                coordinates = feature.getGeometry().getInteriorPoint().getCoordinates();
                            };
                            break;
                    };
                    view.animate({
                        center: (coordinates),
                        duration: 500,
                    });
                    view.animate({
                        zoom: 10,
                        duration: 500,
                    });
                    popup.setPosition(coordinates);
                    pass = feature.get('name');
                    content.innerHTML = '<h5>' + feature.get('name') + '</h5><hr>' + '<a onclick="show()">详细信息>></a>';
                    //var h5 = document.getElementsByTagName("h5")[0];//解决了动态加载html时，面元素<a>
                    //链接无法点击的问题
                    //h5.innerHTML = feature.get('name');


                } else if (feature.get('type') == "gx") {

                    var coordinates = feature.getGeometry().getCoordinates();
                    view.animate({
                        center: (coordinates),
                        duration: 500,
                    });
                    /*view.animate({
                    zoom: 10,
                    duration: 500,
                    });*/
                    pass = feature.get('name');
                    for (i = 0; i < tableData_gx.length; i++) {
                        if (pass == tableData_gx[i].管段编号) {
                            $('#myModal_gx').modal();
                            $("#myModalLabel_gx").text(tableData_gx[i].管段编号);
                            $("#font_gx_qddh").text(tableData_gx[i].起点点号);
                            $("#font_gx_zddh").text(tableData_gx[i].终点点号);
                            $("#font_gx_qdms").text(tableData_gx[i].起点埋深);
                            $("#font_gx_zdms").text(tableData_gx[i].终点埋深);
                            $("#font_gx_qdgc").text(tableData_gx[i].起点高程);
                            $("#font_gx_zdgc").text(tableData_gx[i].终点高程);
                            $("#font_gx_cz").text(tableData_gx[i].材质);
                            $("#font_gx_mxfs").text(tableData_gx[i].埋设方式);
                            $("#font_gx_gj").text(tableData_gx[i].管径);
                            $("#font_gx_qsdw").text(tableData_gx[i].权属单位);
                            $("#font_gx_gcbh").text(tableData_gx[i].工程编号);
                            $("#font_gx_gclb").text(tableData_gx[i].工程类别);
                            $("#font_gx_tgcz").text(tableData_gx[i].套管材质);
                            $("#font_gx_ysdm").text(tableData_gx[i].要素代码);
                            $("#font_gx_ts").text(tableData_gx[i].条数);
                            $("#font_gx_ylz").text(tableData_gx[i].压力值);
                            $("#font_gx_zks").text(tableData_gx[i].总孔数);
                            $("#font_gx_yyks").text(tableData_gx[i].已用孔数);
                            $("#font_gx_clsj").text(tableData_gx[i].测量时间);
                            $("#font_gx_syzk").text(tableData_gx[i].使用状况);
                            $("#font_gx_lx").text(tableData_gx[i].流向);
                            $("#font_gx_szwz").text(tableData_gx[i].所在位置);
                            $("#font_gx_gxfc").text(tableData_gx[i].管线范畴);
                            $("#font_gx_rksj").text(tableData_gx[i].入库时间);
                            $("#font_gx_gxsj").text(tableData_gx[i].更新时间);
                            $("#font_gx_sfly").text(tableData_gx[i].是否利用);
                            $("#font_gx_gxzt").text(tableData_gx[i].更新状态);
                            $("#font_gx_wybs").text(tableData_gx[i].唯一标识);
                            $("#font_gx_bz").text(tableData_gx[i].备注);
                            $("#font_gx_gdbh").text(tableData_gx[i].管段编号);
                            $("#font_gx_xx").text(tableData_gx[i].线型);
                            $("#font_gx_jsrq").text(tableData_gx[i].建设日期);
                            $("#font_gx_tcrq").text(tableData_gx[i].探测单位);
                            $("#font_gx_sfcs").text(tableData_gx[i].是否长输);
                            $("#font_gx_gxcd").text(tableData_gx[i].管线长度);

                            break;
                        }
                    };

                }
            } else {
                popup.setPosition(undefined);
                closer.blur();
            }

        });

    };
    addclick();

    map.on('pointermove', function (e) {
        map.getTargetElement().style.cursor = map.hasFeatureAtPixel(e.pixel) ? 'pointer' : '';
    });


    map.on("moveend", function (evt) {
        lastCenter.push(view.getCenter());
        lastZoom.push(view.getZoom());
        //alert(lastCenter[lastCenter.length - 2]);
        //alert(lastZoom[lastZoom.length - 2]);
    });

    map.on("movestart", function (evt) {
        menu_overlay.setPosition(undefined);//清除右击菜单
    });


    //定义鼠标右击事件
    var menu_overlay = new ol.Overlay({
        element: document.getElementById("contextmenu_container"),
        positioning: 'top-left'
    });
    map.addOverlay(menu_overlay);

    $(map.getViewport()).on("contextmenu", function (event) {
        event.preventDefault();//屏蔽自带的右键事件
        var coordinate = map.getEventCoordinate(event);
        menu_overlay.setPosition(coordinate);
        document.getElementById("contextmenu_container").style.display = 'block';
    });


    /*//判断图片是否存在
    var CheckImgExists = function(imgurl) {
        var ImgObj = new Image(); //判断图片是否存在  
        ImgObj.src = imgurl;
        //没有图片，则返回-1  
        if (ImgObj.fileSize > 0 || (ImgObj.width > 0 && ImgObj.height > 0)) {
            return true;
        } else {
            return false;
        }
    } */
    //popup链接展示详细信息函数
    var show = function () {
        popup.setPosition(undefined);//点击详情后让popup消失
        for (i = 0; i < tableData_building.length; i++) {
            if (pass == tableData_building[i].MC) {
                var markerID = tableData_building[i].BSM;
                var markerName = tableData_building[i].MC;
                
                document.getElementById("video").innerHTML = '';
                document.getElementById("video").innerHTML = '<li style="font-size:15px;"><strong>视频查看:&nbsp;&nbsp;</strong></li>';
                document.getElementById("video").style.display = "none";

                document.getElementById("viewer").innerHTML = '';
                document.getElementById("viewer").innerHTML = '<li style="font-size:15px"><strong>图片查看:&nbsp;&nbsp;</strong></li>';
                $.ajax({
                    type: "GET",
                    url: "getFileNum",
                    data: { BSM: markerID, type: "image" },
                    success: function (data) {
                        if (data.length == 0) {
                            return;
                        };

                        for (var j = 0; j < data.length; j++) {
                            var pathImg = data[j].substring(7);
                            document.getElementById("viewer").innerHTML += '<li><img data-original=' + pathImg + ' src=' + pathImg + ' alt="图片1" style="width:100px"></li>&nbsp;&nbsp;';
                        };
                        viewer.update();
                    },
                    error: function () {

                        document.getElementById("viewer").innerHTML += '<li><img data-original=~/Source/none/pic/1.png src=/Source/none/pic/1.png alt="图片1" style="width:100px"></li>&nbsp;&nbsp;';
                    }
                });

                $.ajax({
                    type: "GET",
                    url: "getFileNum",
                    data: { BSM: markerID, type: "video" },
                    success: function (data) {
                        if (data.length == 0) {
                            return;
                        };

                        document.getElementById("video").style.display = "block";

                        for (var j = 0; j < data.length; j++) {
                            var pathImg = data[j].substring(7);
                            document.getElementById("video").innerHTML += '<li><video id="example_video_1" class="video-js vjs-default-skin" controls preload="none" width="400" height="200" poster="/images/BG.png" data-setup="{}"><source src='+pathImg+' /></video></li>';
                        };
                        viewer.update();
                    },
                    error: function () {

                        document.getElementById("video").innerHTML += '<li><video id="example_video_1" class="video-js vjs-default-skin" controls preload="none" width="400" height="200" poster="/images/BG.png" data-setup="{}"><source src="/Source/' + markerID + '/video/1.mov" type="video/mov" /></video></li>';
                    }
                });
                
                $('#myModal2').modal();
                $("#myModalLabel2").text(tableData_building[i].MC);
                $("#fontlb").text(tableData_building[i].LB + " " + tableData_building[i].XLB);
                $("#fontwzms").text(tableData_building[i].WZMS);

              
            }
        };
        for (i = 0; i < tableData_jj.length; i++) {
            if (pass == tableData_jj[i].MC) {
                $('#myModal_jj').modal();
                $("#myModalLabel_jj").text(tableData_jj[i].MC);
                $("#font_jj_id").val(tableData_jj[i].ID);
                $("#font_jj_xmdd").val(tableData_jj[i].XMDD);
                $("#font_jj_sgdw").val(tableData_jj[i].SGDW);
                $("#font_jj_fzr").val(tableData_jj[i].FZR);
                $("#font_jj_lxdh").val(tableData_jj[i].LXDH);
                $("#font_jj_jszt").val(tableData_jj[i].JSZT);
                $("#font_jj_jsxz").val(tableData_jj[i].JSXZ);
                $("#font_jj_kgrq").val(tableData_jj[i].KGRQ);
                $("#font_jj_wgrq").val(tableData_jj[i].WGRQ);
                $("#font_jj_yszj").val(tableData_jj[i].YSZJ);
                $("#font_jj_syzj").val(tableData_jj[i].SYZJ);
                $("#font_jj_xmms").val(tableData_jj[i].XMMS);
                $("#font_jj_bz").val(tableData_jj[i].BZ);
                break;
            }
        };
        for (i = 0; i < tableData_wx.length; i++) {
            if (pass == tableData_wx[i].ID) {
                var BSM = tableData_wx[i].ID;
                document.getElementById("video_wx").innerHTML = '';
                document.getElementById("video_wx").innerHTML = '<li style="font-size:15px;"><strong>项目视频:&nbsp;&nbsp;</strong></li>';
                $.ajax({
                    type: "GET",
                    url: "getFileWX_Video",
                    data: { BSM: BSM },
                    success: function (data) {

                        for (var j = 0; j < data.length; j++) {
                            data[j] = data[j].substring(7);
                            document.getElementById("video_wx").innerHTML += '<li><video id="example_video_1" class="video-js vjs-default-skin" controls preload="none" width="400" height="200" poster="/images/BG.png" data-setup="{}"><source src=' + data[j] + ' /></video></li>';
                        };
                    },
                    error: function () {
                    }
                });
                document.getElementById("viewer_wx").innerHTML = '';
                document.getElementById("viewer_wx").innerHTML = '<li style="font-size:15px"><strong>项目图片:&nbsp;&nbsp;</strong></li>';
                $('#myModal_wx').modal();
                $("#myModalLabel_wx").text("维修项目" + tableData_wx[i].ID);
                $("#font_wx_wxzt").val(tableData_wx[i].WXZT);
                $("#font_wx_sbrq").val(tableData_wx[i].SBRQ);
                $("#font_wx_wxrq").val(tableData_wx[i].WXRQ);
                $("#font_wx_bz").val(tableData_wx[i].BZ);
                $("#font_wx_wz").val(tableData_wx[i].WZ);
                $("#font_wx_sslx").val(tableData_wx[i].SSLX);
                $("#font_wx_sbry").val(tableData_wx[i].SBRY);
                $.ajax({
                    type: "GET",
                    url: "getFileWX",
                    data: { BSM: BSM },
                    success: function (data) {

                        for (var j = 0; j < data.length; j++) {
                            data[j] = data[j].substring(7);
                            document.getElementById("viewer_wx").innerHTML += '<li><img data-original=' + data[j] + ' src=' + data[j] + ' alt="图片1" style="width:100px"></li>&nbsp;&nbsp;'
                        };
                        viewer_wx.update();
                    },
                    error: function () {

                        document.getElementById("viewer_wx").innerHTML += '<li><img data-original=~/Source/none/pic/1.png src=/Source/none/pic/1.png alt="图片1" style="width:100px"></li>&nbsp;&nbsp;'
                    }
                });
                break;
            }
        };
    };
    /*===============================定义所有marker的弹窗结束=================================*/


    /*========================================框选工具========================================*/
    /*-----------------------控制筛选图层-------------------------*/
    function setVisible(x) {
        ssLayer.setVisible(false);
        jxlLayer.setVisible(false);
        ctLayer.setVisible(false);
        gjzLayer.setVisible(false);
        xndwLayer.setVisible(false);
        tycLayer.setVisible(false);
        sdLayer.setVisible(false);
        ylLayer.setVisible(false);
        jdLayer.setVisible(false);
        hdzxLayer.setVisible(false);
        olLayer.setVisible(false);
        otherLayer.setVisible(false);
        eval(x + "Layer").setVisible(true);
    };

    function setExtent() {
        view.animate({
            center: ([229900.75146050294, 102750.57857082381]),
            duration: 500,
        });
        view.animate({
            zoom: 8,
            duration: 500,
        });
    };

    function search_method_kx(e) {
        if ($('#kxtc').val() != "no") {
            setVisible(e);
            setExtent();
        } else {
            ssLayer.setVisible(true);
            jxlLayer.setVisible(true);
            ctLayer.setVisible(true);
            gjzLayer.setVisible(true);
            xndwLayer.setVisible(true);
            tycLayer.setVisible(true);
            sdLayer.setVisible(true);
            ylLayer.setVisible(true);
            jdLayer.setVisible(true);
            hdzxLayer.setVisible(true);
            olLayer.setVisible(true);
            otherLayer.setVisible(true);
        }
    };

    //当框选类型
    $('#kxtc').change(function () {
        search_method_kx($('#kxtc').val());
        document.getElementById('dropdown-menu-kx').style.setProperty("width", '400px');
        paintingLayer.getSource().clear();
        map.getOverlays().clear();
        map.addOverlay(popup);
        switch ($('#kxtc').val()) {
            case "no":
                $("#xxfw").prop('checked', true);
                $("#ssLayer").prop('checked', true);
                $("#gjzLayer").prop('checked', true);
                $("#jxlLayer").prop('checked', true);
                $("#xndwLayer").prop('checked', true);
                $("#ctLayer").prop('checked', true);
                $("#tycLayer").prop('checked', true);
                $("#ylLayer").prop('checked', true);
                $("#jdLayer").prop('checked', true);
                $("#sdLayer").prop('checked', true);
                $("#hdzxLayer").prop('checked', true);
                $("#otherLayer").prop('checked', true);
                document.getElementById('kx_building').style.display = 'none';
                document.getElementById('kxTips').style.display = 'none';
                break;
            case "ss":
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#ssLayer").prop('checked', true);
                document.getElementById('chart-pin').style.display = 'none';
                document.getElementById('chart-c').style.display = 'none';
                document.getElementById('kxTips').style.display = 'none';
                break;
            case "gjz":
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#gjzLayer").prop('checked', true);
                document.getElementById('chart-pin').style.display = 'none';
                document.getElementById('chart-c').style.display = 'none';
                document.getElementById('kxTips').style.display = 'none';
                break;
            case "jxl":
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#jxlLayer").prop('checked', true);
                document.getElementById('chart-pin').style.display = 'none';
                document.getElementById('chart-c').style.display = 'none';
                document.getElementById('kxTips').style.display = 'none';
                break;
            case "xndw":
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#xndwLayer").prop('checked', true);
                document.getElementById('chart-pin').style.display = 'none';
                document.getElementById('chart-c').style.display = 'none';
                document.getElementById('kxTips').style.display = 'none';
                break;
            case "ct":
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#ctLayer").prop('checked', true);
                document.getElementById('chart-pin').style.display = 'none';
                document.getElementById('chart-c').style.display = 'none';
                document.getElementById('kxTips').style.display = 'none';
                break;
            case "tyc":
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#tycLayer").prop('checked', true);
                document.getElementById('chart-pin').style.display = 'none';
                document.getElementById('chart-c').style.display = 'none';
                document.getElementById('kxTips').style.display = 'none';
                break;
            case "yl":
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#ylLayer").prop('checked', true);
                document.getElementById('chart-pin').style.display = 'none';
                document.getElementById('chart-c').style.display = 'none';
                document.getElementById('kxTips').style.display = 'none';
                break;
            case "jd":
                setCheck();
                $("#xxfw").prop('checked', true);
                $("#jdLayer").prop('checked', true);
                document.getElementById('chart-pin').style.display = 'none';
                document.getElementById('chart-c').style.display = 'none';
                document.getElementById('kxTips').style.display = 'none';
                break;
        };
        kxLayer.getSource().clear();
    });
    /*-------------------控制筛选图层结束-----------------------*/

    /*-------------------添加地图框选工具-----------------------*/
    var kxSource = new ol.source.Vector();
    var kxLayer = new ol.layer.Vector({
        name: '框选工具',
        zIndex: 4,
        'title': '框选工具',
        source: kxSource,
    });
    kxLayer.setMap(map);

    var drawCircle_xx = new ol.interaction.Draw({
        source: paintingSource,
        type: "Circle",
        geometryFunction: new ol.interaction.Draw.createRegularPolygon(60),
    });

    var dragBox = new ol.interaction.Draw({
        source: paintingSource,
        type: "Circle",
        geometryFunction: new ol.interaction.Draw.createBox(),
    });

    var allFeatures = [];
    var kx_building = [];
    var legendData = [];
    var seriesData = [];
    var onlyValue = [];
    var selected = {};
    var myChart = echarts.init(document.getElementById('chart-pin'), 'infographic');
    var gxChart = echarts.init(document.getElementById('gxchart'), 'infographic');
    var gdChart = echarts.init(document.getElementById('gdchart'), 'infographic');

    var option;
    var option2;
    var option3;

    var option4;
    var option5;
    var option6;

    var option7;
    var option8;
    var option9;
    var createSearchLayerRoadTextStyle = function (feature) {//生成图标的数字
        return new ol.style.Text({
            textAlign: 'center',
            textBaseline: 'middle',
            font: ' 16px Arial',
            text: feature.get('name'),
            fill: new ol.style.Fill({ color: 'white' }),
            offsetX: 0,
            offsetY: -38,
            rotation: 0
        });
    };
    var createSearchLayerProjectTextStyle = function (feature) {
        return new ol.style.Text({
            textAlign: 'center',
            textBaseline: 'middle',
            font: 'bold 16px Arial',
            text: feature.get('id'),
            fill: new ol.style.Fill({ color: 'white' }),
            offsetX: 0,
            offsetY: -33,
            rotation: 0
        });
    };
    var searchLayerFeatureStyle = function (feature) {
        if (feature.get('type') == 'road') {
            return new ol.style.Style({
                image: new ol.style.Icon({
                    anchor: [0.5, 1],
                    scale: 0.06,
                    src: '/images/road.png'
                }),
                text: createSearchLayerRoadTextStyle(feature)
            });
        }
        if (feature.get('type') == 'gx') {
            return new ol.style.Style({
                image: new ol.style.Icon({
                    anchor: [0.5, 0.8],
                    scale: 0.06,
                    src: '/images/gx.png'
                }),
                text: createSearchLayerRoadTextStyle(feature)
            });
        }
        if (feature.get('type') == 'nearproject') {
            return new ol.style.Style({
                image: new ol.style.Icon({
                    anchor: [0.5, 1],
                    src: '/images/icon/project.png'
                }),
                text: createSearchLayerProjectTextStyle(feature)
            });
        }
        if (feature.get('type') == undefined) {
            return new ol.style.Style({
                stroke: new ol.style.Stroke({
                    width: 6, color: [237, 212, 0, 0.8]
                }),
                fill: new ol.style.Fill({
                    color: 'rgba(0, 255, 0, 0.1)'
                })
            });
        }
    };

    drawCircle_xx.on('drawstart', function (evt) {
        map.removeInteraction(dragBox);
        kxLayer.getSource().clear();
        paintingLayer.getSource().clear();
        map.getOverlays().clear();
        map.addOverlay(popup);
        //The feature being drawn.
        sketch = evt.feature;
        //提示框的坐标
        var tooltipCoord = evt.coordinate;

        measureTooltipElement = document.createElement('div');
        measureTooltipElement.setAttribute('id', 'lengthLabel_xx_Circle');
        //设置测量提示要素的样式
        measureTooltipElement.className = 'tooltip tooltip-measure';
        //创建一个测量提示的覆盖标注
        measureTooltip = new ol.Overlay({
            element: measureTooltipElement,
            offset: [0, -15],
            positioning: 'bottom-center',
        });
        //将测量提示的覆盖标注添加到地图中
        map.addOverlay(measureTooltip);

        //格式化测量面积
        var formatArea = function (polygon) {
            //定义面积变量
            var area;
            //获取平面面积
            area = polygon.getArea();
            //定义输出变量
            var output;
            //当面积大于10000时，转换为平方千米，否则为平方米
            /*if (area > 10000) {
            output = (Math.round(area / 1000000 * 100) / 100) + ' ' + 'km<sup>2</sup>';
            } else {
            output = (Math.round(area * 100) / 100) + ' ' + 'm<sup>2</sup>';
            }*/
            output = (Math.round(area * 100) / 100);//一直以平方米为单位
            return output;
        };

        listener3 = sketch.getGeometry().on('change', function (evt) {
            //The event target.
            //获取绘制的几何对象
            var geom = evt.target;
            //定义一个输出对象，用于记录面积和长度
            var output;
            if (geom instanceof ol.geom.Polygon) {
                map.removeEventListener('singleclick');
                map.removeEventListener('dblclick');
                //输出多边形的面积
                output = Math.round(Math.sqrt(formatArea(geom) / 3.1415926535) * 100) / 100 + ' ' + 'm';
                //Return an interior point of the polygon.
                //获取多变形内部点的坐标
                tooltipCoord = geom.getInteriorPoint().getCoordinates();
            } else if (geom instanceof ol.geom.LineString) {
                //输出多线段的长度
                output = formatLength(geom);
                //Return the last coordinate of the geometry.
                //获取多线段的最后一个点的坐标
                tooltipCoord = geom.getLastCoordinate();
            }

            //设置测量提示框的内标签为最终输出结果
            measureTooltipElement.innerHTML = output;
            //设置测量提示信息的位置坐标
            measureTooltip.setPosition(tooltipCoord);
        });
    });

    drawCircle_xx.on('drawend', function (evt) {

        var extent = evt.feature.getGeometry().getExtent();
        var i = 0;
        var kxtc = $('#kxtc').val();

        if (kxtc != "no") {

            ssLayer.setVisible(false);
            jxlLayer.setVisible(false);
            xndwLayer.setVisible(false);
            ctLayer.setVisible(false);
            tycLayer.setVisible(false);
            sdLayer.setVisible(false);
            ylLayer.setVisible(false);
            jdLayer.setVisible(false);
            gjzLayer.setVisible(false);
            jjLayer.setVisible(false);
            hdzxLayer.setVisible(false);
            otherLayer.setVisible(false);

            var kxSoure = kxtc + "vectorSource";
            eval(kxtc + "Layer").setVisible(true);
            kx_building = [];
            eval(kxtc + "vectorSource").forEachFeatureIntersectingExtent(extent, function (feature) {
                i++;
                var f = feature;
                //if($('#jjlr_geom').val()==)
                var point = new ol.geom.Point(f.getGeometry().getCoordinates());

                var marker = new ol.Feature({
                    type: 'nearproject',
                    id: i.toString(),
                    geometry: point,
                    labelPoint: point,
                    name: f.get("name").toString()
                });
                marker.setId('np' + i.toString());
                marker.setStyle(searchLayerFeatureStyle(marker));

                kxSource.addFeature(marker);

                var MC = feature.get("name");
                var LB = feature.get("type");
                var XLB = feature.get("label");
                var X = feature.get("x");
                var Y = feature.get("y");
                var BSM = feature.get("bsm");
                var WZMS = feature.get("wzms");
                kx_building.push({ "MC": MC, "LB": LB, "XLB": XLB, "BSM": BSM, "WZMS": WZMS, "X": X, "Y": Y });
            });
            if (i == 0) {
                swal(
                    '没有选中的元素！！',
                    '再试一次',
                    'warning'
                );
                if (document.getElementById("kxTips").style.display == 'block')
                {
                    //重置框选图表
                    document.getElementById('chart-pin').style.display = 'none';
                    document.getElementById('chart-c').style.display = 'none';
                    document.getElementById('kx_building').style.display = 'none';
                    //框选数量总数提示
                    document.getElementById("kxTips").style.display = 'none';
                 }
                return;
            };
            document.getElementById("kxTips").style.display = 'block';//框选数量总数提示
            document.getElementById("kxNum").innerHTML = i;//重置框选总数
            //alert(JSON.stringify(kx_building));
            table_kxbuilding.setData(kx_building);
            document.getElementById('chart-pin').style.display = 'none';
            document.getElementById('chart-c').style.display = 'none';
            document.getElementById('kx_building').style.display = 'block';
            document.getElementById('dropdown-menu-kx').style.setProperty("width", '520px');
        } else {

            var layerName = [{ name: "hdzx", value: "活动中心" }, { name: "ss", value: "学生公寓" }, { name: "ct", value: "餐厅" }, { name: "sd", value: "商店" }, { name: "yl", value: "医疗" }, { name: "jd", value: "景点" }, { name: "tyc", value: "体育场" }, { name: "jxl", value: "教学楼" }, { name: "xndw", value: "校内单位" }, { name: "gjz", value: "古建筑" }, { name: "other", value: "其他" }];

            seriesData = [];
            legendData = [];
            onlyValue = [];
            var all = 0;
            for (var j = 0; j < layerName.length; j++) {
                var k = 0;
                var kxtc = layerName[j].name;
                //alert(kxtc);
                var markerNum = 0;
                eval(kxtc + "vectorSource").forEachFeatureIntersectingExtent(extent, function (feature) {
                    markerNum++;
                    allFeatures.push(feature);
                    if (feature) {
                        k++;
                    }
                });

                if (k != 0) {
                    seriesData.push({ name: layerName[j].value, value: markerNum });
                    legendData.push(layerName[j].value);
                    onlyValue.push(markerNum);
                }

                all += k;
            };
            if (all == 0) {
                swal(
                    '没有选中的元素！',
                    '再试一次',
                    'warning'
                );
                if (document.getElementById("kxTips").style.display == 'block') {
                    //重置框选图表
                    document.getElementById('chart-pin').style.display = 'none';
                    document.getElementById('chart-c').style.display = 'none';
                    document.getElementById('kx_building').style.display = 'none';
                    //框选数量总数提示
                    document.getElementById("kxTips").style.display = 'none';
                }
                return;
            };
            document.getElementById("kxTips").style.display = 'block';//框选数量总数提示
            document.getElementById("kxNum").innerHTML = all;//重置框选总数
            document.getElementById('kx_building').style.display = 'none';
            document.getElementById('chart-pin').style.display = 'block';
            document.getElementById('chart-c').style.display = 'block';
            document.getElementById('dropdown-menu-kx').style.setProperty("width", '520px');
            // 指定图表的配置项和数据

            option = {//饼图
                title: {
                    text: '信息查询统计',
                    subtext: '框选结果-饼状图',
                    x: 'center'
                },
                tooltip: {
                    trigger: 'item',
                    formatter: "{a} <br />{b} : {c} ({d}%)"
                },
                legend: {
                    type: 'scroll',
                    orient: 'vertical',
                    right: 10,
                    top: 20,
                    bottom: 20,
                    data: legendData,
                    selected: selected
                },
                series: [
                    {
                        name: '数量',
                        type: 'pie',
                        radius: '55%',
                        center: ['40%', '50%'],
                        data: seriesData,
                        itemStyle: {
                            emphasis: {
                                shadowBlur: 10,
                                shadowOffsetX: 0,
                                shadowColor: 'rgba(0, 0, 0, 0.5)'
                            }
                        }
                    }
                ]
            };

            option2 = {//柱状图
                title: {
                    text: '信息查询统计',
                    subtext: '框选结果-柱状图',
                    x: 'center'
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {            // 坐标轴指示器，坐标轴触发有效
                        type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
                    }
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                xAxis: [
                    {
                        type: 'category',
                        data: legendData,
                        axisTick: {
                            alignWithLabel: true
                        },
                        axisLabel: {
                            interval: 0,
                            rotate: 40
                        }
                    }
                ],
                yAxis: [
                    {
                        type: 'value',

                    }
                ],
                series: [
                    {
                        name: '数量',
                        type: 'bar',
                        barWidth: '60%',
                        itemStyle: {
                            normal: {
                                color: function (params) {
                                    var colorList = ['#C33531', '#EFE42A', '#64BD3D', '#EE9201', '#29AAE3', '#B74AE5', '#0AAF9F', '#E89589', '#16A085', '#4A235A', '#C39BD3 ', '#F9E79F', '#BA4A00', '#ECF0F1', '#616A6B', '#EAF2F8', '#4A235A', '#3498DB'];
                                    return colorList[params.dataIndex]
                                }
                            },
                        },
                        data: onlyValue
                    }
                ]
            };


            option3 = {//折线图
                color: ['#3398DB'],
                title: {
                    text: '信息查询统计',
                    subtext: '框选结果-折线图',
                    x: 'center'
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {            // 坐标轴指示器，坐标轴触发有效
                        type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
                    }
                },
                xAxis: {
                    type: 'category',
                    data: legendData,
                    axisLabel: {
                        interval: 0,
                        rotate: 40
                    }
                },
                yAxis: {
                    type: 'value',
                    minInterval: 1,
                },
                series: [{
                    data: onlyValue,
                    type: 'line'
                }]
            };
            myChart.clear();
            myChart.setOption(eval($('#chart-c').val()));
        }

    });


    dragBox.on('drawstart', function () {
        paintingLayer.getSource().clear();
        kxLayer.getSource().clear();
        //document.getElementById("kxTips").style.display = 'none';
    });




    dragBox.on('drawend', function (evt) {


        var extent = evt.feature.getGeometry().getExtent();
        var i = 0;

        var kxtc = $('#kxtc').val();



        //判断是否正在进行管线框选
        if ($("#dropdown-menu-ewgx").attr('class') == 'dropdown-menu-ewgx showing') {
            //console.log(dragBox.getGeometry());
            gxtxtj(dragBox.getGeometry());

        }
        else {
            if (kxtc == "jjxm") {
                ssLayer.setVisible(false);
                jxlLayer.setVisible(false);
                xndwLayer.setVisible(false);
                ctLayer.setVisible(false);
                tycLayer.setVisible(false);
                sdLayer.setVisible(false);
                ylLayer.setVisible(false);
                jdLayer.setVisible(false);
                gjzLayer.setVisible(false);
                hdzxLayer.setVisible(false);
                jjLayer.setVisible(true);
                jjvectorSource.forEachFeatureIntersectingExtent(extent, function (feature) {
                    i++;
                    var f = feature;
                    var point = f.getGeometry().getInteriorPoint();
                    var marker = new ol.Feature({
                        type: 'nearproject',
                        id: i.toString(),
                        geometry: point,
                        labelPoint: point,
                        name: f.get("name").toString()
                    });
                    marker.setId('np' + i.toString());
                    marker.setStyle(searchLayerFeatureStyle(marker));

                    kxSource.addFeature(marker);
                    // unitOverlayProjectContent.append('<p><span class="pull-right-container"><span class="badge pull-left bg-green">' + i.toString() + '</span></span><a style="color:black; margin-left:15px" href="#" onClick="gotoNearProjectMarker(\'' + marker.getId() + '\')">' + f.get("name").toString() + '</a></p>');
                });
            } else if (kxtc != "no") {

                ssLayer.setVisible(false);
                otherLayer.setVisible(false);
                jxlLayer.setVisible(false);
                xndwLayer.setVisible(false);
                ctLayer.setVisible(false);
                tycLayer.setVisible(false);
                sdLayer.setVisible(false);
                ylLayer.setVisible(false);
                jdLayer.setVisible(false);
                gjzLayer.setVisible(false);
                jjLayer.setVisible(false);
                hdzxLayer.setVisible(false);

                var kxSoure = kxtc + "vectorSource";
                eval(kxtc + "Layer").setVisible(true);
                kx_building = [];
                eval(kxtc + "vectorSource").forEachFeatureIntersectingExtent(extent, function (feature) {
                    i++;
                    var f = feature;
                    //if($('#jjlr_geom').val()==)
                    var point = new ol.geom.Point(f.getGeometry().getCoordinates());

                    var marker = new ol.Feature({
                        type: 'nearproject',
                        id: i.toString(),
                        geometry: point,
                        labelPoint: point,
                        name: f.get("name").toString()
                    });
                    marker.setId('np' + i.toString());
                    marker.setStyle(searchLayerFeatureStyle(marker));

                    kxSource.addFeature(marker);

                    var MC = feature.get("name");
                    var LB = feature.get("type");
                    var XLB = feature.get("label");
                    var X = feature.get("x");
                    var Y = feature.get("y");
                    var BSM = feature.get("bsm");
                    var WZMS = feature.get("wzms");
                    kx_building.push({ "MC": MC, "LB": LB, "XLB": XLB, "BSM": BSM, "WZMS": WZMS, "X": X, "Y": Y });
                });
                if (i == 0) {
                    swal(
                        '没有选中的元素！',
                        '再试一次',
                        'warning'
                    );
                    if (document.getElementById("kxTips").style.display == 'block') {
                        //重置框选图表
                        document.getElementById('chart-pin').style.display = 'none';
                        document.getElementById('chart-c').style.display = 'none';
                        document.getElementById('kx_building').style.display = 'none';
                        //框选数量总数提示
                        document.getElementById("kxTips").style.display = 'none';
                    }
                    return;
                };
                document.getElementById("kxNum").innerHTML = i;//重置框选总数
                //alert(JSON.stringify(kx_building));
                table_kxbuilding.setData(kx_building);
                document.getElementById("kxTips").style.display = 'block';//框选数量总数提示
                document.getElementById('chart-pin').style.display = 'none';
                document.getElementById('chart-c').style.display = 'none';
                document.getElementById('dropdown-menu-kx').style.setProperty("width", '520px');
                document.getElementById('kx_building').style.display = 'block';
            } else {

                var layerName = [{ name: "hdzx", value: "活动中心" }, { name: "ss", value: "学生公寓" }, { name: "ct", value: "餐厅" }, { name: "sd", value: "商店" }, { name: "yl", value: "医疗" }, { name: "jd", value: "景点" }, { name: "tyc", value: "体育场" }, { name: "jxl", value: "教学楼" }, { name: "xndw", value: "校内单位" }, { name: "gjz", value: "古建筑" }, { name: "other", value: "其他" }];

                seriesData = [];
                legendData = [];
                onlyValue = [];
                var all = 0;
                for (var j = 0; j < layerName.length; j++) {
                    var k = 0;
                    var kxtc = layerName[j].name;
                    //alert(kxtc);
                    var markerNum = 0;
                    eval(kxtc + "vectorSource").forEachFeatureIntersectingExtent(extent, function (feature) {
                        markerNum++;
                        allFeatures.push(feature);
                        if (feature) {
                            k++;
                        }
                    });

                    if (k != 0) {
                        seriesData.push({ name: layerName[j].value, value: markerNum });
                        legendData.push(layerName[j].value);
                        onlyValue.push(markerNum);
                    }

                    all += k;
                };
                if (all == 0) {
                    swal(
                        '没有选中的元素！',
                        '再试一次',
                        'warning'
                    );
                    if (document.getElementById("kxTips").style.display == 'block') {
                        //重置框选图表
                        document.getElementById('chart-pin').style.display = 'none';
                        document.getElementById('chart-c').style.display = 'none';
                        document.getElementById('kx_building').style.display = 'none';
                        //框选数量总数提示
                        document.getElementById("kxTips").style.display = 'none';
                    }
                    return;
                };

                document.getElementById("kxTips").style.display = 'block';//框选数量总数提示
                document.getElementById("kxNum").innerHTML = all;//重置框选总数
                document.getElementById('kx_building').style.display = 'none';
                document.getElementById('chart-pin').style.display = 'block';
                document.getElementById('chart-c').style.display = 'block';
                document.getElementById('dropdown-menu-kx').style.setProperty("width", '520px');
                // 指定图表的配置项和数据

                option = {//饼图
                    title: {
                        text: '信息查询统计',
                        subtext: '框选结果-饼状图',
                        x: 'center'
                    },
                    tooltip: {
                        trigger: 'item',
                        formatter: "{a} <br />{b} : {c} ({d}%)"
                    },
                    legend: {
                        type: 'scroll',
                        orient: 'vertical',
                        right: 10,
                        top: 20,
                        bottom: 20,
                        data: legendData,
                        selected: selected
                    },
                    series: [
                        {
                            name: '数量',
                            type: 'pie',
                            radius: '55%',
                            center: ['40%', '50%'],
                            data: seriesData,
                            itemStyle: {
                                emphasis: {
                                    shadowBlur: 10,
                                    shadowOffsetX: 0,
                                    shadowColor: 'rgba(0, 0, 0, 0.5)'
                                }
                            }
                        }
                    ]
                };

                option2 = {//柱状图
                    title: {
                        text: '信息查询统计',
                        subtext: '框选结果-柱状图',
                        x: 'center'
                    },
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {            // 坐标轴指示器，坐标轴触发有效
                            type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
                        }
                    },
                    grid: {
                        left: '3%',
                        right: '4%',
                        bottom: '3%',
                        containLabel: true
                    },
                    xAxis: [
                        {
                            type: 'category',
                            data: legendData,
                            axisTick: {
                                alignWithLabel: true
                            },
                            axisLabel: {
                                interval: 0,
                                rotate: 40
                            }
                        }
                    ],
                    yAxis: [
                        {
                            type: 'value',

                        }
                    ],
                    series: [
                        {
                            name: '数量',
                            type: 'bar',
                            barWidth: '60%',
                            itemStyle: {
                                normal: {
                                    color: function (params) {
                                        var colorList = ['#C33531', '#EFE42A', '#64BD3D', '#EE9201', '#29AAE3', '#B74AE5', '#0AAF9F', '#E89589', '#16A085', '#4A235A', '#C39BD3 ', '#F9E79F', '#BA4A00', '#ECF0F1', '#616A6B', '#EAF2F8', '#4A235A', '#3498DB'];
                                        return colorList[params.dataIndex]
                                    }
                                },
                            },
                            data: onlyValue
                        }
                    ]
                };


                option3 = {//折线图
                    color: ['#3398DB'],
                    title: {
                        text: '信息查询统计',
                        subtext: '框选结果-折线图',
                        x: 'center'
                    },
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {            // 坐标轴指示器，坐标轴触发有效
                            type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
                        }
                    },
                    xAxis: {
                        type: 'category',
                        data: legendData,
                        axisLabel: {
                            interval: 0,
                            rotate: 40
                        }
                    },
                    yAxis: {
                        type: 'value',
                        minInterval: 1,
                    },
                    series: [{
                        data: onlyValue,
                        type: 'line'
                    }]
                };
                myChart.clear();
                myChart.setOption(eval($('#chart-c').val()));
            }
        }
    });

    $("#chart-c").change(function () {
        //地图POI框选图表改变事件
        if (document.getElementById('chart-pin').style.display == 'none')
        {
            //alert(document.getElementById('chart-pin').style.display);
            return;
        }

        myChart.clear();
        myChart.setOption(eval($('#chart-c').val()));
    });

    $("#gxdchart-c").change(function () {
        //二维管线框选图表改变事件
        if (document.getElementById("gx").checked) {
            gxChart.clear();
            gxChart.setOption(eval($('#gxdchart-c').val() + 'x'));
        }
        if (document.getElementById("gd").checked) {
            gdChart.clear();
            gdChart.setOption(eval($('#gxdchart-c').val()));
        }
    });

    $("#kx").click(function () {
        //map.removeInteraction(draw);
        //重新进行绘制
        //measureLayer.getSource().clear();
        kxLayer.getSource().clear();
        paintingLayer.getSource().clear();
        map.removeInteraction(drawCircle_xx);
        map.addInteraction(dragBox);
        map.getOverlays().clear();
        map.addOverlay(popup);
        $("#qx").prop('class', 'btn btn-warning');
    });

    $("#qx").click(function () {
        kxLayer.getSource().clear();
        paintingLayer.getSource().clear();
        map.removeInteraction(dragBox);
        map.addInteraction(drawCircle_xx);
        map.getOverlays().clear();
        map.addOverlay(popup);
        $("#kx").prop('class', 'btn btn-warning');
    });

    $('#kx_qc').click(function () {
        map.removeInteraction(dragBox);
        map.removeInteraction(drawCircle_xx);
        map.getOverlays().clear();
        map.addOverlay(popup);
        paintingLayer.getSource().clear();
        kxLayer.getSource().clear();
        $("#qx").prop('class', 'btn btn-warning');
        $("#kx").prop('class', 'btn btn-warning');
        document.getElementById('chart-pin').style.display = 'none';
        document.getElementById('chart-c').style.display = 'none';
        document.getElementById('kx_building').style.display = 'none';
        document.getElementById('kxTips').style.display = 'none';
        document.getElementById('dropdown-menu-kx').style.setProperty("width", '400px');
    });


    /*----------------------------添加框选表格----------------------------*/
    var table_kxbuilding = new Tabulator("#kx_building", {
        //data: kx_building,
        height: "300px",
        layout: "fitColumns",
        columns: [
            { formatter: "rownum", align: "center", frozen: true, width: 40 },
            {
                formatter: locationIcon, width: 20, align: "center", cellClick: function (e, cell) {
                    var geom = new Array();
                    geom[0] = cell.getRow().getData().X - 70;
                    geom[1] = cell.getRow().getData().Y;
                    var geom1 = new Array();
                    geom1[0] = cell.getRow().getData().X;
                    geom1[1] = cell.getRow().getData().Y;

                    view.animate({
                        center: (geom),
                        duration: 500,
                    });
                    view.animate({
                        zoom: 10,
                        duration: 500,
                    });
                    element.style.display = 'block';
                    popup.setPosition(geom1);
                    pass = cell.getRow().getData().MC;
                    content.innerHTML = '<h5>' + cell.getRow().getData().MC + '</h5><hr>' + '<a onclick="show()">详细信息>></a>';
                }
            },
            {
                formatter: detialIcon, width: 20, align: "center", cellClick: function (e, cell) {
                    $(element).popover('destroy');

                    var markerID = cell.getRow().getData().BSM;
                    var markerName = cell.getRow().getData().MC;
                  
                    document.getElementById("video").innerHTML = '';
                    document.getElementById("video").innerHTML = '<li style="font-size:15px;"><strong>视频查看:&nbsp;&nbsp;</strong></li>';
                    document.getElementById("video").style.display = "none";

                    document.getElementById("viewer").innerHTML = '';
                    document.getElementById("viewer").innerHTML = '<li style="font-size:15px"><strong>图片查看:&nbsp;&nbsp;</strong></li>';
                    $.ajax({
                        type: "GET",
                        url: "getFileNum",
                        data: { BSM: markerID, type: "image" },
                        success: function (data) {
                            if (data.length == 0) {
                                return;
                            };

                            for (var j = 0; j < data.length; j++) {
                                var pathImg = data[j].substring(7);
                                document.getElementById("viewer").innerHTML += '<li><img data-original=' + pathImg + ' src=' + pathImg + ' alt="图片1" style="width:100px"></li>&nbsp;&nbsp;';
                            };
                            viewer.update();
                        },
                        error: function () {

                            document.getElementById("viewer").innerHTML += '<li><img data-original=~/Source/none/pic/1.png src=/Source/none/pic/1.png alt="图片1" style="width:100px"></li>&nbsp;&nbsp;';
                        }
                    });

                    $.ajax({
                        type: "GET",
                        url: "getFileNum",
                        data: { BSM: markerID, type: "video" },
                        success: function (data) {
                            if (data.length == 0) {
                                return;
                            };

                            document.getElementById("video").style.display = "block";

                            for (var j = 0; j < data.length; j++) {
                                var pathImg = data[j].substring(7);
                                document.getElementById("video").innerHTML += '<li><video id="example_video_1" class="video-js vjs-default-skin" controls preload="none" width="400" height="200" poster="/images/BG.png" data-setup="{}"><source src=' + pathImg + ' /></video></li>';
                            };
                            viewer.update();
                        },
                        error: function () {

                            document.getElementById("video").innerHTML += '<li><video id="example_video_1" class="video-js vjs-default-skin" controls preload="none" width="400" height="200" poster="/images/BG.png" data-setup="{}"><source src="/Source/' + markerID + '/video/1.mov" type="video/mov" /></video></li>';
                        }
                    });

                    $('#myModal2').modal();
                    $("#myModalLabel2").text(cell.getRow().getData().MC);
                    $("#fontlb").text(cell.getRow().getData().LB + " " + cell.getRow().getData().XLB);
                    $("#fontwzms").text(cell.getRow().getData().WZMS);
                    
                  
                }
            },

            { title: "建筑名称", field: "MC", width: 236 },
            { title: "类别", field: "LB", width: 80 },
            { title: "细类别", field: "XLB", width: 80 }
        ],
    });
        /*--------------------添加框选表格结束---------------------------*/

        /*------------------添加地图框选工具结束-------------------------*/

      /*======================================框选工具结束======================================*/

     /*========================================测量工具========================================*/

    //创建一个WGS84球体对象
    var wgs84Sphere = new ol.Sphere(6378137);
    //创建一个当前要绘制的对象
    var sketch = new ol.Feature();
    //创建一个帮助提示框对象
    var helpTooltipElement;
    //创建一个帮助提示信息对象
    var helpTooltip;
    //创建一个测量提示框对象
    var measureTooltipElement;
    //创建一个测量提示信息对象
    var measureTooltip;
    //继续绘制多边形的提示信息
    var continuePolygonMsg = '点击地图继续绘制多边形';
    //继续绘制线段的提示信息
    var continueLineMsg = '点击地图继续绘制线段';
    //定义一个交互式绘图对象
    var draw;

    //鼠标移动触发的函数
    var pointerMoveHandler = function (evt) {
        //Indicates if the map is currently being dragged.
        //Only set for POINTERDRAG and POINTERMOVE events. Default is false.
        //如果是平移地图则直接结束
        if (evt.dragging) {
            return;
        }
        //帮助提示信息
        var helpMsg = '点击开始绘制测量路线';

        if (sketch) {
            //Get the feature's default geometry.
            //A feature may have any number of named geometries.
            //获取绘图对象的几何要素
            var geom = sketch.getGeometry();
            //如果当前绘制的几何要素是多边形，则将绘制提示信息设置为多边形绘制提示信息
            //如果当前绘制的几何要素是多线段，则将绘制提示信息设置为多线段绘制提示信息
            if (geom instanceof ol.geom.Polygon) {
                helpMsg = continuePolygonMsg;
            } else if (geom instanceof ol.geom.LineString) {
                helpMsg = continueLineMsg;
            }
        }
        //设置帮助提示要素的内标签为帮助提示信息
        helpTooltipElement.innerHTML = helpMsg;
        //设置帮助提示信息的位置
        //The coordinate in view projection corresponding to the original browser event.
        helpTooltip.setPosition(evt.coordinate);
        //移除帮助提示要素的隐藏样式
        $(helpTooltipElement).removeClass('hidden');
    };

    //创建帮助提示框
    function createHelpTooltip() {
        //如果已经存在帮助提示框则移除
        if (helpTooltipElement) {
            helpTooltipElement.parentNode.removeChild(helpTooltipElement);
        }
        //创建帮助提示要素的div
        helpTooltipElement = document.createElement('div');
        //设置帮助提示要素的样式
        helpTooltipElement.className = 'tooltip hidden';
        //创建一个帮助提示的覆盖标注
        helpTooltip = new ol.Overlay({
            element: helpTooltipElement,
            offset: [15, 0],
            positioning: 'center-left',
        });
        //将帮助提示的覆盖标注添加到地图中
        map.addOverlay(helpTooltip);
    }
    //创建测量提示框
    function createMeasureTooltip() {
        //创建测量提示框的div
        measureTooltipElement = document.createElement('div');
        measureTooltipElement.setAttribute('id', 'lengthLabel');
        //设置测量提示要素的样式
        measureTooltipElement.className = 'tooltip tooltip-measure';
        //创建一个测量提示的覆盖标注
        measureTooltip = new ol.Overlay({
            element: measureTooltipElement,
            offset: [0, -15],
            positioning: 'bottom-center',
        });
        //将测量提示的覆盖标注添加到地图中
        map.addOverlay(measureTooltip);
    }
    //测量类型发生改变时触发事件
    /*typeSelect.onchange = function () {
    //移除之前的绘制对象
    map.removeInteraction(draw);
    //重新进行绘制
    addInteraction();
    };*/


    //格式化测量长度
    var formatLength = function (line) {
        //定义长度变量
        var length;
        //计算平面距离
        length = Math.round(line.getLength() * 100) / 100;
        //定义输出变量
        var output;
        //如果长度大于1000，则使用km单位，否则使用m单位
        /*if (length > 1000) {
        output = (Math.round(length / 1000 * 100) / 100) + ' ' + 'km'; //换算成KM单位
        } else {
        output = (Math.round(length * 100) / 100) + ' ' + 'm'; //m为单位
        }*/
        output = (Math.round(length * 100) / 100) + ' ' + 'm'; //一直以m为单位
        return output;
    };

    //格式化测量面积
    var formatArea = function (polygon) {
        //定义面积变量
        var area;
        //获取平面面积
        area = polygon.getArea();
        //定义输出变量
        var output;
        //当面积大于10000时，转换为平方千米，否则为平方米
        /*if (area > 10000) {
        output = (Math.round(area / 1000000 * 100) / 100) + ' ' + 'km<sup>2</sup>';
        } else {
        output = (Math.round(area * 100) / 100) + ' ' + 'm<sup>2</sup>';
        }*/
        output = (Math.round(area * 100) / 100) + ' ' + 'm<sup>2</sup>';//一直以平方米为单位
        return output;
    };

    //添加交互式绘图对象的函数
    function addInteraction(e) {
        // 获取当前选择的绘制类型
        // var type = typeSelect.value == 'area' ? 'Polygon' : 'LineString';
        var type = e.toString();
        //创建一个交互式绘图对象
        draw = new ol.interaction.Draw({
            //绘制的数据源
            source: measureLayer.getSource(),
            //绘制类型
            type: type,
            //样式
            style: new ol.style.Style({
                fill: new ol.style.Fill({
                    color: 'rgba(255,255,255,0.2)'
                }),
                stroke: new ol.style.Stroke({
                    color: 'rgba(0,0,0,0.5)',
                    lineDash: [10, 10],
                    width: 2
                }),
                image: new ol.style.Circle({
                    radius: 5,
                    stroke: new ol.style.Stroke({
                        color: 'rgba(0,0,0,0.7)'
                    }),
                    fill: new ol.style.Fill({
                        color: 'rgba(255,255,255,0.2)'
                    })
                })
            })
        });
        //将交互绘图对象添加到地图中
        map.addInteraction(draw);

        //创建测量提示框
        createMeasureTooltip();
        //创建帮助提示框
        createHelpTooltip();

        //定义一个事件监听
        var listener;
        //定义一个控制鼠标点击次数的变量
        var count = 0;
        //绘制开始事件
        draw.on('drawstart', function (evt) {
            //The feature being drawn.
            sketch = evt.feature;
            //提示框的坐标
            var tooltipCoord = evt.coordinate;
            //监听几何要素的change事件
            //Increases the revision counter and dispatches a 'change' event.

            listener = sketch.getGeometry().on('change', function (evt) {
                //The event target.
                //获取绘制的几何对象
                var geom = evt.target;
                //定义一个输出对象，用于记录面积和长度
                var output;
                if (geom instanceof ol.geom.Polygon) {
                    map.removeEventListener('singleclick');
                    map.removeEventListener('dblclick');
                    //输出多边形的面积
                    output = formatArea(geom);
                    //Return an interior point of the polygon.
                    //获取多变形内部点的坐标
                    tooltipCoord = geom.getInteriorPoint().getCoordinates();
                } else if (geom instanceof ol.geom.LineString) {
                    //输出多线段的长度
                    output = formatLength(geom);
                    //Return the last coordinate of the geometry.
                    //获取多线段的最后一个点的坐标
                    tooltipCoord = geom.getLastCoordinate();
                }

                //设置测量提示框的内标签为最终输出结果
                measureTooltipElement.innerHTML = output;
                //设置测量提示信息的位置坐标
                measureTooltip.setPosition(tooltipCoord);
            });

            //地图单击事件
            map.on('singleclick', function (evt) {
                //设置测量提示信息的位置坐标，用来确定鼠标点击后测量提示框的位置
                measureTooltip.setPosition(evt.coordinate);
                //如果是第一次点击，则设置测量提示框的文本内容为起点
                if (count == 0) {
                    measureTooltipElement.innerHTML = "起点";
                }
                //根据鼠标点击位置生成一个点
                var point = new ol.geom.Point(evt.coordinate);
                //将该点要素添加到矢量数据源中
                measureSource.addFeature(new ol.Feature(point));
                //更改测量提示框的样式，使测量提示框可见
                measureTooltipElement.className = 'tooltip tooltip-static';
                //创建测量提示框
                createMeasureTooltip();
                //点击次数增加
                count++;
            });

            //地图双击事件
            map.on('dblclick', function (evt) {
                //根据
                var point = new ol.geom.Point(evt.coordinate);
                measureSource.addFeature(new ol.Feature(point));
            });
        }, this);
        //绘制结束事件
        draw.on('drawend', function (evt) {
            count = 0;
            //设置测量提示框的样式
            measureTooltipElement.className = 'tooltip tooltip-static';
            //Set the offset for this overlay.
            //设置偏移量
            measureTooltip.setOffset([0, -7]);
            //清空绘制要素
            sketch = null;
            //清空测量提示要素
            measureTooltipElement = null;
            //创建测量提示框
            createMeasureTooltip();
            //Removes an event listener using the key returned by on() or once().
            //移除事件监听
            ol.Observable.unByKey(listener);
            //移除地图单击事件
            map.removeEventListener('singleclick');
        }, this);
    }


    $('#mb').click(function () {
        //移除之前的绘制对象
        map.removeInteraction(draw);
        //重新进行绘制
        var g_type = $('#mb').val();
        //添加交互绘图对象
        addInteraction(g_type);

        //触发pointermove事件
        map.on('pointermove', pointerMoveHandler);

        //当鼠标移除地图视图的时为帮助提示要素添加隐藏样式
        $(map.getViewport()).on('mouseout', function () {
            $(helpTooltipElement).addClass('hidden');
        });
    });

    $('#mb2').click(function () {
        //移除之前的绘制对象
        map.removeInteraction(draw);
        //重新进行绘制
        var g_type = $('#mb2').val();
        //添加交互绘图对象
        addInteraction(g_type);

        //触发pointermove事件
        map.on('pointermove', pointerMoveHandler);

        //当鼠标移除地图视图的时为帮助提示要素添加隐藏样式
        $(map.getViewport()).on('mouseout', function () {
            $(helpTooltipElement).addClass('hidden');
        });
    });

    $('#cb').click(function () {

        map.removeInteraction(draw);
        //重新进行绘制
        measureLayer.getSource().clear();
        map.getOverlays().clear();
        map.addOverlay(popup);
        element.style.display = 'block';

    });
    /*======================================测量工具结束======================================*/



    /*======================================自定义图层切换面板======================================*/
    $("#xxfw").change(function () {
        if (document.getElementById("xxfw").checked) {
            ssLayer.setVisible(true);
            otherLayer.setVisible(true);
            jxlLayer.setVisible(true);
            ctLayer.setVisible(true);
            gjzLayer.setVisible(true);
            xndwLayer.setVisible(true);
            tycLayer.setVisible(true);
            sdLayer.setVisible(true);
            ylLayer.setVisible(true);
            jdLayer.setVisible(true);
            hdzxLayer.setVisible(true);
            $('#sub').find('input[type=checkbox]').prop("checked", true);
        } else {
            ssLayer.setVisible(false);
            otherLayer.setVisible(false);
            jxlLayer.setVisible(false);
            ctLayer.setVisible(false);
            gjzLayer.setVisible(false);
            xndwLayer.setVisible(false);
            tycLayer.setVisible(false);
            sdLayer.setVisible(false);
            ylLayer.setVisible(false);
            jdLayer.setVisible(false);
            hdzxLayer.setVisible(false);
            $('#sub').find('input[type=checkbox]').prop("checked", false);
        }
    });
    $("#ssLayer").change(function () {
        if (document.getElementById("ssLayer").checked) {
            ssLayer.setVisible(true);
        } else {
            ssLayer.setVisible(false);
        }
    });
    $("#jxlLayer").change(function () {
        if (document.getElementById("jxlLayer").checked) {
            jxlLayer.setVisible(true);
        } else {
            jxlLayer.setVisible(false);
        }
    });
    $("#ctLayer").change(function () {
        if (document.getElementById("ctLayer").checked) {
            ctLayer.setVisible(true);
        } else {
            ctLayer.setVisible(false);
        }
    });
    $("#gjzLayer").change(function () {
        if (document.getElementById("gjzLayer").checked) {
            gjzLayer.setVisible(true);
        } else {
            gjzLayer.setVisible(false);
        }
    });
    $("#xndwLayer").change(function () {
        if (document.getElementById("xndwLayer").checked) {
            xndwLayer.setVisible(true);
        } else {
            xndwLayer.setVisible(false);
        }
    });
    $("#tycLayer").change(function () {
        if (document.getElementById("tycLayer").checked) {
            tycLayer.setVisible(true);
        } else {
            tycLayer.setVisible(false);
        }
    });
    $("#sdLayer").change(function () {
        if (document.getElementById("sdLayer").checked) {
            sdLayer.setVisible(true);
        } else {
            sdLayer.setVisible(false);
        }
    });
    $("#ylLayer").change(function () {
        if (document.getElementById("ylLayer").checked) {
            ylLayer.setVisible(true);
        } else {
            ylLayer.setVisible(false);
        }
    });
    $("#jdLayer").change(function () {
        if (document.getElementById("jdLayer").checked) {
            jdLayer.setVisible(true);
        } else {
            jdLayer.setVisible(false);
        }
    });
    $("#hdzxLayer").change(function () {
        if (document.getElementById("hdzxLayer").checked) {
            hdzxLayer.setVisible(true);
        } else {
            hdzxLayer.setVisible(false);
        }
    });
    $("#otherLayer").change(function () {
        if (document.getElementById("otherLayer").checked) {
            otherLayer.setVisible(true);
        } else {
            otherLayer.setVisible(false);
        }
    });


    //控制基础图层只能多选一
    $('#sub2').find('input[type=checkbox]').bind('click', function () {
        //当前的checkbox是否选中
        if (this.checked) {
            //除当前的checkbox其他的都不选中
            $("#sub2").find('input[type=checkbox]').not(this).attr("checked", false);
        } else {
            //未选中的处理
            alert("完了，你把底图全关了");
        }
        if (document.getElementById("baseshapeLayer").checked) {
            baseshapeLayer.setVisible(true);
        } else {
            baseshapeLayer.setVisible(false);
        }

        if (document.getElementById("basesatelitedLayer").checked) {
            basesatelitedLayer.setVisible(true);
        } else {
            basesatelitedLayer.setVisible(false);
        }

        if (document.getElementById("baselandscapeLayer").checked) {
            baselandscapeLayer.setVisible(true);
        } else {
            baselandscapeLayer.setVisible(false);
        }

    });

        /*===============================自定义图层切换面板结束===============================*/

        /*======================================道路检索======================================*/
    $("#btn-search").click(function () {
        searchLayer.getSource().clear();
        //var v = $("#text-search").val();
        var v = $("#text-search").find("option:selected").text();
        var searchRequest4 = new ol.format.WFS().writeGetFeature({
            srsName: 'EPSG:2385',
            featureNS: 'http://www.qdkcy.org',//命名空间url
            featurePrefix: 'pipeline',//工作区名称
            featureTypes: ['pipeline:HDLRCL'],//查询图层，可以同一个工作区下多个图层，逗号隔开
            outputFormat: 'application/json',
            filter: ol.format.filter.like('NAME', v)
        });

        fetch("@ViewBag.roadURLs", {
            method: 'POST',
            body: new XMLSerializer().serializeToString(searchRequest4)
        }).then(function (response) {
            //console.log(response);
            return response.json();
        }).then(function (json) {
            var fs = new ol.format.GeoJSON().readFeatures(json);
            if (fs.length == 0) {
                swal(
                    '道路名称不存在！',
                    '换一个道路名称试试',
                    'warning'
                );
            }
            for (var i = 0; i < fs.length; i++) {
                var f = fs[i];
                var searchStyle = new ol.style.Style({
                    fill: new ol.style.Fill({
                        color: 'rgba(0, 0, 0, 1)',
                    }),
                    stroke: new ol.style.Stroke({
                        color: 'rgba(65, 105, 225, 0.7)',
                        width: 15
                    })
                });
                f.setStyle(searchStyle);
                searchvectorSource.addFeature(f);
                var coord = f.getGeometry().getLineString(0).getCoordinateAt(0.5);
                var marker = new ol.Feature({
                    type: 'road',
                    id: (i + 1).toString(),
                    geometry: new ol.geom.Point(coord),
                    labelPoint: new ol.geom.Point(coord),
                    name: f.get("NAME")
                });
                marker.setId(i);
                marker.setStyle(searchLayerFeatureStyle(marker));
                searchvectorSource.addFeature(marker);
                view.animate({
                    center: (coord),
                    duration: 500,
                });
                view.animate({
                    zoom: 9,
                    duration: 500,
                });

            }
        });
    });
        /*======================================道路检索结束======================================*/


/*function ListNode(val) {
    this.val = val;
    this.next = null;
   };

var head = new ListNode(1);
head.next = new ListNode(2);
head.next.next = new ListNode(3);
head.next.next.next = new ListNode(4);
head.next.next.next.next = new ListNode(5);

//递归算法
var p=new ListNode();
var reverseList = function(head) {
    
    if(head==null || head.next==null)return head;
    
    p=reverseList(head.next);
    head.next.next=head;
    head.next=null;
    
   
    return p;
    
};
    reverseList(head);*/
</script>
<script src="~/vtour/tour.js"></script>
<script src="~/js/gis/scene.js"></script>
<script src="~/js/xlsx.full.min.js"></script>